Title: IBM Migration to Rational Rhapsody 8.0.5 - United States

Text:
migration; migrating; upgrade; upgrading; rhapsody 8.0.5; rhapsody 805; 8.0.5; 805; v8.0.5 PRODUCT DOCUMENTATION

ABSTRACT
 This document contains information about issues that you might encounter when you migrate existing Rational Rhapsody projects to version 8.0.5. 

CONTENT





Internal Block Diagram elements - structured view 


Beginning in release 8.0.5, when you add elements to an Internal Block Diagram, they are displayed in Structured view (no compartments) by default, rather than Specification view, as was the case previously.




Default Type for elements such as attributes 


Prior to release 8.0.5, when you added model elements such as attributes, the default Type for the element reflected the value of the General::Model::DefaultType property at the project level. This was the case even if you created a stereotype for which this property was overridden.

This behavior has been changed in release 8.0.5. Now, if you create a "new term" stereotype applicable to a model element such as Class, and modify the value of the General::Model::DefaultType property for this "new term", the default Type for new attributes is taken from the value set for the DefaultType property for the "new term".

You can see an example of this change if you use the DDS profile in a model and add an attribute to a topicStruct.

To preserve the previous modeling behavior for pre-8.0.5 models, the General::Model::TakeDefaultTypeValueFromProject property was added to the backward compatibility settings for C++ with a value of True. If you want to use the new behavior with pre-8.0.5 models, change the value of TakeDefaultTypeValueFromProject to False and reload the model.




Linking to static versions of run-time libraries 


Release 8.0.5 includes the ability to link to static versions of run-time libraries. This feature is controlled by the new UseLIBCMT property, which has been added to the various Microsoft environments. The value of this property is then included in a number of conditional statements in the makefiles generated for these environments. So if you open an existing pre-8.0.5 model in the current release and generate code for one of these environments, you will see a number of differences in the generated makefile.




ReporterPLUS reports 


Prior to release 8.0.5, the reports generated by Rational Rhapsody ReporterPLUS were not always displayed correctly on computers with Java 7 or later versions of Java 6. This issue has been corrected in release 8.0.5.

If you run Rational Rhapsody 8.0.5 on a computer with a relatively old version of Java, you might find that the fixes included in the current release negatively impact the appearance of ReporterPLUS reports. If you experience such problems, you can have ReporterPLUS generate reports in the previous format by adding the following text to your rhapsody.ini file:

[ReporterPLUS] 
UseJavaPre7=TRUE 


Changes to Frameworks 


"New" operator that does not throw exceptions The OXF framework now contains additional pairs of new/delete operators that can be used to prevent an exception from being thrown if an object is not allocated.

The implementations of the GEN, GEN_BY_GUI and GEN_BY_X macros have been modified to take into account a variable called OM_USE_NOTHROW_GEN. To use the "no throw" approach, you define the variable OM_USE_NOTHROW_GEN.

This addition to the framework entailed changes to the following files in the C++ OXF:

 * OXFGenMacros.h
 * OXFMemoryManagerMacros.h
 * OXFMemoryPoolsMacros.h

Linking to static versions of run-time libraries As mentioned above, release 8.0.5 includes the ability to link to static versions of run-time libraries. The addition of this feature entailed changes to all the ms*.mak files in the C and C++ frameworks.

Removal of compilation warning A compilation warning was removed from the OMSFunctionTimer file in the C++ OXF.




Profiles 


Location of the ModelSynchronization profile In release 8.0.5, the ModelSynchronization profile was moved from the <product installation path>\Profiles\AUTOSAR directory to the <product installation path>\Profiles\ModelSynchronization directory. When you open existing models that include a reference to this profile, Rational Rhapsody prompts you to specify the new location of the profile.

Changes for the DDS profile Beginning in release 8.0.5, Rational Rhapsody uses different properties in order to generate code for DDS keys. To ensure that the correct code is generated for existing DDS (Data Distribution Service for Real-Time Systems) models, the CPP_CG::Configuration::UsePre805DdsCG property was added to the backward compatibility settings for C++ with a value of True.