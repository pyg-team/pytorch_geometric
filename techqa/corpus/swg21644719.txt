Title: IBM Native OutOfMemoryError in fillInStackTrace on X86 platforms - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 An OutOfMemoryError or Crash can occur when the JVM exception handler stack overflows, on a 32-bit V7.0 IBM WebSphere Application Server 

SYMPTOM
A native out of memory error or SIGSEGV/GPF is seen during exception handling on x86 based platforms (Linux/Windows) under WebSphere Application Server V7.0.0.29 or lower Fix Pack levels. 

From a javacore:

Dump Event "systhrow" (00040000) Detail "java/lang/OutOfMemoryError" 
"Failed to create stack trace (most likely due to lack of OS memory)" 

Current thread:
"WebContainer : 7" J9VMThread:0x62DBDE00, j9thread_t:0x5A57C0FC
Java callstack:
at java/lang/Throwable.fillInStackTrace(Native Method)
at java/lang/Throwable.<init>(Throwable.java:56(Compiled Code))
at java/lang/Throwable.<init>(Throwable.java:67(Compiled Code))
at java/lang/NullPointerException.<init>(NullPointerException.java:46
at com/ibm/ws/util/ClauseTable.get(ClauseTable.java:58(Compiled Code)
at com/ibm/ws/util/ClauseNode.traverse(ClauseNode.java:117(Compiled Code))
at com/ibm/ws/util/URIMatcher.match(URIMatcher.java:181(Compiled Code))
at com/ibm/ws/webcontainer/extension/DefaultExtensionProcessor
.handleRequest(DefaultExtensionProcessor.java:420(Compiled Code))
Native callstack:
rasDumpHookExceptionSysthrow+0x63 (trigger.c:1401, 0x0053E2F3
J9HookDispatch+0x8a (hookable.c:175, 0x002010BA
setCurrentExceptionWithCause+0x3ad (exceptionsupport.c:602,
setCurrentException+0x16 (exceptionsupport.c:412, 0x00438826
setCurrentExceptionUTF+0x8a (exceptionsupport.c:49, 0x004388EA
setNativeOutOfMemoryError+0x41 (exceptionsupport.c:830, 0x004391C1
throwNativeOutOfMemoryError+0x64 (javamisc.asm:377, 0x0043F5E4
setCurrentExceptionWithCause+0x303 (exceptionsupport.c:583, 0x00
setCurrentException+0x16 (exceptionsupport.c:412, 0x00438826
jitHandleNullPointerExceptionTrap+0x192 (nathelp.asm:3923, 0x013EA002
javaProtectedThreadProc+0x7d (vmthread.c:1682, 0x0046D30D
j9sig_protect+0x41 (j9signal.c:144, 0x0021C241 [J9PRT24+0xc241])
javaThreadProc+0x35 (vmthread.c:264, 0x0046DB45 [j9vm24+0x3db45])
thread_wrapper+0xbf (j9thread.c:971, 0x00023F4F [J9THR24+0x3f4f])
_endthread+0xaa (0x7C34940F [msvcr71+0x940f])
BaseThreadInitThunk+0x12 (0x75E5339A [kernel32+0x1339a])
RtlInitializeExceptionChain+0x63 (0x77689EF2 [ntdll+0x39ef2])
RtlInitializeExceptionChain+0x36 (0x77689EC5 [ntdll+0x39ec5])


CAUSE
Java SDK 6.0 defect fixed in IV38051 


IV38051: UNEXPECTED BEHAVIOUR DURING EXCEPTION HANDLING ON X86 PLATFORMS
http://www.ibm.com/support/docview.wss?uid=swg1IV38051 [http://www.ibm.com/support/docview.wss?uid=swg1IV38051]


DIAGNOSING THE PROBLEM
Check javacore or system dump at the time of the problem. The current thread would have fillInStackTrace in java callstack and jitHandleNullPointerExceptionTrap in native callstack.



RESOLVING THE PROBLEM
Install Java SDK v6.0 SR 14 which contains APAR IV38051. 


This Service Release can be found at this link:
http://www.ibm.com/developerworks/java/jdk/linux/download.html#java6 [http://www.ibm.com/developerworks/java/jdk/linux/download.html#java6]

RELATED INFORMATION
 IV38051: UNEXPECTED BEHAVIOUR DURING EXCEPTION HANDLING [http://www.ibm.com/support/docview.wss?uid=swg1IV38051]
Recommended fixes for WebSphere Application Server [http://www.ibm.com/support/docview.wss?uid=swg27004980]