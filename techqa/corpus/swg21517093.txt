Title: IBM Update on deduplication function - United States

Text:
nco_p_ncpmonitor; deduplication TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 When 'Identifier & AlertKey' are unchanged, other columns of 'alerts.status' in ObjectServer don't get updated upon receiving a followup instance of an event. Is it possible to update specific columns(e.g Node)upon receiving every instance of an event? 

SYMPTOM
Node, NodeAlias, LocalNodeAlias attributes are unchanged


CAUSE
By default, the 'deduplication' automation doesn't update any attributes of 'alerts.status' except: "Tally, LastOccurrence, StateChange, InternalLast, Summary, AlertKey,"

DIAGNOSING THE PROBLEM
For e.g. 

Lets say we have discovered 'DeviceA with IPAddress as '10.10.10.10', when the device goes down, the Poller raises ICMP failure event. 

If 'DeviceA' IPAddress is changed to '20.20.20.20' and rediscovered, and upon successful rediscovery, the existing Model/NCIM record is updated with new IP.

For some reason, if you still have old failure event in the ObjectServer of DeviceA against '10.10.10.10', and if the new IP(20.20.20.20) goes down, the Poller will raise another instance and the event get deduplicated in ObjectServer and the 'Summary' has an accurate IP where as other columns (Node, NodeAlias, LocalNodeAlias) would still reflect the old IP i.e. 10.10.10.10


RESOLVING THE PROBLEM
The ObjectServer manages the deduplication process, but you can also configure this process in the probe rules file. Use the update function to specify which fields of an alert are to be updated if the alert is deduplicated. This allows deduplication rules to be set on a per-event basis.


For e.g. you can update following section of $NCHOME/probes/<arch>/nco_p_ncpmonitor.rules to update Node, NodeAlias, LocalNodeAlias on all Chassis ping failures on a per-event basis:

switch ($EventName)
{
case "NmosPingFail" | "POLL-DefaultChassisPing" | "POLL-DefaultInterfacePing" | "NmosSnmpPollFail":
#
# For polling type events store the polling station's
# IP Address in the RemoteNodeAlias field
#
@RemoteNodeAlias = $AgentAddress
update(@Node, TRUE)
update(@NodeAlias, TRUE)
update(@LocalNodeAlias, TRUE) 

More about the function 'update' can be found at @ http://publib.boulder.ibm.com/infocenter/tivihelp/v8r1/topic/com.ibm.netcool_OMNIbus.doc_7.3.1/omnibus/wip/probegtwy/reference/omn_prb_updatededupfnc.html [http://publib.boulder.ibm.com/infocenter/tivihelp/v8r1/topic/com.ibm.netcool_OMNIbus.doc_7.3.1/omnibus/wip/probegtwy/reference/omn_prb_updatededupfnc.html]