Title: IBM Configuring a FileNet Content Engine Object store is causing significant performance degradation - United States

Text:
Force Case Insensitive Search; function-based index; generated column; lower; lower function; slow searches TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 After enabling Force Case Insensitive Search searching for content and/or opening folders becomes unusually slow. 

SYMPTOM
Searching for object store content and/or opening folders is very slow.


CAUSE
After enabling Force Case Insensitive Search in FEM on the object store, function-based indexes were not created in the Oracle object store database. 

The problem occurs when the database engine used is either Oracle or DB2. When enabling Force Case Insensitive Search on the object store, search and browse performance instantly becomes very slow compared to before this setting was enabled.


ENVIRONMENT
Content Engine 4.0.1, 4.5.0, 4.5.1, 5.0 with supported Oracle or DB2 versions.



DIAGNOSING THE PROBLEM
Enable a Content Engine trace using the option 'database'. Search for the word LOWER. You will see a query similar in structure to this: 

DB - SQL executed in xxxxxx msecs: SQL: "SELECT T0.is_current, T0.is_reserved, T0.mime_type, T0.version_status, T0.major_version_number, T0.minor_version_number, T0.version_series_id, T0.object_id, T0.u32_documenttitle, T0.creator, T0.modify_user, T0.modify_date, T0.content_size, T0.compound_document_state, T0.u60_recordinformation, T0.u60_recordinformation_home, T0.object_class_id, T0.security_id, T0.security_folder_id, T1.object_id, T1.object_class_id, T1.tail_id, T1.security_id FROM DocVersion T0 INNER JOIN Relationship T1 ON T0.object_id = T1.head_id WHERE (T0.home_id IS NULL and (T1.object_class_id IN (?, ?)) and T1.home_id IS NULL AND ( ( T1.tail_id = ? AND ( ( LOWER(T0.mime_type) IS NULL OR LOWER(T0.mime_type) <> LOWER(?)) AND LOWER(T0.u32_documenttitle) LIKE LOWER(?))))) ORDER BY LOWER(T0.u32_documenttitle) ASC" In-bindings: 

Notice the word LOWER for the column mime_type and documenttitle columns. In a situation where the select statement takes an unusual amount of time in milliseconds very likely the indexes used are not function-based indexes. The equivalent in IBM DB2 are generated columns.


RESOLVING THE PROBLEM
Enable a CE trace with the 'database' option enabled (only) 

 1. Search for the word LOWER (as explained above) 
 2. Confirm whether or not the database indexes used are function-based or not. If they are not, the regular indexes have to be dropped in order to be able to create a function-based index.