Title: IBM IV14296: JAVA JIT - EXECUTING UNLOADED METHODS - United States

Text:
 SUBSCRIBE TO THIS APAR
By subscribing, you receive periodic emails alerting you to the status of the APAR, along with a link to the fix after it becomes available. You can track this item individually or track all items by product.

Notify me when this APAR changes.

Notify me when an APAR for this component changes.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  Error Message: Crash in the VM's getOriginalROMMethod() method
   when executing getStackTrace()
   Other symptoms are possible as the problem allows the execution
   of code from an unloaded method using a 'this' pointer of an
   incompatible type.
   .
   Stack Trace: {libj9vm24.so}{getOriginalROMMethod}
   
   {libjclscar_24.so}{getStackTrace}
   {libjclscar_24.so}{java_lang_J9VMInternals_getStackTrace}
   .
   The problem can only occur on PowerPC (AIX or LinuxPPC). Only
   the "default" 64bit JVM can experience a crash due to this
   problem. If the -Xcompressedrefs option was used then the
   problem can not possibly result in a crash or any other issue.
   
   
    
   
   

LOCAL FIX
 *  The only way to avoid the problem is to use the compressedrefs
   JVM or the 32bit JVM. The compressedrefs JVM can be used by
   specifying the command line argument -Xcompressedrefs. Using the
   compressedrefs JVM is very unlikely to cause a performance
   regression, in fact, it is likely to show a performance
   improvement over the default 64bit JVM.
   
   
    
   
   

PROBLEM SUMMARY
 *  The JIT fails to properly patch a reference to a class that is
   being unloaded. If the memory space used by the unloaded class
   is reused to load a new class, and the new class is of the same
   class hierarchy as the unloaded class, then the code of the
   unloaded class could be executed when a reference to an object
   of the new class is passed to a JIT compiled method who had
   inlined a method from the unloaded class.
   
   
    
   
   

PROBLEM CONCLUSION
 *  This defect will be fixed in:
   
   6.0.1 SR2
   6.0.0 SR11
   7.0.0 SR1
   .
   The JIT was modified so that it correctly patches class
   references such that it is impossible for a patched reference to
   be mistaken for a class that was loaded in the same memory space
   as the unloaded class.
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   IV14296
   
   
 * REPORTED COMPONENT NAME
   JIT
   
   
 * REPORTED COMPONENT ID
   620700124
   
   
 * REPORTED RELEASE
   260
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2012-02-01
   
   
 * CLOSED DATE
   2012-02-15
   
   
 * LAST MODIFIED DATE
   2012-06-01
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   JIT
   
   
 * FIXED COMPONENT ID
   620700124
   
   

APPLICABLE COMPONENT LEVELS
 * R260 PSY
   UP
   
   
 * R600 PSY
   UP