Title: IBM Enabling logging for Stand-Alone IBM Daeja ViewONE Professional - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 How do you enable the applet viewer logging for a stand-alone installation of IBM Daeja ViewONE Professional? 

ANSWER
With a stand-alone installation of the viewer, logging is enabled in several different areas depending on the logs required and the version installed. 

The client logging appears in the client side Java control panel rather then in a log file so you will need to set your Java console on the client machine to be shown prior to the issue being reproduced. 

Java Control Panel 

For the Java console to be shown please access the Java control panel. 

Under the Advanced tab you should see the Java console hidden by default. Please make sure this is set to "Show console" during your testing.
[/support/docview.wss?uid=swg21989261&aid=1] [/support/docview.wss?uid=swg21989261&aid=1]

You may be asked to enable any of the three top options in this control panel so please take a note of these for your reference.
If asked for "full Java logging" this would indicate that you should enable "tracing", "logging" and "Show applet lifecycle exceptions" as part of your log gathering procedure.

Enabling the client side traces 

This is done by adding additional parameters to the HTML page that runs the viewer. 

Using the simplest example of this page (in an HTML format) it would look like: 


<HTML>
<body>
<APPLET CODEBASE="http://Servername:port/v1files"
ARCHIVE = "viewone.jar"
CODE = "start.jiViewONE.class"
NAME = "viewONE"
WIDTH = "100%"
HEIGHT = "97%"
HSPACE = "0"
VSPACE = "0"
ALIGN = "middle"
MAYSCRIPT="True">

<param name="trace" value="true">
<param name="tracenet" value="true">
<param name="tracefilter" value="true">

</HTML>

The three most common trace parameters have been added in the example above but this does vary depending on the issue you are trying to resolve.
You may have integrated the viewer using JSP files, or many other methods, but the above information should be able to be applied by your internal team.

Once these have been added correctly you can verify this by opening the viewer and accessing the shift+t window. 

[/support/docview.wss?uid=swg21989261&aid=2] [/support/docview.wss?uid=swg21989261&aid=2]

As you can see the three traces are listed as HTML parameters on the left and as debug settings on the right.
It is generally recommended that you add the tracing via the viewer source page rather then via this window, as ticking the boxes on this page only enables the traces for this viewer session and using this method they cannot be enabled prior to start up. So any annotation load viewer startup or document load issue may well have occurred prior to you being able to enable them here.

Enabling the server side traces and log file location

There are two server components to the viewer for which you may need to gather the logging (streamer or redaction).

Depending on the age of your system these can be configured using different properties files.

Older systems may be using the streamer.properties file for the streamer and burner.properties or redactlocal.properties files for redaction.
Newer systems use the viewone.properties file for all viewer server components.
In these files we specify the log name, location and the traces that are being enabled, but they all use the same format regardless of whether they are old or new. Each file is outlined in its default and modified format below.

The file being used, i.e. viewone.properties or the older *.properties, is defined in the web.xml file.
Older web.xml files vary in style and content but the new one is standard, so rather then specify all the old web.xml file variations it is much simpler to outline the new one. If your web.xml file does not look like this then it is the old web.xml file:

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>
<servlet>
<servlet-name>viewone</servlet-name>
<display-name>ViewONE Servlet</display-name>
<description>Servlet for returning image tiles</description>
<servlet-class>com.ibm.dv.server.Platform</servlet-class>
</servlet>

<servlet-mapping>
<servlet-name>viewone</servlet-name>
<url-pattern>/v1files/*</url-pattern>
</servlet-mapping>

The properties files and the web.xml file are generally located in the same place; \webapps\viewone\WEB-INF (depending on webapp name).

streamer.properties

By default the streamer.properties file looks like this:

# streamer.properties File
# Add property values into this file to override the defaults
# See streamer.pdf for valid properties and values

You would define the logfile location like this:

logFile=WEB-INF/viewone.log

The traces take the following format:

tracestreamer=true
tracenet=true

So you would end up with the following in your streamer.properties file:

# streamer.properties File
# Add property values into this file to override the defaults
# See streamer.pdf for valid properties and values

logFile=WEB-INF/viewone.log
tracestreamer=true
tracenet=true

burner.properties or redactlocal.properties

By default the burner.properties and the redactlocal.properties file looks like this:

# burner.properties 
# Add property values into this file to override the defaults
# See burner servlet source for valid properties and values

finalImagePath=burnt
tiffSaveColor=true
tiffSaveMonoG4=true

You would define the log file location like this:

logfile=WEB-INF/viewone.log

The traces take the following format:

traceburn=true
tracenet=true

So you would end up with the following in your burner.properties or redactlocal.properties file:

# burner.properties File
# Add property values into this file to override the defaults
# See burner servlet source for valid properties and values

finalImagePath=burnt
tiffSaveColor=true
tiffSaveMonoG4=true
logFile=c:\\_backend\\logs\\burner.log
traceburn=true
tracenet=true

viewone.properties

By default the viewone.properties file looks like this:

logfile=WEB-INF/viewone.log
modifiedDocumentCheckMethod=uniqueid

You can see the log file is already specified

The traces take the following format:

traceburn=true
tracestreamer=true
tracenet=true

So you would end up with the following in your viewer.properties file:

logfile=WEB-INF/viewone.log
modifiedDocumentCheckMethod=uniqueid
traceburn=true
tracestreamer=true
tracenet=true


Please note in any of the server side logging properties files, for the log file location, this can be specified as relative to the root of the application or an absolute path can be used.

logFile=c:\\streamer\\streamer.log
logFile=WEB-INF/viewone.log

Please note that any backslashes (\) should be entered as a double backslash.

***********************************************************************************************

Your support person should confirm the logging and traces that will be required.

Depending on the logging added you may just need to close the browser and then access the viewer from a fresh session (client logging) or for the sever logging to be detected you will need to restart the web application.

Some logging will increase the load on your server so these should only be enabled when required and disabled once the issue is resolved to your satisfaction.
If you would like clarification on if the server load will be affected by adding the logging please ask your IBM support representative at the point of their request.

Please zip up all requested logging prior to delivery to IBM.