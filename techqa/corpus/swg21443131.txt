Title: IBM Unable to resolve username when routing mail to the LDAP name - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM
 

In an environment where Lotus Domino is using both a Domino directory and 3rd party LDAP directory (via directory assistance) for the same users, mail is not routing when LDAP returns a LDAP DN or UID.

This is a very specific configuration: 

 * The users exist in the Domino Directory with person documents. Directory Assistance is also used for the same users to a 3rd party LDAP server (such as Tivoli Directory Server or Microsoft Active Directory). 
 * The person documents in the Domino Directory contain the LDAP DN in the LTPAUsername field on the Administration Tab of the person document. 
 * The user's LDAP record contains the Notes Distinguished Name in the NotesDN attribute. 
 * Directory Assistance is configured to map the LDAP names to the NotesDN field. 
 * A group has been created that exists only in the LDAP server which contains uniqueMembers or Members whose value is the UID or LDAP DN. The group does not exist in the Domino Directory. 
 * An email is addressed to the LDAP group using its mail attribute, for example: myldapgroup@ibm.com


Symptoms: 

 * The sender receives a delivery failure report that the user is unknown. 
 * In addition, the following errors may or may not be displayed on the Domino console when Domino is starting:

schemaattr.cpp:393 - SyntaxForSup(dn) is unknown - please add it to SyntaxForSup. 
schemaattr.cpp:393 - SyntaxForSup(name) is unknown - please add it to SyntaxForSup. 
This configuration should be working under normal circumstances. The steps are: 

 1. The Domino server asks the LDAP server for the group, 
 2. Domino asks for members or uniqueMembers of the group 
 3. LDAP names are sent to Domino, for example: uid=cn=joe user,ou=west,dc=ibm,dc=com 
 4. Domino converts the commas into slashes. For example: uid=cn=joe user/ou=west/dc=ibm/dc=com 
 5. Domino looks up the name in the $Users view of the Domino Directory and finds the person document for the user. This name should match what is in the person document LTPAUsername field (Administration Tab). For example: uid=cn=joe user/ou=west/dc=ibm/dc=com. Note: This name does not necessarily match the user's Domino DN. 
 6. At this point Domino can send the mail message to the user's Domino name.


Problem: When step 3 was occurring, Domino did not recognize the syntax used by the 3rd party LDAP schema. When LDAP sent the names to Domino, the attribute type for member or uniqueMember was identified with a superior (SUP) class called "dn". Domino was expecting the syntax for SUP to be in numeric object identifier (OID) format. Because it was not numeric, Domino considered the name to be a directory string instead of an actual distinguished name and did not properly convert the name. This causes all subsequent steps to fail. 

In LDAP protocol, the LDAP server must define the schema, which contains the syntax used by the attributes and their superiors (SUP). SUP= SUPerior objectclass. If an objectclass is part of a hierarchy it must be the same type (STRUCTURAL, AUXIALIARY) as any SUPerior objectClass. Domino was not obeying RFC 2252 which says that OIDs can be numeric or description/names (NOID or Desc).


RESOLVING THE PROBLEM
 

This issue has been reported to Lotus Quality Engineering as SPR# CBRN877R3S [http://www.lotus.com/ldd/r5fixlist.nsf/SPR/CBRN877R3S] and is expected to be fixed in Notes and Domino 8.5.3.

The schema syntax can be checked by exporting the LDAP schema to a text file. LDAPSearch is a utility that comes with the Domino server and the Notes client. It can be used to get this information. Launch a command prompt on windows or a terminal window on Unix. 

Please note: The bind credentials specified in directory assistance should be used for the search. This ensures that the search results are from an authenitcated bind and that the permissions of the bind account are used. For an anonymous bind, leave off the -D and -w options. 

Substitute the fully qualified internet hostname of the LDAP server where you see "hostname" in the below syntax examples. Substitute the LDAP bind username where you see "username" and the bind password where you see "password". 

The syntax is:
ldapsearch -h hostname -D username -w password -b "cn=schema" -s base objectclass=* ldapsyntaxes >schema.txt

If you just want attribute types
ldapsearch -h hostname -D username -w password -b "cn=schema" -s base "objectclass=*" attributetypes >attributetypes.txt

Or if you just want objectclasses
ldapsearch -h hostname -D username -w password -b "cn=schema" -s base "objectclass=*" objectclasses >objectclasses.txt

To go along with the above example, checking the uniqueMember attribute, here's an example of a description OID:
attributetypes=( 2.5.4.31 NAME ( 'member' ) DESC 'Defines a member of a set' SUP dn USAGE userApplications )
attributetypes: ( 2.5.4.50 NAME ( 'uniqueMember' ) DESC 'Defines a member of a set' SUP dn USAGE userApplications )

Here is an example of a numeric OID:
attributetypes=( 2.5.4.31 NAME 'member' DESC 'Identifies the distinguished names for each member of the group.' SUP 2.5.4.49 EQUALITY 2.5.13.1 )
attributetypes=( 2.5.4.50 NAME 'uniqueMember' DESC 'Identifies a group of names associated with an entry where each name was given a uniqueIdentifier to ensure its uniqueness. A value for the uniqueMember attribute is a DN followed by the uniqueIdentifier.' EQUALITY 2.5.13.1)




 * 
 *