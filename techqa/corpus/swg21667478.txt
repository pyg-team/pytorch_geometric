Title: IBM Guidelines for configuring .NET applications in AppScan Source - United States

Text:
AppScan Source; Application; configuration; import; C; C++; Visual Studio TECHNOTE (FAQ)

QUESTION
 What are some guidelines and best practices for configuring your .NET applications in IBM Security AppScan Source? 

ANSWER
 

 1. You should verify the system requirements:  1. Detailed System Requirements for IBM AppScanSource [http://www.ibm.com/support/docview.wss?uid=swg27027486]
        
        
        
    
    
 2. You should get the right people involved:  1. Development team members working with the source code.  * People who can help set up a test environment containing the complete buildable source of the application.
        
        
     2. Build team members who are responsible for building the code (if applicable).
        
        
        
    
    
 3. You should have the right artifacts and information available:  1. The exact version of the Microsoft Visual Studio IDE used to develop the .NET application. 
     2. Visual Studio Solution (.sln) file.
        Note: For C++.NET managed code scanning, a solution file is not necessary. Scanning of this kind of application must be performed using the .NET Assembly Application type and method. 
     3. All of the .dll and .pdb files for the application:  * Needed if the .sln file is not present or the application spans multiple .sln files. 
         * Must be built using debug mode.
        
        
     4. AppScan Source for Analysis installed (latest version is recommended). 
     5. AppScan Enterprise Server installed or available (latest version is recommended).
        
        
        
    
    
 4. You should first try the established methods for configuring applications in AppScan Source:  1. Access the locally-installed or IBM Knowledge Center help according to this link:
        http://www.ibm.com/support/docview.wss?uid=swg21619340 [http://www.ibm.com/support/docview.wss?uid=swg21619340] 
     2. Locate the section on configuring applications in AppScan Source.
        
    
     * IMPORTANT: You should ensure that the solution builds without error in Visual Studio. Build problems will impair scans performed in AppScan Source.
       
       
    
    
 5. If a Visual Studio solution file is present and contains the whole application:  1. Import the .sln file using the steps in the hyperlink noted above. 
     2. Follow the steps in the sections below to resolve any errors that occur in the scan or that appear in the Console tab.
        
        
        
    
    
 6. Additional scenarios:  1. If there are problems using the above method 
     2. If the application is broken down into multiple solution files 
     3. If the Visual Studio solution file is not present
        
        If any of these scenarios occur, consider:  * In Visual Studio, build the code in its entirety in debug mode. 
         * Copy all .dll and .pdb files used by the application into a single folder. An easy way of collecting all the necessary .dll and .pdb files is to do a search for files with those extensions from the application's root folder using Windows Search. 
         * There will usually be multiple .dll files with the same name used as dependencies. Copying all of them will cause naming conflicts. In most cases, taking the first one and skipping any of the duplicate files should be fine. If there are concerns, the Build team/person should be consulted for direction. 
         * In AppScan Source, create a new application and add a .NET assembly project to it. The project should contain only the .dll files for which there are associated .pdb files and source code. Scan the new application. 
         * Of key importance is having the right .dll files in the .NET Assembly project. Failures at this stage commonly stem from not having all of, or the correct, .dll files in the project. This should be the first consideration in resolving any scan issues.
           
           
        
        
    
    
 7. Troubleshooting errors and addressing common problems:  1. When problems occur while scanning, check the following:  * Examine the Console tab in AppScan Source. This will provide the first indication of a problem in scan preparation or with the scan itself. 
         * Examine the AppScan Source log files at these paths:  * Default Windows path - C:\ProgramData\IBM\AppScanSource\logs 
            * Default Linux path -/var/opt/ibm/appscansource/logs 
            * Default OS X Path - /Users/Shared/AppScanSource/logs
           
           
         * Verify that all dependencies needed by the application are present and accessible.
        
        
     2. Build errors are the most common issues when scanning .NET applications. Most build errors happen if there are one or more required .dll files missing when scanning. Repair the solution configuration in Visual Studio and/or add missing .dll files to the folder where the .dll files are stored. 
     3. Adding too many .dll files to any project can negatively impact scan time and results. Be certain that only the .dll files contained in a project are present.
    
    



(C) Copyright IBM® Corp. and its licensors 2014. All Rights Reserved. 
IBM, the IBM logo, are trademarks or registered trademarks of International Business Machines Corp. registered in many jurisdictions worldwide. Other product and service names might be trademarks of IBM or other companies. A current list of IBM trademarks is available on the web at Copyright and trademark information at http://www.ibm.com/legal/copytrade.shtml [http://www.ibm.com/legal/copytrade.shtml]. Linux is a registered trademark of Linus Torvalds in the United States, other countries, or both. Windows and the Windows logo are trademarks of Microsoft Corporation in the United States, other countries or both. Java™ and all Java-based trademarks and logos are trademarks or registered trademarks of Oracle and/or its affiliates. 

This documentation is provided for informational purposes only. 
INTERNATIONAL BUSINESS MACHINES CORPORATION PROVIDES THIS PUBLICATION "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Some states do not allow disclaimer of express or implied warranties in certain transactions, therefore, this statement may not apply to you. RELATED INFORMATION
 How to get to the help documentation [http://www.ibm.com/support/docview.wss?uid=swg21619340]
AppScan Source detailed system requirements [http://www.ibm.com/support/docview.wss?uid=swg27027486]