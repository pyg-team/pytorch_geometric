Title: IBM IZ68236: WEBSPHERE APPLICATION SERVER V7.0 STARTUP HANGS DURING MESSAGE DRIVEN BEAN ACTIVATION - United States

Text:
 SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS UNREPRODUCIBLE IN NEXT RELEASE.
    
   
   

ERROR DESCRIPTION
 *  A message-driven bean (MDB) is configured to use the
   WebSphere MQ v7.0 Resource Adapter. While starting a
   Java Message Service (JMS) application, the WebSphere
   Application Server startup hangs during MDB activation.
   
   This problem only happens if there are messages on the
   MQ queue upon application start, and multiple MDBs
   exist in the same J2EE application.  If all the messages
   from the MQ queue are deleted and the server is
   restarted, the start succeeds.
   
   The SystemOut.log shows two threads in a hung state.
   
   Thread 1 is reported hung with the following call stack:
   
   at java.lang.Object.wait(Native Method)
   at java.lang.Object.wait(Object.java:167)
   at com.ibm.ejs.container.MessageEndpointFactoryImpl.
   createEndpoint(MessageEndpointFactoryImpl.java:497)
   at com.ibm.mq.connector.inbound.WorkImpl.run(WorkImpl.java:189)
   at com.ibm.ejs.j2c.work.WorkProxy.run(WorkProxy.java:399)
   at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1550)
   
   
   Thread 2 is reported hung with the either this call stack:
   
   at java.lang.Object.wait(Native Method)
   at java.lang.Object.wait(Object.java:167)
   at  com.ibm.mq.jmqi.remote.internal.system.
   ReentrantMutex.acquire(ReentrantMutex.java:86)
   at com.ibm.mq.jmqi.remote.internal.RemoteHconn.
   requestDispatchLock(RemoteHconn.java:469)
   at com.ibm.mq.jmqi.remote.internal.RemoteFAP.
   MQCTL(RemoteFAP.java:1936)
   at com.ibm.msg.client.wmq.internal.WMQConsumerOwnerShadow.
   suspendAsyncService(WMQConsumerOwnerShadow.java:681)
   
   
   or this call stack:
   
   at java.lang.Object.wait(Native Method)
   at java.lang.Object.wait(Object.java:167)
   at com.ibm.mq.jmqi.JmqiWorkerThread.
   syncExec(JmqiWorkerThread.java:178)
   at com.ibm.mq.jmqi.local.LocalHconn.
   syncExec(LocalHconn.java:413)
   at com.ibm.mq.jmqi.local.LocalMQ.MQCTL(LocalMQ.java:2343)
   
   
    
   
   

LOCAL FIX
 *  Deleting messages from the MQ queue and restarting the WAS
   application server
   
   
    
   
   

PROBLEM SUMMARY
 *  ****************************************************************
   USERS AFFECTED:
   This issue affects users of the WebSphere Application
   Server V7.0 and V8.0 WebSphere MQ messaging provider who have
   multiple MDBs in the same J2EE application
   
   Platforms affected:
   All Distributed (iSeries, all Unix and Windows) +Java
   ****************************************************************
   PROBLEM DESCRIPTION:
   When a J2EE application is started, the Activation
   Specifications associated with the MDBs are started. This
   causes message delivery to commence. However, MDBs do
   not run until application startup completes.
   
   If a message is waiting to be processed, this blocks the
   start of other Activation Specification instances, and so
   application start up hangs.
   
   
    
   
   

PROBLEM CONCLUSION
 *  The solution for this issue is to set the WebSphere MQ
   Resource Adapter property:
   
   connectionConcurrency
   
   to the value 1 at the WebSphere Application Server Cell Scope.
   
   This means that every Activation Specification within WebSphere
   Application Server will create its own connection to JMS
   Connection to the specified queue manager, rather than
   potentially sharing a JMS Connection with multiple Activation
   Specifications.
   
   If the Activation Specification is connecting in CLIENT mode to
   a WebSphere MQ V6 queue manager, or a WebSphere MQ V7 queue
   manager in WebSphere MQ messaging provider migration mode
   (achieved by setting the Activation Specification
   property "Provider version" to the value 6), this change will
   result in an increase in the number of physical connections
   from the application server to the queue manager. This increase
   will be equal to the number of Activation Specifications that
   have been deployed into the application server.
   
   Systems with Activation Specifications connecting in CLIENT
   mode to a WebSphere MQ V7 queue manager in WebSphere MQ
   messaging provider normal mode (achieved by setting the
   Activation Specification property "Provider version" to the
   value 7, or leaving the property unset) may see an increase in
   connections to the queue manager, depending on the value of the
   WebSphere MQ channel property SHARECNV for the channel that the
   application server is connecting over, and the number of
   Activation Specifications which are deployed to the application
   server.
   
   Those systems that contain Activation Specifications connecting
   in BINDINGS mode will see no external differences in behaviour.
   
   
   To change the value of the connectionConcurrency property, the
   following steps need to be carried out:
   
   - Start WebSphere Application Server.
   - Bring up the WebSphere Administrative Console, and log in.
   - On the left of the Administrative Console, expand:
   
   Resources->
   Resource Adapters
   
   and click on the Resource Adapters link.
   - You should now see a list of Resource Adapters that have been
   installed into the application server. Ensure the:
   
   Scope
   
   drop down list near the top of the Resource adapters panel is
   set to:
   
   All scopes.
   
   - Just above the table showing all of the Resource Adapters,
   you should see a subheading called:
   
   Preferences
   
   Expand this, and select the:
   
   Show built-in resources
   
   checkbox. Click Apply.
   - The Administrative Console will now refresh, and show a list
   of Resource Adapters that have been installed. There should
   be three entries for the:
   
   WebSphere MQ Resource Adapter
   
   - Click on the entry for this Resource Adapter at the Cell
   Scope.
   - This should bring up the configuration panel for the Resource
   Adapter. On the left of this panel, click on the:
   
   Custom properties
   link.
   - When the Custom properties panel appears, you should see a
   table containing 7 entries. Click on the entry for:
   
   connectionConcurrency
   
   - In the next panel, change the value of this property to 1,
   and click on OK.
   - Save the configuration changes, and log off from the
   Administrative Console.
   - The application server needs to be stopped and restarted for
   this change to take affect.
   
   
   There is no code fix available for this issue.  In the next
   release of the product, WebSphere MQ v7.1, this configuration
   option, 'ConnectionConcurrency', has been removed.
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   IZ68236
   
   
 * REPORTED COMPONENT NAME
   WMQ AIX V7
   
   
 * REPORTED COMPONENT ID
   5724H7221
   
   
 * REPORTED RELEASE
   700
   
   
 * STATUS
   CLOSED UR1
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2010-01-18
   
   
 * CLOSED DATE
   2011-10-17
   
   
 * LAST MODIFIED DATE
   2014-10-10
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   WMQ AIX V7
   
   
 * FIXED COMPONENT ID
   5724H7221
   
   

APPLICABLE COMPONENT LEVELS
 * R700 PSY
   UP