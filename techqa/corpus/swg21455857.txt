Title: IBM Question regarding 64bit Java client - United States

Text:
MQ; Java; Client TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Your WebSphere MQ (WMQ) 64bit Javaâ„¢ client application gets an UnsatisfiedLinkError when connecting to a queue manager. 

SYMPTOM
We have installed the MQ 64 bit client. However, the directory /opt/mqm/java/lib64 contains only shared object files (*.so). There are no jar files contained in /opt/mqm/java/lib64. 

The only jar files are contained in /opt/mqm/java/lib. If we change the classpath for application to use /opt/mqm/java/lib64, we will get UnsatisfiedLinkError: Object not found. 


RESOLVING THE PROBLEM
The com.ibm.mq.jar, com.ibm.mqjms.jar and other MQ client jars should be present in the /$MQ_HOME/java/lib directory. The /$MQ_HOME/java/lib64 folder only contains native library files (*.so).

UnsatisfiedLinkErrorr is thrown when JVM cannot find an appropriate native-language definition of a method declared native. In other words, it means the JVM could not find correct native libraries, not missing jar files.

For a standalone Java/JMS application, native library path is specified on the JVM invocation command line. for example, for a 64-bit JVM: 

java -Djava.library.path=/opt/mqm/java/lib64 myApplication 

This allows the JVM to locate the appropriate native library for a bindings mode connection. 

Note : MQ provides a setjmsenv64 script to set the environment variables for running a WebSphere MQ classes for JMS application in a 64-bit JVM on a UNIX system. 

Refer to following information center links for details: 

 * MQ V7.5 [http://pic.dhe.ibm.com/infocenter/wmqv7/v7r5/topic/com.ibm.mq.dev.doc/q030610_.htm] 
 * MQ V7.1 [http://pic.dhe.ibm.com/infocenter/wmqv7/v7r1/topic/com.ibm.mq.doc/ja10330_.htm] 
 * MQ V7.0 [http://publib.boulder.ibm.com/infocenter/wmqv7/v7r0/topic/com.ibm.mq.csqzaw.doc/ja10330_.htm] 

 

HISTORICAL NUMBER
 68488 180 000