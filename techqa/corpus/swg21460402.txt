Title: IBM Installation Manager issue enabling all features using WebSphere Commerce V7.0 Developer - United States

Text:
WebSphere Commerce; FEP2; Installation Manager; OutOfMemory; OOM TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Attempts to enable all the Feature Pack 2 features result in an OutOfMemory Exception when using the IBM Installation Manager for WebSphere Commerce Developer. 

SYMPTOM
The enable all Feature Pack 2 features enablement process fails due to an OutOfMemory Exception. 

The enableALL_<datetime>.log reports the following errors: 

<WCDE70_inst>\components\common\xml\enableFeatureForToolkit.xml:52: The following error occurred while executing this line: 

<WCDE70_inst>\components\common\xml\enableFeatureForToolkit.xml:147: The following error occurred while executing this line: 

<WCDE70_inst>\components\common\xml\toolkitWorkspaceTask.xml:46: The following error occurred while executing this line: 

<WCDE70_inst>\components\common\xml\toolkitWorkspaceTask.xml:66: The following error occurred while executing this line: 

<WCDE70_inst>\components\common\xml\commonEnablementTasks.xml:517: The following error occurred while executing this line: 

<WCDE70_inst>\components\common\xml\commonEnablementTasks.xml:531: java.lang.OutOfMemoryError 

 at org.apache.tools.ant.ProjectHelper.addLocationToBuildException(ProjectHelper.java:539) 

 at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:384) 

 at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:107) 

 at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275) 

 at org.apache.tools.ant.Task.perform(Task.java:364) 

 at org.apache.tools.ant.taskdefs.Sequential.execute(Sequential.java:64) 

 at net.sf.antcontrib.logic.IfTask.execute(IfTask.java:217) 

 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 

 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48) 

 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 

 at java.lang.reflect.Method.invoke(Method.java:600) 

 at org.apache.tools.ant.TaskAdapter.execute(TaskAdapter.java:123) 

 at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275) 

 at org.apache.tools.ant.Task.perform(Task.java:364) 

 at org.apache.tools.ant.Target.execute(Target.java:341) 

 at org.apache.tools.ant.Target.performTasks(Target.java:369) 

 at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216) 

 at org.apache.tools.ant.Project.executeTarget(Project.java:1185) 

 at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40) 

 at org.eclipse.ant.internal.core.ant.EclipseDefaultExecutor.executeTargets(EclipseDefaultExecutor.java:32) 

 at org.apache.tools.ant.Project.executeTargets(Project.java:1068) 

 at org.eclipse.ant.internal.core.ant.InternalAntRunner.run(InternalAntRunner.java:663) 

 at org.eclipse.ant.internal.core.ant.InternalAntRunner.run(InternalAntRunner.java:535) 

 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 

 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48) 

 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 

 at java.lang.reflect.Method.invoke(Method.java:600) 

 at org.eclipse.ant.core.AntRunner.run(AntRunner.java:513) 

 at com.ibm.ant.extras.RunAnt.run(RunAnt.java:103) 

 at org.eclipse.ant.core.AntRunner.start(AntRunner.java:600) 

 at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:193) 

 at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110) 

 at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79) 

 at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:386) 

 at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179) 

 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 

 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48) 

 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 

 at java.lang.reflect.Method.invoke(Method.java:600) 

 at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549) 

 at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504) 

 at org.eclipse.equinox.launcher.Main.run(Main.java:1236) 

 at org.eclipse.equinox.launcher.Main.main(Main.java:1212)

CAUSE
The Installation Manager does not allocate enough Javaâ„¢ heap to execute the enablement process. 



ENVIRONMENT
IBM Installation Manager provided with WebSphere Commerce Developer 7.0.0.2 Feature Pack 2. 



DIAGNOSING THE PROBLEM
The execution of the enable all features ANT task requests more heap than the defined max heap size.



RESOLVING THE PROBLEM
Since the Installation Manager core is based on Eclipse RCP it is possible change the heap configuration adding VM arguments in the lauchpad script following these steps: 

1) Edit the file <Installation Manager inst path>\eclipse\IBMIM.ini; 

2) Add the heap max size according to the local resources (for example -Xmx512M will reserve 512MB for the heap) 

For more information follow the Eclipse FAQ: 

http://wiki.eclipse.org/FAQ_How_do_I_increase_the_heap_size_available_to_Eclipse%3F [http://wiki.eclipse.org/FAQ_How_do_I_increase_the_heap_size_available_to_Eclipse%3F] 

3) Save the file 

4) Restart the Installation Manager and run the enable all features task