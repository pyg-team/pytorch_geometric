Title: IBM PI17689: IBM Netezza queries using NOT EXISTS do not apply restrictions during join processing - United States

Text:
 SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS FIXED IF NEXT.
    
   
   

ERROR DESCRIPTION
 *  When you run a query with NOT EXISTS join on the IBM Netezza
   Platform Software no rows are returned.
   
   Here a sample scenario describing this issue:
   
   create temp table test
   (
   col1 varchar(24) NOT NULL,
   col2 int,
   col3 int,
   col4 int
   );
   
   insert into test values (1234567890,21,null,123);
   insert into test values (2222222222,11,null,null);
   insert into test values (3333333333,22,64,null);
   insert into test values (6767676767,33,15,321);
   
   select * from test a
   where not exists (select * from test b
   where a.col1 = b.col1
   and a.col2 = b.col2
   and a.col3 IS NULL
   and a.col4 IS NOT NULL);
   
   On a system that has the problem, the query applies the
   restrictions at the wrong level and no rows are returned:
   
   COL1 | COL2 | COL3 | COL4
   ------+------+------+------
   (0 rows)
   
   
    
   
   

LOCAL FIX
 *  No workaround is available.
   
   
    
   
   

PROBLEM SUMMARY
 *  ****************************************************************
   * USERS AFFECTED:                                              *
   * N/A                                                          *
   ****************************************************************
   * PROBLEM DESCRIPTION:                                         *
   * When the IBM Netezza Platform Software evaluates a NOT       *
   * EXISTS join, the filter predicates are pulled up and the     *
   * qualifier is not evaluated at the join level and this may    *
   * lead to incorrect results.                                   *
   *                                                              *
   * On a system where the fixed NPS release is installed, the    *
   * NOT EXISTS processing applies the restrictions to return     *
   * results. For the given example, four rows:                   *
   *                                                              *
   *                                                              *
   * select * from test;                                          *
   *     COL1    | COL2 | COL3 | COL4                             *
   * ------------+------+------+------                            *
   * 3333333333 |   22 |   64 |                                   *
   * 1234567890 |   21 |      |  123                              *
   * 6767676767 |   33 |   15 |  321                              *
   * 2222222222 |   11 |      |                                   *
   * (4 rows)                                                     *
   ****************************************************************
   * RECOMMENDATION:                                              *
   * N/A                                                          *
   ****************************************************************
   
   
    
   
   

PROBLEM CONCLUSION
 *  A fix has been released to address this issue in the following
   NPS releases:
   
   7.0.2.11-P1 and later
   7.0.4.3-P1 and later
   7.1.0.1 and later
   
   Note that performance could vary as a result of these fixes for
   a NOT EXISTS query.
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   PI17689
   
   
 * REPORTED COMPONENT NAME
   TWINFIN GENERIC
   
   
 * REPORTED COMPONENT ID
   TF1001GEN
   
   
 * REPORTED RELEASE
   100
   
   
 * STATUS
   CLOSED FIN
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2014-05-12
   
   
 * CLOSED DATE
   2014-06-23
   
   
 * LAST MODIFIED DATE
   2014-06-23
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION

APPLICABLE COMPONENT LEVELS
 * R100 PSY
   UP