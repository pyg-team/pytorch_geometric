Title: IBM Enforcing WS-Policy in the Multi-Protocol Gateway - United States

Text:
WS-Policy Multi-Protocol Gateway xs xg xi xb xm TECHNOTE (FAQ)

QUESTION
 The Multi-Protocol Gateway supports several options for request and response type. What settings do I choose to properly handle message requests and responses when I want to enforce WS-MediationPolicy or my own custom policy domain? How do I ensure that messages that do not match a modeled endpoint (such as, the endpoint that is specified in the WebSphere Service Registry and Repository REST Service Endpoint object) are rejected properly? 

CAUSE
The Multi-Protocol Gateway has options to specify the traffic type that originates from the server and from the client. When the request or response type is specified as SOAP, XML, or JSON, optimization can be applied to manage the messages of the specific content-type. If the request or response type is specified as non-XML (in the CLI, this is "preprocessed") or pass through (in the CLI, this is "unprocessed"), then special message handling optimization cannot be applied. 


Additionally, the Multi-Protocol Gateway Policy (Processing Policy) must be configured properly to ensure that messages that do not match a modeled endpoint are rejected by the gateway. This configuration ensures that messages, which are not intended to pass to the back end, are rejected. 

For more information about how to properly reject messages with a DataPower appliance processing policy, see technote 1640935 How to define the default behavior when no processing policy rules match. [http://www.ibm.com/support/docview.wss?uid=swg21640935] 
ANSWER
The Multi-Protocol Gateway must be configured to properly handle the message request and message response. 


When the request or response type is SOAP or XML: 

 * Set the Request Type and Response Type properties for the Multi-Protocol Gateway (SOAP/XML) 
 * Use default-accept-service-providers as the Multi-Protocol Gateway Processing Policy, or create your own Processing Policy with a "match-all" request rule that contains a filter action that references store:///filter-accept-service-providers.xsl. 
 * For WS-MediationPolicy, the ExecuteXSL and ValidateMessage behaviors apply to XML and SOAP messages only


When the request or response type is JSON:  * Set the Request Type and Response Type properties for the Multi-Protocol Gateway (JSON) 
 * Use default-accept-service-providers as the Processing Policy for the Multi-Protocol Gateway, or create your own Processing Policy with a "match-all" request rule that contains a filter action that references store:///filter-accept-service-providers.xsl, and uses NULL for the Input and Output contexts. 
 * For WS-MediationPolicy, the ExecuteXSL and ValidateMessage behaviors cannot be applied to a JSON message


When the request or response types are not SOAP, XML or JSON (for example, text or binary):  * Set the Request Type and Response Type properties for the Multi-Protocol Gateway (Non-XML) 
 * The default-accept-service-providers Processing Policy cannot be used as-is. Create your own Processing Policy and ensure that the policy contains a "match-all" request rule that contains a filter action that references store:///filter-accept-service-providers.xsl, and uses NULL for the Input and Output contexts. Ensure that the processing rules created for the processing policy has the Non-XML Processing property set to on. (This option is available only in the Object view for the processing rule, which can be found by typing Processing Rule in the Search field.) 
 * For WS-MediationPolicy, the ExecuteXSL and ValidateMessage behaviors apply to XML messages only and cause an XML schema validation failure for non-XML messages. 


For policy enforcement, the type of "Pass through" (unprocessed) for request or response is not recommended. With this setting, policy enforcement is bypassed on messages that do not contain a body (HTTP GET, HEAD, DELETE). Using this type can lead to unexpected results.  


Cross reference information Segment Product Component Platform Version Edition Business Integration WebSphere DataPower Integration Appliance XI52 6.0.0, 6.0.1 Business Integration WebSphere DataPower B2B Appliance XB62 6.0.0, 6.0.1 Business Integration WebSphere DataPower Service Gateway XG45 6.0.0, 6.0.1