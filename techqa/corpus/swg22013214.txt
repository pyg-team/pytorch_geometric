Title: IBM TRIRIGA UX ISO - Cannot format ISO datetime string in TRIRIGA Platform 3.5.2.3 - United States

Text:
TRIUX; TRIAPPDEVTOOLS; #supiwms; #iotsupp TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 In TRIRIGA 3.5.2.3 there is a need to provide a user-friendly datetime presentation for a custom UX application based on the CURRENT_USER data source. This issue does not occur in TRIRIGA Platform 3.5.3.x but you may not be able to upgrade from 3.5.2 to 3.5.3 for a few of months. 

SYMPTOM
Note that the Planned Start Date format has not been changed to be more easily readable. 

[/support/docview.wss?uid=swg22013214&amp;aid=1]


DIAGNOSING THE PROBLEM
Detailed description of problem: In testing TRIRIGA 3.5.3 used a function found in the stock Perceptive apps from the service-request.html file that does not work in 3.5.2.3. 
This works as follows: 

1) Under Model Designer, set a Data Source to CURRENT_USER 

2) Reference the CURRENT_USER Data Source, exposed name currentUser 

3) In the web page under template, set a reference to that data source: 

<triplat-ds id="currentUserDs" name="currentUser" data="{{currentUser}}"></triplat-ds>
4) Under the script section, setup a function that uses the currentUser data source: 

 convertDateTime: function(dateTime, currentUser) {
return this.formatDateWithTimeZone(dateTime, currentUser._TimeZoneId, 
currentUser._DateTimeFormat, currentUser._Locale);
},
5) Use that function in an Iron List to format a date out of TRIRIGA: 

[/support/docview.wss?uid=swg22013214&aid=2] [/support/docview.wss?uid=swg22013214&aid=2] 

This is what is returned from the CURRENT_USER data source:[/support/docview.wss?uid=swg22013214&aid=3] [/support/docview.wss?uid=swg22013214&aid=3] 

This is from the data source presented in the Iron List: 

[/support/docview.wss?uid=swg22013214&aid=4] [/support/docview.wss?uid=swg22013214&aid=4] 

6) As you can see below, itâ€™s not working. This is what is formatted/not formatted: 

[/support/docview.wss?uid=swg22013214&amp;aid=5] 

This is the Console error: 

[/support/docview.wss?uid=swg22013214&aid=6] [/support/docview.wss?uid=swg22013214&aid=6] 

The serviceRequest Perceptive application is not provided on the 3.5.2.x version. It appears that the functionality to convert the DateTime string is not provided either. 



RESOLVING THE PROBLEM
Manual Solution that can be applied 

Following is the code that can be used to implement your own date utilities. You will need the function and also two private functions (see below). You can get the source code from triplat-date-utilities doc page if you go to the beta site http://beta.tririga-dev.com/p/web/doc#!/triplat-date-utilities/ [http://beta.tririga-dev.com/p/web/doc] (open the developer console on Chrome and open the source tab, look for triplat-date-utilities.html)


/**
* Formats the ISO date string to a given time zone and a user date format.<br/>
* @param [https://rtc.tririga-dev.com/rtc/users/param] {String} isoString The string representation of the ISO date string (e.g. 1970-01-15T22:19:41.000-08:00).
* @param [https://rtc.tririga-dev.com/rtc/users/param] {String} timeZone The string representation of the time zone (e.g. Canada/Eastern).
* @param [https://rtc.tririga-dev.com/rtc/users/param] {String} format The user date format as set in the user's profile.
* @param [https://rtc.tririga-dev.com/rtc/users/param] {String} userLanguageCode The code of the language set in the user's profile.(en-US) 
*/
formatDateWithTimeZone: function(isoString, timeZone, userFormat, userLanguageCode) {
if(isoString != null && this._isIsoDateStringFormat(isoString)) {
var fixedFormat = this._convertToFixedMomentTzFormat(userFormat);
var mDatetime = moment(isoString);
if (timeZone != null) {
mDatetime = mDatetime.tz(timeZone); 
}
if (userLanguageCode != null) {
mDatetime = mDatetime.locale(userLanguageCode);
}
return mDatetime.formatWithJDF(fixedFormat);
}
},

/**
* To check if a string is a ISO date string format.
* @param [https://rtc.tririga-dev.com/rtc/users/param] {String} isoString The string representation of the ISO date string (e.g. 2010-01-20T22:00:10.000-08:00).
*/
_isIsoDateStringFormat: function(isoString){
if(isoString){
if((isoString.indexOf("T") > -1) && (isoString.length === moment().format("YYYY-MM-DDTHH:mm:ss.SSSZ").length || isoString.length === "YYYY-MM-DDTHH:mm:ss.SSSZ".length)){
return true;
}
return false;
}
return false;
}, 

_convertToFixedMomentTzFormat: function(format){
format = format || "MM/DD/YYYY hh:mm a";
if (format.replace(/[^z]/g, "").length===1){
format = format.replace("z", "zz")
} 

else if (format.replace(/[^z]/g, "").length===3){
format = format.replace("zzz", "zz")
}
else if (format.replace(/[^z]/g, "").length===4){
format = format.replace("zzzz", "zz")
}

if(format.replace(/[^M]/g,"").length===5){
format = format.replace("MMMMM", "MMMM");
}

var end = false;
var fixedFormat = format.replace(/\'/g, function(match) {
return (end = !end) ? '[' : ']'; 
});
return fixedFormat;
}





Cross reference information Segment Product Component Platform Version Edition Systems and Asset Management IBM TRIRIGA Systems and Asset Management IBM TRIRIGA Application Builder Systems and Asset Management IBM TRIRIGA Application Platform