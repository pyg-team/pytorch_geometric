Title: IBM DWC/WEBUI -  z/OS CONNECTOR INSTALL TIPS - United States

Text:
TWSz; TWS-z/OS; ITWS-z/OS; ITWSz; 5697WSZ01; 5697-WSZ; 5698-A17 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Available documentation on installation of the WebSphere-based zCONNECTOR for the TWSz GUI interfaces may be confusing. This technote provides additional guidance and explanation of the process. 

RESOLVING THE PROBLEM
When used with TWS-z/OS, the DWC (Distributed Workload Console) consists of four separate components: the internet browser installed on each user's desktop; the DWC server, the z/OS CONNECTOR, which serves as the "middleman" between the DWC and the fourth component, the TWSz TCPIP SERVER STARTED TASK, which executes on the same mainframe LPAR as the TWSz CONTROLLER. 

Setup and configuration of the SERVER STARTED task is well documented in the TWSz manuals. This technote discusses the zCONNECTOR installation and setup. 

The basic installation sequence is: 

1. Install the DWC. The DWC installation will also install the zConnector and the SHARED Embedded WebSphere Application Server. 

2. CREATE CONNECTOR ENGINE(s) (called INSTANCES in prior versions) This is the connection between the zConnector and the TWsz TCPIP server on the mainframe. 

3. Define the previously created engine(s) to the TDWC 

Some points to note: 

1) Use the default ports unless they are already in use on that machine. If you are taking over a partially installed/configured instance, be sure you know what ports were specified by your predecessor. 

 2) If installing on WINDOWS, the supplied TWSUser userid must not be the same as the machine name. 

3) A SILENT INSTALL must be performed while logged on as root (superuser) on a UNIX machine, or by an ADMINISTRATOR userid on a windows machine. 

+++++++++++++++ 

After the CONNECTOR code is installed, you must CREATE "ENGINES" (connector instances). This is done using the commands in the wastools directory created by the code installation. 

The primary command is createZosEngine (Note these commands and all their parameters are case sensitive) The createZosEngine command has many parameters, but only three are required. The syntax for the createZosEngine command is: 

createZosEngine -portNumber nnn -hostName mainframehostname -name XXXX 

where "nnn" is the portnumber in the SERVOPTS PORTNUMBER() parameter for the PIF/DIALOG/GUI SERVER started task on the mainframe. "mainframehostname" is either the DNSNAME or the dotted IP address of the mainframe LPAR where the server started task runs, and "XXXX" is your choice of a name for this CONNECTOR ENGINE. The selected name is used to tell the DWC which ENGINE it should use. 

+++++++++++++++ 

After the ENGINES are defined to the CONNECTOR, you must define them to the DWC. Select QUICK START, then click on the NEW ENGINE option, and fill in the fields in the pop-up box as follows. 

ENGINE TYPE: Select z/OS 

ENGINE NAME: You can put anything here you want. This field is a tag used only on this specific DWC instance. It should, however, be descriptive of the TWSz CONTROLLER with which it is associated and distinguished from OTHER engines 

HOSTNAME: This is the hostname or dotted IP address of the machine where the z/OS CONNECTOR is installed. 

PORTNUMBER: This defaults to the port used for access to the connector. This is the BOOT port and used for signing into the zconnector. The default bootstrap for V8.6 is 2809. If this is changed then it must be noted for access. 

REMOTE SERVER NAME: This is the field which causes the most confusion. Despite its name, the value supplied here MUST MATCH EXACTLY (case sensitive) the value specified in the "-name" parameter of the createZosEngine command. 

USERNAME: This must be a valid logon ID on the machine where the CONNECTOR runs 

PASSWORD: The password for the supplied USERNAME. 

The USERNAME and PASSWORD fields may be left blank, and the TDWC will then prompt for them whenever the ENGINE is opened. 

+++++++++++++++ 

When an engine is defined in the TDWC via the NEW ENGINES option, an entry is created in the Engines.xml file. likewise, user preferences such as defined views, column placement and spacing, and sort orders, etc. are saved in the preferences.xml file. These files may be distributed to a community of users so that all will have the same engine definitions, views, etc.