Title: IBM Indexing the History table for ClearQuest - United States

Text:
1127710; ClearQuest; Database; Configuration; Connectivity; DB2; Oracle; SQL Server; CQ; index; performance; history; speed TECHNOTE (FAQ)

QUESTION
 How can I index the History table to help improve performance in IBM® Rational® ClearQuest®? 

CAUSE
When databases become large, performance can drop for various actions. 


Prior to ClearQuest 7.0.0.0, the History table is not indexed by default when creating databases. The queries run against that table can return results in a linear fashion, incrementally slowing the database over time as the size increases.


ANSWER
If the ClearQuest databases were created with software versions prior to 7.0.0.0, these indexes likely do not exist. To potentially increase the performance on databases, apply an index to the History table. The following is an example of SQL code used to create an index for each. This can be done with PDSQL [http://ibm.com/support/docview.wss?rs=988&uid=swg21145079] or the vendor command line tools.


create index history_entity_idx on history (entitydef_id, entity_dbid);


This activity is available for IBM DB2®, Oracle, and Microsoft® SQL Server™. For more information on creating indexes for the back end databases, refer to your database administrator (DBA). 





BACKING UP FILES  Always make new database back-ups of your schema repository and user databases prior to making schema changes and performing database upgrades. Failure to create back-up copies can limit your ability to recover from a an upgrade failure, design change issues or other unforeseen failures.



RELATED INFORMATION
#How to index the Attachments tables for ClearQuest [http://www.ibm.com/support/docview.wss?uid=swg21130762]