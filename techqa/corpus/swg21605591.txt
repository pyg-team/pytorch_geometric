Title: IBM Using Cast Iron Studio custom function to convert the DateTime string in default format to another specific timezone - United States

Text:
DateTime; timezone TECHNOTE (FAQ)

QUESTION
 How do I use the Cast Iron Studio custom function to convert the DateTime string in default format to another specific timezone? 

ANSWER
The GetCurrentDateTime function in Cast Iron returns the current DateTime as per the timezone settings on the running machine. For example, in Studio it returns the current DateTime based on the machine on which the Studio is installed. On appliance, it returns the current DateTime based on the timezone that the appliance is set with. 

As the return value of GetCurrentDateTime varies, the following JavaScript can be used as custom function in Cast Iron to convert DateTime value of different timezone to the designated timezone. 

The first parameter ciDateTime takes a standard datetime format that Cast Iron 
provides, for example "2012-07-10T09:55:05.000+08:00". 

The second parameter timezoneOffset takes the timezone offset that this function converts to, for example 
JST, input +9 
EST, input -4 



//ciDateTime: The value of function 'GetCurrentDateTime' or any DateTime value in Cast Iron
//timezoneOffset: The timezone offset(in hour) of target DateTime
function convertDateTime(ciDateTime, timezoneOffset) {

/* Defines the function which will be used later to pad input string with leading '0' to total string length of 2 */
function rect(x){ 
x = x + ''; 
if(x.length==1) 
return '0' + x; 
else 
return x; 
} 

/* Create the DateTime value in JavaScript */

var ciYear = ciDateTime.substring(0, 4);
var ciMonth = ciDateTime.substring(5, 7);
var ciDay = ciDateTime.substring(8, 10);
var ciHour = ciDateTime.substring(11, 13);
var ciMin = ciDateTime.substring(14, 16);
var ciSec = ciDateTime.substring(17, 19);
var ciDate = new Date(ciYear, ciMonth, ciDay, ciHour, ciMin, ciSec);

/* Create the DateTime based on GMT+0 */

var ciJavaScriptDate = new Date(ciDate.getTime());
var utcDate = new Date(
ciJavaScriptDate.getTime() + 
(ciJavaScriptDate.getTimezoneOffset() * 60000));

/* Create the DateTime based on input paramter timezoneOffset(in hour) */

var targetDate = new Date(utcDate.getTime() + (3600000 * timezoneOffset));

/* Output the DateTime format string in format of 'yyyy-MM-dd HH:mm:ss' */

var formattedTargetDate = 
(targetDate.getYear() + 1900) + "-" + 
rect(targetDate.getMonth()) + "-" +
rect(targetDate.getDate()) + " " +
rect(targetDate.getHours()) + ":" +
rect(targetDate.getMinutes()) + ":" + 
rect(targetDate.getSeconds()); 

return formattedTargetDate;
}


The attached project file below shows the usage of this function.

TimeConversionExample.zip [/support/docview.wss?uid=swg21605591&aid=2]TimeConversionExample.zip [/support/docview.wss?uid=swg21605591&aid=1]