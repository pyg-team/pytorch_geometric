Title: IBM Known issues when importing C header files - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 The following are problems or restrictions that you might encounter when you use the IBM Integration Bus (IIB) or WebSphere Message Broker (WMB) Toolkit Version 6.0 or above to import a C header file to create a Message Model. 

Unless otherwise stated, they apply both to MRM Message Definition Files and to DFDL Schema Files. 



CAUSE
Limitations in the C importer technology used by the Message Brokers Toolkit.

DIAGNOSING THE PROBLEM
The defect numbers shown are for IBM internal use. 

 * The C construct typedef is not fully supported; you cannot create messages based on a typedef of an anonymous structure. (T24995 and T23468) 
 * (MRM only) The C importer creates global complex types and groups for any structures nested inside other structures. The names of these structures are auto-generated. If another structure defined within the header file has a name which happens to match an auto-generated name, its contents could be replaced with the contents of the nested structure, or vice versa. (T25215) 
 * If an empty struct or union is used as the basis for creating a message, two messages with the same name are created. (T24441) 
 * (MRM only) Bit fields within a C structure are imported but MRM does not support bit fields with lengths that are not a multiple of 8. The CWF Length Count, Leading Skip Count, Trailing Skip Count, and Byte Alignment property values might not be set properly and should be reviewed. (T23384) 
 * (DFDL only) Bit fields within a C structure are imported. The type is created as xs:hexBinary. This should be changed in the DFDL editor to match the C type. The DFDL Length, Length Units, Leading Skip, Trailing Skip, Alignment and Alignment Units property values might not be set properly and should be reviewed. 
 * The C importer does not handle the #if, #ifdef , #else, #elif macros properly. Before importing a C structure, remove these macros from the source file. (T25180.1 and T25181.1) 
 * Hexadecimal constants like int a[0x80] can cause an exception to be thrown during the import operation and must be replaced in the header file before import. (T25192.1) 
 * Octal constants like int a[080] are incorrectly interpreted as decimal constants and must be corrected using the MRM or DFDL editor. (T25258.1) 
 * Trigraphs are not supported. Replace trigraphs with the equivalent single character before importing the header file. (T23480.1) 
 * The C importer requires all programs to be syntactically correct on the target platform. Results are unpredictable if this is not the case; in some circumstances the Toolkit might crash. (T24440) 
 * (MRM only) You can use one mqsicreatemsgdefs command to import more than one header. However, if any of these headers contain a '#include' for any of the other headers that are being imported, more than one definition might be created for these headers. This causes 'duplicate definition' errors in the Message Set Project. To resolve these errors, delete the unwanted duplicate definitions. (T25639) 
 * When C type int is imported with the option 'Address size=64bit', elements of schema type xsd:int are created. These have an implicit range of a 32bit integer. Change the schema type of the element to 'xsd:long' to use values with 64bit range. (T25898.1) 
 * Importing C source where an anonymous structure contains an embedded structure might result in an exception. Ensure all structures have tags before importing the header file. (T37410). Example:
   struct mymessage_tag {
   int a;
   struct { // anonymous structure...
   int b1;
   struct myembstruct_tag { // ...containing a structure
   int c1;
   } c;
   } b;
   };
   
   
 * An exception might be thrown when importing an enum with a negative value. Remove the negative value before importing the header file. (T37409) 
 * Structure and element names entirely in uppercase or starting with an underscore might be altered on import. (T37411) 
 * Importing char arrays with 3 or more dimensions, when using the option to import strings as null terminated, can result in an incorrect maxLength facet. (T39394) 
 * Importing char arrays with 3 or more dimensions can cause a Javaâ„¢ exception to be thrown. Ensure the definitions created are correct. (T39550) 
 * The use of C or C++ reserved keywords causes the import to fail, but nothing in the report specifically indicates this. If your import fails without an obvious reason, examine the C header file carefully and ensure that it compiles correctly. Even if it does compile correctly, it might still contain C++ keywords such as 'compl', which cause the importer to fail.

RESOLVING THE PROBLEM
In general, if the C header file fails to import, the header file must be corrected before importing again. If the file imports successfully, the resulting message model can be corrected using the message definition editor. 

Any specific work arounds are detailed above. 




Cross reference information Segment Product Component Platform Version Edition Business Integration IBM Integration Bus AIX, HP-UX, Linux, Solaris, Windows, z/OS 9.0 All Editions 
PRODUCT ALIAS/SYNONYM
 WMB MB WebSphere Message Broker IBM Integration Bus IIB IBMIB MQ Integrator WBIMB WBI-MB MQSI WMQI