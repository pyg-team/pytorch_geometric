Title: IBM Event Sequencing limitation for WebSphere Process Server (WPS) regarding Maximum Failed deliveries when stopping an application - United States

Text:
v602rnotes; v61rnotes; v612rnotes; v62rnotes TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 The 'Maximum Failed Deliveries' attribute on the Service Integration Bus destination of the event sequencing component can be modified to control retry behavior. However it might generate failed events for sequenced messages, when the application or the server is restarted 'Maximum Failed Deliveries' times. The event sequencing lock entries for these failed events are not released. 

RESOLVING THE PROBLEM
During SCA application install process, a Service Integration Bus destination is created for a component with event sequencing qualifier. The Service Integration Bus has a built-in retry mechanism to deliver messages on this destination to the event sequencing consumer. 

Note: The default values for 'Maximum Failed Deliveries' is 5 resulting in five attempts. The information here is provided for completeness.

To configure the retry behavior, you can modify the 'Maximum Failed Deliveries' attribute on the destination and restart the application to make it effective with the event sequencing consumer.

A message delivered to event sequencing consumer may result in target component invocation if it obtains event sequencing lock. Messages that could not obtain lock, stay on the component destination and wait for their turn. Since these sequenced messages were delivered by Service Integration Bus, they are counted as an attempt.

When the application or the server is stopped for any reason, Service Integration Bus checks the number of attempts against the 'Maximum Failed Deliveries'. If it reached threshold, the sequenced messages are sent to failed event destination.

Since these failed events were generated without actually invoking the target component, the event sequencing lock entries for them are not removed. These failed events can be resubmitted from the Failed Event Manager.

Therefore, it is recommended to set the value of the Maximum Failed Deliveries attribute of the event sequencing destination to a sufficiently high value so that the problem does not occur.

Please look at customer's typical scenario:
1) User sets Failed Event Destination (FED) parameter to 1 for all of is modules because he wants to avoid retries at the SCA queue level. 
2) During business day, for some reason, User has to stop/start an application module 
3) The problem can occur if the module uses Event Sequencing: 
4) If sequenced events are waiting on the component queue during the stopping of the application then: 

 * SIBus detects FED limit is reached for the sequenced events waiting on the component queue. 
 * So SIBus directly moves those events into Failed Event Queue (in other words Failed Event Manager) 
 * Note that no SCA or ES code is executed here. Because of that the ES locks cannot be released. 
 * So, User will observe that Failed Events (using FEM) were generated but also that ES locks are still there (using esAdmin output), while the events are not on the component queue anymore.