Title: IBM IV62196: THE WEBSPHERE MQ V7.0 CLASSES FOR JMS STOP DELIVERING MESSAGES TO MDBS AFTER A WHILE WITH NO ERRORS OR EXCEPTIONS REPORTED - United States

Text:
 SUBSCRIBE TO THIS APAR
By subscribing, you receive periodic emails alerting you to the status of the APAR, along with a link to the fix after it becomes available. You can track this item individually or track all items by product.

Notify me when this APAR changes.

Notify me when an APAR for this component changes.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  After delivering messages successfully to Message Driven Beans
   (MDBs) running in an application server, the WebSphere MQ V7.0
   classes for JMS stop delivering messages. When this occurs
   there are no errors or exceptions reported, but the MDBs will
   not be passed any further messages.
   
   
    
   
   

LOCAL FIX
 *  Use the MQ V7.1, V7.5 or V8.0 classes for JMS, which are not
   susceptible to this problem.
   
   
    
   
   

PROBLEM SUMMARY
 *  ****************************************************************
   USERS AFFECTED:
   This issue affects two categories of user:
   
   1. Users of:
   
   - The WebSphere MQ V7.0.1 classes for JMS.
   
   who have stand-alone JMS applications that connect to a queue
   manager using WebSphere MQ messaging provider normal mode, and
   create and use JMS MessageListeners to process messages
   asynchronously from queues and topics hosted on that queue
   manager.
   
   2. Users of:
   
   - The WebSphere MQ V7.0.1 Resource Adapter.
   - The WebSphere Application Server V7.0 WebSphere MQ messaging
   provider.
   - The WebSphere Application Server V8.0 WebSphere MQ messaging
   provider.
   
   who have message-driven bean applications that connect to a
   queue manager using WebSphere MQ messaging provider normal mode
   and then monitor queues or topics hosted on that queue manager.
   
   
   Platforms affected:
   MultiPlatform
   
   ****************************************************************
   PROBLEM DESCRIPTION:
   When connecting to a queue manager using the CLIENT transport
   and receiving messages asynchronously, either on behalf of JMS
   MessageListeners or message-driven bean applications running
   inside of an application server, the WebSphere MQ classes for
   JMS will create a number of internal threads:
   
   - One or more Remote Dispatch Threads. These threads are used to
   run message-driven bean instances, or invoke an onMessage()
   method for an application that is using a JMS Message Listener.
   - A Remote Receive Thread, which is used to receive messages
   sent by the queue manager and pass them off to Remote Dispatch
   Threads for processing. The Remote Receive Thread maintains a
   list of Remote Dispatch Threads that are eligible to process
   messages.
   
   When a message arrives on the JMS Destination that either the
   JMS MessageListener or the message-driven bean application is
   monitoring, the queue manager sends the message to the WebSphere
   MQ classes for JMS. The message is received by the Remote
   Receive Thread, which then looks at its internal list of Remote
   Dispatch Threads to find a thread to process that message. Once
   a Remote Dispatch Thread has been selected, the Remote Receive
   Thread pass the message to the Remote Dispatch Thread for
   processing.
   
   The Remote Dispatch Thread takes the message it has been given,
   and invokes either the message-driven bean application or the
   onMessage() method for an application that is using a JMS
   Message Listener. Once the message has been processed, the
   Remote Dispatch Thread contacts the queue manager and asks it to
   send another message for it to process.
   
   The queue manager sends this message back to the WebSphere MQ
   classes for JMS, where it will be picked up by the Remote
   Receive Thread and the processing described above will start
   again.
   
   Remote Dispatch Threads created by the WebSphere MQ V7.0.1
   classes for JMS will shut down and remove themselves from the
   internal list of threads maintained by the Remote Receive Thread
   if they have not been used for 30 seconds.
   
   Due to the design of the Remote Dispatch Threads and their
   interactions with Remote Receive Threads, it was possible for
   the following sequence of events to occur:
   
   - The Remote Receive Thread received a new message from a queue
   manager.
   - At the same time, a Remote Dispatch Thread had decided to shut
   itself down as it has been idle for 30 seconds.
   - The Remote Receive Thread checked it's list of Remote Dispatch
   Threads to find a thread to process the new message. The Remote
   Receive Thread chose the Remote Dispatch Thread that had just
   decided to shut down.
   - The Remote Receive Thread notified this Remote Dispatch
   Thread.
   - However, rather than process the message, the Remote Dispatch
   Thread shut itself down and removed itself from the internal
   list of Remote Dispatch Threads maintained by the Remote Receive
   Thread.
   
   As a result of this, the message that was sent by the queue
   manager was never processed as the Remote Dispatch Thread that
   was chosen to process it had stopped. Because the message was
   never processed, no more messages were requested. This caused
   the application to stop without reporting an error.
   
   
    
   
   

PROBLEM CONCLUSION
 *  The WebSphere MQ V7.0.1 classes for JMS have been updated so
   that, if a Remote Dispatch Thread has been idle for 30 seconds,
   it will to perform an additional check to see if it is given any
   messages to process before deciding whether to shut down. Some
   additional locking has also been added to the internal list of
   Remote Dispatch Threads maintained by a Remote Receive Thread,
   to ensure that Remote Dispatch Threads are only removed from the
   internal list when they have not been asked to process a
   message.
   
   Now, when a Remote Dispatch Thread has been idle for 30 seconds
   waiting for a message to process, it will:
   
   - Lock the list of Remote Dispatch Threads maintained by the
   Remote Receive Thread.
   - Check if the Remote Receive Thread has asked it to process a
   message.
   - If it has, then release the lock and process the message.
   - Otherwise, remove itself from the list of Remote Dispatch
   Threads to prevent it from being chosen again. It will then
   release the lock, and shut down.
   
   This prevents the Remote Receive Thread from choosing a Remote
   Dispatch Thread to process a message, where that Remote Dispatch
   Thread is already shutting down.
   
   ---------------------------------------------------------------
   The fix is targeted for delivery in the following PTFs:
   
   Version    Maintenance Level
   v7.0       7.0.1.13
   
   The latest available maintenance can be obtained from
   'WebSphere MQ Recommended Fixes'
   http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006037 [http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006037]
   
   If the maintenance level is not yet available information on
   its planned availability can be found in 'WebSphere MQ
   Planned Maintenance Release Dates'
   http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006309 [http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006309]
   ---------------------------------------------------------------
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   IV62196
   
   
 * REPORTED COMPONENT NAME
   WMQ SOL SPARC
   
   
 * REPORTED COMPONENT ID
   5724H7223
   
   
 * REPORTED RELEASE
   701
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2014-07-02
   
   
 * CLOSED DATE
   2014-11-03
   
   
 * LAST MODIFIED DATE
   2014-11-03
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   WMQ SOL SPARC
   
   
 * FIXED COMPONENT ID
   5724H7223
   
   

APPLICABLE COMPONENT LEVELS
 * R701 PSY
   UP