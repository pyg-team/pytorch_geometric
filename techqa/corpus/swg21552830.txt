Title: IBM How to integrate WebSphere MQ with WebSphere Application Server, so as to post a message via the HTTP API tester? - United States

Text:
Operating Environment; STERLINGNFX TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 How to integrate WebSphere MQ with WebSphere Application Server, so as to post a message via the HTTP API tester? 

SYMPTOM


One sees the error described below when posting a message to the JMS queues on WebSphere MQ (WMQ) via the HTTP API tester. This occurs when using "fscontext" jndi or file bindings as commonly known. Error Message <Errors> <Error ErrorCode="javax.naming.NoInitialContextException" ErrorDescription="Error description not available" ErrorRelatedMoreInfo="" ErrorUniqueExceptionId="127.0.0.112795501681490000000000002"> <Attribute Name="ErrorCode" Value="javax.naming.NoInitialContextException" /> <Attribute Name="ErrorDescription" Value="Error description not available" /> <Error ErrorCode="javax.naming.NoInitialContextException" ErrorDescription="" </font></div> <div> java.naming.security.principal=mqm, java.naming.security.credentials=mqm, java.naming.referral=throw}"> <Stack> javax.naming.NoInitialContextException: Failed to create InitialContext using factory specified in hashtable {java.naming.provider.url=file:/home, java.naming.factory.initial=com.sun.jndi.fscontext.RefFSContextFactory, java.naming.factory.url.pkgs=com.ibm.ws.naming:com.ibm.ws.runtime:com.ibm.ws.nam ing:com.ibm.ws.naming, java.naming.security.principal=mqm, java.naming.security.credentials=mqm, java.naming.referral=throw} [Root exception is java.lang.NullPointerException] at javax.naming.spi.NamingManager.getInitialContext(NamingManager.java:243) at javax.naming.InitialContext.initializeDefaultInitCtx(InitialContext.java:327) at javax.naming.InitialContext.getDefaultInitCtx(InitialContext.java:357) at javax.naming.InitialContext.internalInit(InitialContext.java:295) at javax.naming.InitialContext.<init>(InitialContext.java:212) 
RESOLVING THE PROBLEM


In order to resolve this error, one needs to configure shared library references for the deployed MCF application on the WebSphere Console. To do this:  1.  
 2.   Open the WebSphere Administrative Console. 
 3.  
 4.   Select Applications -> Enterprise Applications -> <application_name> -> References -> Shared library references 
 5.  
 6.   Select <application_name> -> Reference shared libraries 
 7.  
 8.   Click New 
 9.  
 10.  Select the appropriate scope (Node=<node_name>,server=<server_name>) 
 11. 
 12.  Specify a suitable name and add all the WMQ jar files to the Classpath variable. Press Enter to separate each jar file. (Refer to the MCF Installation Guide for a list of Jar files). 
 13. 
 14.  Click Apply, then OK 
 15. 
 16.  Save the configuration changes to the master repository 
 17. 
 18.  Select <application_name> -> Reference Shared Libraries 
 19. 
 20.  Move the created shared library reference from "Available" to "Selected" using >> 
 21. 
 22.  Restart the Application Server. 

If there are still errors while posting a message via the HTTP API tester, contact Sterling Commerce Customer Support for assistance. 

HISTORICAL NUMBER
 NFX9536 

PRODUCT ALIAS/SYNONYM
 

Function Area


HTTP API tester


Escalation ID


201198