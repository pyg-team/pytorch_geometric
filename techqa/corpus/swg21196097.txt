Title: IBM WMQ queue manager hangs after application process is killed - United States

Text:
xllOSSpinLockWaitLock hang hung wait XC032005 ZL043025 XC027042 ZL000028 AQ048000 XC130004 kill killed terminated mqminfo TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 When you stop one of your WebSphere MQ (WMQ) applications, by force (kill -9, -15 SIGTERM), the queue manager slows or hangs. 

SYMPTOM
FDC files show the following symptoms: 

XC032005 out of xcsPostEventSem for reason xecL_W_SEM_OWNER_DIED 

ZL043025 out of zlaMainThread for reason xecF_E_UNEXPECTED_RC 

XC027042 out of xcsRequestMutexSem for reason xecL_W_SEM_OWNER_DIED 

ZL000028 out of xcsRequestMutexSem for reason xecL_W_SEM_OWNER_DIED 

AQ048000 out of aqsStartQOp for reason STOP_ALL 

XC130004 out of xehExceptionHandler for reason STOP


CAUSE
If an application is ended abnormally using the kill command within an MQCONN call, there is a possibility that it will block the Execution Controller (amqzxma0). 

If the application ends without releasing a spinlock (spinlocks are very lightweight locks, which are used for quick locking and unlocking) it may cause amqzxma0 to hang in xllOSSpinLockWaitLock waiting for a spinlock. This will lead to a deadlock because no other application will be able to connect to queue manager. 

Note that the hang occurs only when an application is killed within an MQCONN call. MQ will recover if the application is terminated in any other API (application program interface).


RESOLVING THE PROBLEM
MQ is working as designed. Therefore the solution is to prevent the application from abnormally terminating within the MQCONN call. This can be achieved by setting up the signal handlers to handle such abnormal terminations. 

Note: Using the 'signal' function is not a good way to register signal handlers. Instead you should use 'sigaction'. 


Example: 

 void SigTerm(int SigNo); 
struct sigaction act; 
act.sa_handler = SigTerm; 
sigemptyset(&act.sa_mask); 
act.sa_flags = 0; 
sigaction( SIGSTERM, &act, NULL ); 

Also, it is good practice for you to call MQDISC in the signal handler 'SigTerm' in order to terminate the application gracefully when it is being killed. 

 

PRODUCT ALIAS/SYNONYM
 WMQ WebSphere MQ MQSeries