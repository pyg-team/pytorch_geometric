Title: IBM IY66843: S14315 - POLICY BEING JOINED FAILES WITH JAVA SCRIPT ARRAY EXCEPTION - United States

Text:
 SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS USER ERROR.
    
   
   

ERROR DESCRIPTION
 *  CUSTOMER Ing Seguros De Vida S.A.
   
   Title: Policy being joined failes with java script array
   exception
   
   Description:  Customer is running a manual policy join and
   encounters
   the following error:
   
      java.lang.ArrayIndexOutOfBoundsException: Array index out of
   range: 0
   
   The strange thing is that this exception occurs after the packet
   is
   returned from the agent.
   
   No custom operations are being used.
   
   L3 gave this a quick look an stated that the problem is that
   erservice
   seems to be getting a null value somehow.
   
   
   Desired Behavior:  Customer wishes for this to work properly and
   not get
   an exception.
   
   Reproducable:  Yes, customer can recreate and I can recreate in
   the lab
   
   Steps to reproduce:
   
   This was recreated using an Oracle Agent, but the agent could be
   anything, as long as a policy join comes into place on a
   multiply
   recurring attribute, such as a group.
   
   1.  Create a service for the oracle agent and specify it as mark
   non-compliance
   2.  Create an automated policy for the oracle agent, membership
   all(*)
   and the entitlement having a default value for eroraclerole of
   CREATE_SESSION.
   3.  Create an org role called TEST1
   4.  Create a provisioning policy, with a membership of TEST1 and
   the
   entitlement for Oracle specifying another errolename of some
   other
   Oracle Role, like DBA.  The entitle should be manual.
   5.  Create a new person (the person will automatically get an
   Oracle
   account defined for them, thanks to the policy in step 2.
   6.  Edit the person, adding the org role TEST
   7.  For the person, pull up their list of accounts, modify the
   oracle
   account and specify DBA as a new oracle role - submit the
   request.
   
   At this point, the account will be updated by the agent, but
   when the
   request info is returned to ITIM, the java exception is
   encountered.
   
   I have logs and also have data from the customer to test this.
   
   I have found that by changing the service to correct
   non-compliance,
   changing the second policy above (step 4) to automatic and
   making the
   oracle role mandatory in this policy, the provisioning works as
   expected
   and no java exception is encountered.
   
   Environment:
   
   Customer - ITIM 4.5.1 FP28, W2K, WAS 5.0.2, IDS 5.2, DB2 8.1
   Lab - ITIM 4.5.1 FP36, W2K, WAS 5.0.2, IDS 5.1 DB2 8.1
   
   
    
   
   

LOCAL FIX
 *  14315
   
   
    
   
   

PROBLEM SUMMARY

PROBLEM CONCLUSION

TEMPORARY FIX

COMMENTS
 *   Basically, the customer placed "ersrvice/owner" on the
   OracleAccount form.  This should not be done and is causing this
   problem.
   
   To fix this, they should do the following:
   
   1.  Go to WEB UI
   2.  Go to COnfiguration/User Interface
   3.  Double Click on Account
   4.  Click on OracleAccount
   5.  On the first tab, remove "erservice" and "owner" from the
   form
   6.  Do a FORM/SAVE
   
   I tried this using the sample data provided by the customer and
   it does work.
   
   
    
   
   

APAR INFORMATION
 * APAR NUMBER
   IY66843
   
   
 * REPORTED COMPONENT NAME
   IBM TIV IDENT M
   
   
 * REPORTED COMPONENT ID
   5724C3402
   
   
 * REPORTED RELEASE
   451
   
   
 * STATUS
   CLOSED USE
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2005-01-18
   
   
 * CLOSED DATE
   2005-02-09
   
   
 * LAST MODIFIED DATE
   2005-02-09
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION

APPLICABLE COMPONENT LEVELS