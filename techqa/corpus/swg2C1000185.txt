Title: IBM MustGather: UrbanCode Deploy WebSphere Deploy and Configure plugins - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 What data should you collect for problems with the IBM UrbanCode Deploy WebSphere Application Server – Deployment and WebSphere Application Server – Configure plugins? 

CAUSE
The IBM UrbanCode Deploy WebSphere Application Server – Deployment and WebSphere Application Server – Configure plugins store logs in different locations from other UrbanCode Deploy plugins, because they expose Actions from the Resource Tree, that can be triggered without executing an Application/Component process. Additionally, the level of logging can be increased in the Component steps of the WebSphere Application Server – Configure plugin, resulting in the creation of additional log files.

ANSWER
Depending on the action you are performing, you can find diagnostic information in different locations. 

WebSphere Application Server – Deployment plugin


 * WebSphere (Cell) Discovery
    * If you executed the WebSphere (Cell) Discovery interactively, by adding an Agent to the Resource Tree, then the log can be found in:
      
      Resources > Agent Resource > History
      
      Configuration Task History > WebSphere Discovery > Actions > Output log
      
      [/support/docview.wss?uid=swg2C1000185&aid=1] [/support/docview.wss?uid=swg2C1000185&aid=1] 
    * Alternatively, you could run this as a process, as follows:
      
      1. Take the parent resource of the agent, and create a Resource Property called: 
      
      websphere.profilePath
      
      that refers to the location of the WAS Profile and could be set to a value like: 
      
      C:\IBM\WebSphere\AppServer\profiles\Dmgr01 
      
      2. Create a Generic process onto which you drop the step: 
      
      Java > WebSphere > Deployment > WebSphere Discovery
      
      3. Execute the step on the Agent Resource 
      
      In this case, the diagnostic information is contained in the output of the Generic process step. 
      
      Provide this file to support after clicking on Download All Logs.
      
      [/support/docview.wss?uid=swg2C1000185&aid=2] [/support/docview.wss?uid=swg2C1000185&aid=2]
   
   

 * WebSphere Topology Discovery
    * If you executed the WebSphere Topology Discovery from the menu:
      
      Actions > Configure using WebSphere Topology Discovery 
      
      available on the discovered WebSphere Cell in the Resource Tree, then the log can be found in:
      
      Resources > WebSphere Cell Resource > History
      
      Configuration Task History > WebSphere Topology Discovery > Actions > Output log
      
      [/support/docview.wss?uid=swg2C1000185&aid=3] [/support/docview.wss?uid=swg2C1000185&aid=3]
      
    * Alternatively, you could have executed the WebSphere Configuration Discovery as a Generic process, following these steps:
      
      1. Drop the step Configuration Discovery > Update from Live Configuration 
      
      2. In the parameter: Plugin Step, select WebSphere Topology Discovery from the drop down list. 
      
      3. Change the value of the Resource parameter from ${p:resource.parent.path} to ${p:resource.path} (this is required only if running as a Generic process, as opposed to a Component Process, since in a Component process the desired resource is the parent of the Component itself).
      
      In this case the diagnostic information is contained in the output of the Generic process.
      
      Provide this file to support after clicking on Download All Logs.
   
   


WebSphere Application Server – Configure plugin 

 

 * WebSphere Configuration Discovery
   
   Starting with v17 of the WAS Configure plugin, the execution of following menu of the Resource Tree:
   
   Actions > Configure using WebSphere Configuration Discovery 
   
   is deprecated, in favor of the usage of the Component Step: 
   
   Java > WebSphere > Configuration > WebSphere Configuration Discovery
   
   [/support/docview.wss?uid=swg2C1000185&amp;aid=4]
   
   Starting with v25 of the WAS - Configure plugin, after you drop this step on the canvas, you can augment the logging level by doing the following:
   
   Show hidden properties > Logging level > change from Info to Debug
   
   [/support/docview.wss?uid=swg2C1000185&aid=5] [/support/docview.wss?uid=swg2C1000185&aid=5]
   
   If the Logging Level is set to Debug/Trace, you will see additional icons for log files next to the output log: debug.log and redo.log.
   
   Provide the complete set of logs to IBM Support after clicking on Download All Logs.
   
   [/support/docview.wss?uid=swg2C1000185&aid=6] [/support/docview.wss?uid=swg2C1000185&aid=6]
   
 * WebSphere Configuration Apply
   
   The Component process step:
   
   Java > WebSphere > Configuration > WebSphere Configuration Apply 
   
   has the same option for increasing the logging level. 
   
   [/support/docview.wss?uid=swg2C1000185&aid=7] [/support/docview.wss?uid=swg2C1000185&aid=7]
   
   The files debugLog.txt and redoLog.txt can be found as described above.
   
   Provide these file to IBM Support after clicking on Download All Logs.
   
   
 * WebSphere Configuration Compare
   
   The Component process steps:
   
   Java > WebSphere > Configuration > WebSphere Configuration Compare 
   
   Java > WebSphere > Configuration > WebSphere Get Compare Results 
   
   have the same option for increasing the logging level and the same method for obtaining the resulting debugLog.txt and redoLog.txt, as described above.
   
   Provide these file to IBM Support after clicking on Download All Logs.