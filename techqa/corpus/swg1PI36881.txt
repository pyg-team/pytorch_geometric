Title: IBM PI36881: MESSAGING ENGINE ATTEMPTS TO OBTAIN LOCK ON THE DATASTORE EVEN AFTER THE DEFINED TIMEOUT VALUE. - United States

Text:
  FIXES ARE AVAILABLE
8.5.5.7: WebSphere Application Server V8.5.5 Fix Pack 7 [http://www-01.ibm.com/support/docview.wss?uid=swg24040533]
8.5.5.8: WebSphere Application Server V8.5.5 Fix Pack 8 [http://www-01.ibm.com/support/docview.wss?uid=swg24041178]
8.5.5.9: WebSphere Application Server V8.5.5 Fix Pack 9 [http://www-01.ibm.com/support/docview.wss?uid=swg24041819]
8.5.5.10: WebSphere Application Server V8.5.5 Fix Pack 10 [http://www-01.ibm.com/support/docview.wss?uid=swg24042150]
8.5.5.11: WebSphere Application Server V8.5.5 Fix Pack 11 [http://www-01.ibm.com/support/docview.wss?uid=swg24043005]
8.5.5.12: WebSphere Application Server V8.5.5 Fix Pack 12 [http://www-01.ibm.com/support/docview.wss?uid=swg24043844]
8.5.5.13: WebSphere Application Server V8.5.5 Fix Pack 13 [http://www-01.ibm.com/support/docview.wss?uid=swg24044479]


SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  In Websphere Application Server v8.5.5, a cluster of two JVMs
   is added as a member of the Service Integration Bus. The
   messaging engine is running on one of the JVMs in the
   cluster. Due to a split brain scenario, the second JVM
   attempts to start the messaging engine though it is already
   running on the first JVM. The messaging engine keeps
   attempting to obtain lock on the datastore even after the JVMs
   are recovered from the split brain scenario. The following
   messages are logged repeatedly in the second JVM:
   
   CWSIS1538I: The messaging engine, ME_UUID=E3694B9D33841032,
   INC_UUID=9BA433BBD3308E2D, is attempting to obtain an exclusive
   lock on the data store.
   
   CWSIS1593I: The messaging engine, ME_UUID=E3694B9D33841032,
   INC_UUID=9BA433BBD3308E2D, has failed to gain an initial lock
   on the data store.
   
   
    
   
   

LOCAL FIX
 *  Restart the JVMs in the cluster
   
   
    
   
   

PROBLEM SUMMARY
 *  ****************************************************************
   * USERS AFFECTED:  Users of the default messaging provider for *
   *                  IBM WebSphere Application Server            *
   ****************************************************************
   * PROBLEM DESCRIPTION: The messaging engine does not           *
   *                      relinquish                              *
   *                      trying to obtain the data store locks   *
   *                      even after configured time out period.  *
   ****************************************************************
   * RECOMMENDATION:  NONE                                        *
   ****************************************************************
   When a messaging engine is configured for HA and running in a
   server already, there could be a possibility of split brain
   scenario where HA-Manager tries to initiate start on the
   passive messaging engine instance on other servers where it can
   possibly run.
   If the datastore is being used as message store, at this point
   of time, the passive instance will not be able to obtain the
   exclusive lock on the data store as there is already an active
   instance of messaging engine running. However the passive
   instance continues to try to obtain the locks for further 15
   minutes. Afterwards, it should relinquish trying to obtain the
   locks and get into joined state.
   However, in some cases, the messaging engine does not
   relinquish  trying to obtain the locks.
   
   
    
   
   

PROBLEM CONCLUSION
 *  During the start of the messaging engine, the main thread
   starts DBLockManager thread to obtain the locks. The
   DBLockManager thread first disables the datasource of the
   message store until it successfully obtains the locks. The
   main thread goes into a wait state for 15 minutes (or) until
   DBLockManager notifies that the locks are successfully
   obtained.
   
   Since a messaging engine is already running in a server, in
   the split brain scenario, the locks could not be obtained.
   However, the main thread, which is supposed to wait for only
   15 minutes at max, can get into indefinite wait due to a code
   defect. So, the main thread never comes out of wait and the
   DBLockManager never obtains the locks.
   
   
   The fix for this APAR is currently targeted for inclusion in
   fix pack 8.5.5.7.  Please refer to the Recommended Updates
   page for delivery information:
   http://www.ibm.com/support/docview.wss?rs=180&uid=swg27004980 [http://www.ibm.com/support/docview.wss?rs=180&uid=swg27004980]
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   PI36881
   
   
 * REPORTED COMPONENT NAME
   WAS SIB & SIBWS
   
   
 * REPORTED COMPONENT ID
   620800101
   
   
 * REPORTED RELEASE
   855
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2015-03-12
   
   
 * CLOSED DATE
   2015-05-07
   
   
 * LAST MODIFIED DATE
   2015-08-10
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   WAS SIB & SIBWS
   
   
 * FIXED COMPONENT ID
   620800101
   
   

APPLICABLE COMPONENT LEVELS
 * R850 PSY
   UP