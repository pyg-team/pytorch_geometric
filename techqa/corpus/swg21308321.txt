Title: IBM Configure tracing for IBM FileNet Content Platform Engine using log4j - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 How do you collect trace files for support when the FileNet Enterprise Manager or ACCE (Admin Console for Content Platform Engine) cannot be used?

Use this proceedure to enable and collect trace files only if the FileNet Enterprise Manager or ACCE can NOT be used; otherwise, tracing should be enabled using the FileNet Enterprise Manager or ACCE. 

CAUSE
There are situations where the FileNet Enterprise Manager or ACCE (Admin Console for Content Platform Engine) cannot be used to configure server tracing. Some examples of this are as follows: 

 1. Domain creation failed.
    
    
 2. The server cannot start and an error is displayed in the server's startup Web page. This can be accessed with an internet browser using the following link:
    
    http://localhost:9080/FileNet/Engine
    
    Where 9080 is the http port configured for the application server that is hosting the FileNet Content Platform Engine.
    
    
 3. FileNet Enterprise Manager or ACCE is extremely slow and time-out errors occur when accessing the server. And, the general cause of this is all tracing was previously enabled using the FileNet Enterprise Manager or ACCE.

ANSWER
Use the log4j configuration samples provided under the FileNet Content Platform Engine installation directory. In Windows These files are available at C:\Program Files\FileNet\ContentEngine\config\samples. 


The steps required to enable and collect server trace files for support are as follows:


 1. Copy the sample log4j.xml.server to log4j.xml.
    
    Since JBoss systems use log4j by default, the following steps should be applied to the existing log4j.xml file located in <JBoss_install_root>/server/<server-name>/conf. Where <JBoss_install_root> is the location of the JBoss installation. 
    
    
 2. Open the log4j.xml file and verify the output location and size of trace and error. Here are the settings to pay attention to for this:
    
    <appender name="FileNetErrorAppender" class="org.apache.log4j.FileAppender">
    <param name="File" value="/p8_server_error.log"/>
    <param name="MaxFileSize" value="100MB"/>
    <param name="MaxBackupIndex" value="5"/>
    
    <appender name="FileNetTraceAppender" class="org.apache.log4j.FileAppender">
    <param name="File" value="/p8_server_trace.log"/>
    <param name="MaxFileSize" value="100MB"/>
    <param name="MaxBackupIndex" value="5"/>
    
    Check the file name, size, and backup index. Make sure that the size and backup index are set to be large enough. When the file size exceeds the MaxFileSize, log4j will create rollover files. Note that by default, using the above entries will produce log files in the root directory. If your security prohibits files from being written to the root directory, modify the path to point to an appropriate directory.
    
 3. By default tracing is off and may need to be turned on. In most cases, a support person will ask for specific tracing to be turned on. However, here is a basic guideline:
    
     1. If you are following this procedure because all tracing was enabled through FileNet Enterprise Manager or ACCE and it can no longer be accessed do not enable any tracing in the log4j file. 
        
        
     2. Uncomment the following trace subsystems in the log4j file:
        
        <logger name="filenet_tracing.engine"><level value="debug"/></logger>
        <logger name="filenet_tracing.asynchronous_processing"><level value="debug"/></logger>
        <logger name="filenet_tracing.metadata_cache"><level value="debug"/></logger>
        <logger name="filenet_tracing.database"><level value="debug"/></logger>
        <logger name="filenet_tracing.gcd"><level value="debug"/></logger>
        <logger name="filenet_tracing.error"><level value="debug"/></logger>
        
        
    
    
 4. Add the following as JVM command line arguments to the application server:
    
    -Dlog4j.configuration=file:/<absolute_path_for_log4j_file>/log4j.xml (This argument is not necessary on JBoss systems.) on Windows-Dlog4j.configuration=file:/c:/log4j.xml on Unix -Dlog4j.configuration=file:/usr/home/log4j.xml
    
    -DskipTLC=true (Instructs the CE server to skip the existing trace logging configuration.)
    
    
 5. Restart the Application Server.
    
    
 6. Correct the problem or collect the trace files for support.
    
    
 7. Turn tracing off by removing the JVM command line arguments (and restarting the application server) and, if necessary, via FileNet Enterprise Manager or ACCE.



Do not leave tracing on all the time. It will slow the system down significantly. 


How to get more information More information about server tracing can be found in the "Trace logging" section of the FileNet P8 Documentation (FileNet P8 Platform 5.2.1>Administering>Administering Content Platform Engine>Troubleshooting>Creating a trace log>Trace logging). You can download the IBM FileNet P8 Documentation [http://www.ibm.com/support/docview.wss?rs=3278&uid=swg27010422] from the Product Documentation for FileNet P8 Platform Web page.





Cross reference information Segment Product Component Platform Version Edition Enterprise Content Management Content Foundation AIX, HP-UX, Linux, Solaris, Windows 5.2.1, 5.2 All Editions