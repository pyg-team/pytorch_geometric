Title: IBM Using SELECT IF with a lag function deletes all of my cases in SPSS - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 I wanted to use a SELECT IF command that deletes cases in SPSS on the basis of a lag function. Say, for example, that I wanted to delete duplicate ID cases in a data set. I used the following syntax:

SELECT IF (id ne lag(id)).

when I ran this, all my cases were deleted. If I filter the cases, they're all in the file and filtered as they should be. Why does the SELECT IF delete all my cases? 

RESOLVING THE PROBLEM
The cases are processed differently in SELECT IF than with the FILTER procedure. If we take your example, the following happens: 

SPSS looks at case 1 and compares it to the lag of case 1. Since case 1 is the first case in the file, there is no lag function that SPSS can look at - there is no case that can be the lag of case 1! So, SPSS decides that the condition is not satisfied and case 1 gets deleted from the active file.
All the other cases move up. Now, case 1 (which was originally case 2) gets compared with the "non-case". SPSS says the conditioned is not satisfied, the new case 1 is deleted, and a new case (originally case 3, then moved up to case 2, and now case 1) gets set up for deletion.

With the FILTER procedure, all the cases stay in the active file - it's just a matter of whether or not the case is included in analysis. In this instance, the original case 1 gets compared against the "non-case", SPSS determines that the condition (id equals lag(id)) is not satisfied, but SPSS says to case 1 "You are still in the active file, but you can't be part of the data analysis." SPSS then looks at case 2, compares that to case 1, and determines if the condition is satisfied. SPSS then compares case 3 to case 2, and so on. That is why the FILTER command is a better way to delete cases from analysis than the SELECT IF command.

If you wish to delete cases in the above example, use the following syntax:

SORT CASES by id.
MATCH FILES file=* / by id / first=first.
EXECUTE.
SELECT IF (first=1).

Here we use the MATCH FILES command in an unusual way. We match the file back onto itself, but we create a variable called FIRST. If the case is the first instance of a given ID value, FIRST=1. If the case is a duplicate of the ID value, FIRST=0. We may then select the cases where FIRST=1 to get rid of the duplicates.

The MATCH FILES command also has a LAST subcommand that can be used to filter duplicate cases, or using a combination of FIRST and LAST can be used to filter out unique cases leaving only duplicate cases. Here is an example of how this can be done:

RELATED INFORMATION
 Need more help? Our Statistics forum is Live! [https://developer.ibm.com/answers/topics/statistics.html?smartspace=predictive-analytics]


 

HISTORICAL NUMBER
 19030