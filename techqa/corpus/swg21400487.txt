Title: IBM Purpose of the setUnknown() method - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 What is the setUnknown() method and why is it only generated for primitive types? 

ANSWER
In the XML world, data may have no value (value unknown). The XMLbinding must be able to map this feature into something equivalent in the Java world. Especially in ILR rules, where we must be able to do the following:

 1. Test if an attribute of an XML object is known or unknown (see those keywords in the ILOG Rules language reference manual)
 2. Set an attribute with the unknown value.



For Java class attributes: the unknown value is represented by the null value. For instance, a string attribute is unknown if it is null (not empty!). For example:



The schema file:

<element name="Customer">
<complexType>
<sequence>
<element name="name" type="String" minOccurs="0"/>
</sequence>
</complexType>
</element>




And a possible rule:


rule SetNameToUnknown
{ 
when {
?c : Customer (name isknown);
} then {
?c.name = null;
}
}




For Java primitive types: as we cannot set a Java primitive type to null, the XML binding generates a virtual method to set the attribute to unknown:



<element name="Customer">
<complexType>
<sequence>
<element name="age" type="int" minOccurs="0"/>
</sequence>
</complexType>
</element>



will be mapped to the virtual Java class:



public class Customer {

 int age;

public void setUnknownAge();

}

Then, if you want to set the age to unknown, you must use the generated method setUnknownAge():



rule SetAgeUnknown
{ 
when {
?c : Customer (age isknown);
} then {
?c.setUnknownAge();

}
}


 

Cross reference information Segment Product Component Platform Version Edition Business Integration IBM Operational Decision Manager Platform Independent 7.5 Enterprise 
HISTORICAL NUMBER
 jrules/FAQ/24