Title: IBM How to configure DataPower dynamic MQ URL to use MQ SSL channel - United States

Text:
 TECHNOTE (FAQ)

THIS DOCUMENT APPLIES ONLY TO THE FOLLOWING LANGUAGE VERSION(S):
 English 

QUESTION
 How to configure DataPower dynamic MQ URL to use MQ qmgr secure channel in mutual authentication mode? 


CAUSE
The dynamic MQ URL does not have any configuration parameter to use MQ secure channel in mutual authentication mode. This has to be configured in a custom stylesheet using key database and its associated cipher specs. 

ANSWER
In order to configure dynamic MQ URL (URL starting with mq://) with MQ secure channel in mutual authentication mode, the following steps are necessary: 

 
(1) Configure DataPower's static MQ URL (URL starting with dpmq://) that uses "key" database and its associated password file with MQ secure channel in mutual authentication mode. See link for further details: http://www.ibm.com/support/docview.wss?rs=2362&uid=swg21260155 [http://www-01.ibm.com/support/docview.wss?rs=2362&uid=swg21260155]

(2) The dynamic MQ URL uses "MQCD" and "MQSCO" headers to provide SSL MQ connection. Refer to the link on "MQCD" and "MQSCO" headers for details:

For MQSCO Headers, refer to : http://publib.boulder.ibm.com/infocenter/wmqv7/v7r0/index.jsp?topic=/com.ibm.mq.csqzak.doc/fr15140_.htm [http://publib.boulder.ibm.com/infocenter/wmqv7/v7r0/index.jsp?topic=/com.ibm.mq.csqzak.doc/fr15140_.htm]

For MQCD Headers, refer to:
http://publib.boulder.ibm.com/infocenter/wmqv7/v7r0/index.jsp?topic=/com.ibm.mq.csqzae.doc/ic18110_.htm [http://publib.boulder.ibm.com/infocenter/wmqv7/v7r0/index.jsp?topic=/com.ibm.mq.csqzae.doc/ic18110_.htm] 

The MQSCO structure in conjunction with the SSL fields in the MQCD structure allows an application running as a WebSphereÂ® MQ client to specify configuration options that control the use of SSL for the client connection when the channel protocol is TCP/IP. 

MQCD_VERSION_8 
Version-8 channel definition structure. 
The field has this value on WebSphere MQ Version 6.0 on all platforms. 

MQCD_VERSION_9 
Version-9 channel definition structure. 
The field has this value on WebSphere MQ Version 7.0 on all platforms. 

(3) Injecting MQCD structure with custom stylesheet: 

<xsl:variable name="MQCDStr"> 
<MQCD> 
<Version>8</Version> 
<SSLCipherSpec>RC4_MD5_US</SSLCipherSpec> 
</MQCD> 
</xsl:variable> 
<xsl:variable name="mqcdStr"> 
<dp:serialize select="$MQCDStr" omit-xml-decl="yes"/> 
</xsl:variable> 
<!-- for request rule -->
<dp:set-request-header name="'MQCD'" value="$mqcdStr"/> 
<!-- for response rule --> 
<!-- <dp:set-response-header name="'MQCD'" value="$mqcdStr"/> -->

(4) Injecting MQSCO structure with custom stylesheet: 

<xsl:variable name="MQSCOStr"> 
<MQSCO> 
<Version>2</Version> 
<KeyRepository>cert:///key.kdb</KeyRepository> 
</MQSCO> 
</xsl:variable> 
<xsl:variable name="mqscoStr"> 
<dp:serialize select="$MQSCOStr" omit-xml-decl="yes"/> 
</xsl:variable> 
<!-- for request rule --> 
<dp:set-request-header name="'MQSCO'" value="$mqscoStr"/> 
<!-- for response rule --> 
<!-- <dp:set-response-header name="'MQSCO'" value="$mqscoStr"/> --> 

(5) Set the DataPower Routing variable with the Dynamic URL for the request rule:
<dp:set-variable name="'var://service/routing-url'" value="<dynamic MQ URL>"/> 
For the response rule, the MQCD and MQSCO headers should be injected using the transform action and the result action with dynamic MQ URL can be configured in the destination box to route the message to the client.

Here is the syntax of dynamic MQ URL:
mq://host:port?QueueManager=queueManager;UserName=userName; 
Channel=channelName;ChannelTimeout=channelTimeout; 
channelLimit=channelLimit;Size=maxMsgSize; 
MQCSPUserId=MQCSPUserID;MQCSPPassword=MQCSPPassword;queryParameters 

Refer to the DataPower documentation for further details:
http://publib.boulder.ibm.com/infocenter/wsdatap/v4r0m2/index.jsp?topic=%2Fcom.ibm.dp.xi.doc%2Fextensionfunctions52.htm&path=4_2_1_3_0 [http://publib.boulder.ibm.com/infocenter/wsdatap/v4r0m2/index.jsp?topic=%2Fcom.ibm.dp.xi.doc%2Fextensionfunctions52.htm&path=4_2_1_3_0]

Note the "KeyRepository" header field as defined in step 4. It must contain the name of the "key" database along with the directory where the file is stored. The MQCD.SSLCipherSpec field defined in step 3 must match the cipher string that is being configured in the MQ queue manager channel.