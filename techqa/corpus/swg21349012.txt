Title: IBM Slowly changing dimensions - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Can DecisionStream handle slowly changing dimensions? 

RESOLVING THE PROBLEM
One of the uses of surrogate keys is to keep track of history (ie. the sales rep who moves from office1 to office2 per 1-1-99). The sales rep's EMPLOYEE-ID does not change, but in your datamart you want to see his/her revenue booked on office1 till 1-1-99, and have it booked on office2 from 1-1-99.

Surrogate keys are the way to do this: on 1-1-99 a new record is added to the sales rep dimension with the existing sales rep his/her new office location and a new surrogate key.
From this moment on the datamart building engine should use the new surrogate key in the fact table to link to the dimension table.

In 6.0 the management of the slowly changing dimensions (SCD) is a bit awkward to define but think of it in the following steps

1. Create a build which determines if new records need to be inserted into the SCD based on changes in columns for which you want history.

2. Feed the output of this build back into a process which causes new surrogates to be allocated to these records as they are added to the dimension table.

To effect this, what you do is define a regular build which has the potential changes to the target SCD (new) and the record in the SCD table (old). The old query needs to include a literal of 1 and the new can define a 0 and doing a merge/sum on this. This flag then enables you to conditionally route output to a temporary table of new SCD records and as required you can update the real SCD table to 'close' out the current member if you carry state flags/dates etc. Dimension builds do not allow output filters so you are really playing with the dimension table in a fact delivery context.

You then need to process the temporary list of new members to get them added to the dimension table with surrogate keys assigned to them where you could use a lookup object where the surrogate is primed with the max+1 surrogate value etc.

On the fact side you have the issue of making sure that you 'link' your business keys to the appropriate instance of an SCD member to allocate the correct surrogate key record. If you only associate data to the 'current' member you need to ensure that the dimension does not load in previous member versions. If you need to match back to a specific member you need to construct a scheme to 'fudge' your business key/surrogate key together so they match to the appropriate business key.

Assume the following scenario:

Sales Rep Joe works for the Dallas office. At some point, he transfers to the Boston office. We must be able to track the rep's sales regardless his office, but we must also be able to track the sales for both the Dallas and Boston offices, including Joe's sales. One solution (is the use of surrogate keys.

Rep Dimension Table
Rep_Off_Surr Rep_ID Rep Caption Office_ID Office_Caption effective_date
0001 456 Joe DAL Dallas 19990101
0002 456 Joe BOS Boston 19990201
0005 567 Mary DAL Dallas 19990101

Sales Fact Table
Rep_Off_Surr Order# Order_Date Order_Net
0001 888 19990105 10000 (Joe, Dallas)
0001 889 19990115 20000 (Joe, Dallas)
0005 900 19900115 30000 (Mary, Dallas)
0002 915 19990210 30000 (Joe, Boston)
0002 917 19990225 20000 (Joe, Boston)

The dimension table should be indexed at least on the Rep_Off_Surr (the unique, primary(?) key), Rep_ID, Office_ID and the unique multi-segmented (primary?) key (Rep_ID, Office_ID). The Sales Fact Table should be indexed on at least the Rep_Off_Surr and probably by Order_Date as well.

From this set up, we can easily read sales by Office (Dallas total sales = 60000), by Rep (Joe total sales = 80000), or by combination (Joe in Boston total sales = 50000).

Now, whenever an incremental Build is executed in DS, the basic Reference check should be against the multi-segmented key. It is this combination which determines whether an existing combination already exists (in which the existing surrogate key should be used for the fact table rows) or whether it is a new combination (in which case a new surrogate key needs to be created.

 

Cross reference information Segment Product Component Platform Version Edition Business Analytics Cognos 8 Business Intelligence Data Manager Business Analytics Cognos Series 7 DecisionStream 
HISTORICAL NUMBER
 82625