Title: IBM PI56467: @Transactional rollBackOn/don'tRollbackOn scans the exception cl ass hierarchy in the wrong direction - United States

Text:
  FIXES ARE AVAILABLE
8.5.5.9: WebSphere Application Server V8.5.5 Fix Pack 9 [http://www-01.ibm.com/support/docview.wss?uid=swg24041819]
8.5.5.10: WebSphere Application Server V8.5.5 Fix Pack 10 [http://www-01.ibm.com/support/docview.wss?uid=swg24042150]
8.5.5.11: WebSphere Application Server V8.5.5 Fix Pack 11 [http://www-01.ibm.com/support/docview.wss?uid=swg24043005]
8.5.5.12: WebSphere Application Server V8.5.5 Fix Pack 12 [http://www-01.ibm.com/support/docview.wss?uid=swg24043844]
8.5.5.13: WebSphere Application Server V8.5.5 Fix Pack 13 [http://www-01.ibm.com/support/docview.wss?uid=swg24044479]


SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  CDI declarative transactions (the @Transactional annotation)
   provide two fields to control whether a transaction gets
   rolled back on a given exception: rollbackOn and
   dontRollbackOn.  WebSphere Application Server Liberty
   Profile currently doesn't correctly scan the class hierarchy
   to see when to roll back the transaction or not.  For
   example, consider the exception hierarchy below:
   
   RuntimeException
   |---MoreSpecificRuntimeException
   |---|---MostSpecificRuntimeException
   
   If an application has an @Transactional annotation with
   dontRollbackOn=RuntimeException.class, and a
   MoreSpecificRuntimeException is thrown, it ought to not roll
   back the transaction, but in fact it does. Conversely, If
   the application used an @Transactional annotation with
   dontRollbackOn=MostSpecificRuntimeAnnotation.class, it would
   stop the transaction getting rolled back, where it
   shouldn't.  This inversion also applies to the rollbackOn
   check.
   
   
    
   
   

LOCAL FIX

PROBLEM SUMMARY
 *  ****************************************************************
   * USERS AFFECTED:  All users of the @Transaction feature in    *
   *                  IBM WebSphere Application Server Liberty    *
   ****************************************************************
   * PROBLEM DESCRIPTION: @Transactional                          *
   *                      rollBackOn/don'tRollbackOn scans the    *
   *                      exception class hierarchy in the wrong  *
   *                      direction                               *
   ****************************************************************
   * RECOMMENDATION:                                              *
   ****************************************************************
   CDI declarative transactions (the @Transactional annotation)
   provide two fields to control whether a transaction gets rolled
   back on a given exception: rollbackOn and dontRollbackOn.
   WebSphere Application Server Liberty Profile currently doesn't
   correctly scan the class hierarchy to see when to roll back the
   transaction or not.  For example, consider the exception
   hierarchy below:
   
   RuntimeException
   |---MoreSpecificRuntimeException
   |---|---MostSpecificRuntimeException
   
   If an application has an @Transactional annotation with
   dontRollbackOn=RuntimeException.class, and a
   MoreSpecificRuntimeException is thrown, it ought to not roll
   back the transaction, but in fact it does. Conversely, If the
   application used an @Transactional annotation with
   dontRollbackOn=MostSpecificRuntimeAnnotation.class, it would
   stop the transaction getting rolled back, where it shouldn't.
   This inversion also applies to the rollbackOn check.
   
   
    
   
   

PROBLEM CONCLUSION
 *  The code handling @Transactional was altered to scan the
   exception hierarchy in the correct direction.  Note that this
   has the potential to cause behaviour changes on existing
   applications: exceptions that previously caused transactions to
   roll back might be committed, and vice versa.
   
   The fix for this APAR is currently targeted for inclusion in fix
   pack 8.5.5.9.  Please refer to the Recommended Updates page for
   delivery information:
   http://www.ibm.com/support/docview.wss?rs=180&uid=swg27004980 [http://www.ibm.com/support/docview.wss?rs=180&uid=swg27004980]
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   PI56467
   
   
 * REPORTED COMPONENT NAME
   WAS LIBERTY COR
   
   
 * REPORTED COMPONENT ID
   5725L2900
   
   
 * REPORTED RELEASE
   855
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt / Xsystem
   
   
 * SUBMITTED DATE
   2016-02-02
   
   
 * CLOSED DATE
   2016-02-03
   
   
 * LAST MODIFIED DATE
   2016-02-03
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   WAS LIBERTY COR
   
   
 * FIXED COMPONENT ID
   5725L2900
   
   

APPLICABLE COMPONENT LEVELS
 * R855 PSY
   UP