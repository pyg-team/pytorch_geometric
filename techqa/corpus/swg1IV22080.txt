Title: IBM IV22080: TSAM SSUI: FINISH BUTTON DOES NOT GET DISABLED AFTER IT IS PRESSED ONCE, RESULTING INTO MULTIPLE REQUESTS - United States

Text:
 SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  TSAM SSUI: Finish button does not get disabled after it
   is pressed once. Resulting into multiple request are
   submitted for same action.
   .
   The root cause for this issue on Internet Explorer:
   .
   All offerings that do a resource check before submission
   will show this kind of behavior. The resource check is
   done synchronously to make sure there are enough resources
   available before submitting the service request. Due to
   the nature of synchronous calls, the browser UI will be
   blocked until the call returns. While this is usually not
   a problem for statements executed before the call (like
   disabling the "finish" button), the slow rendering engine
   on IE will not yet have updated the DOM tree with the new
   attributes by the time the synchronous call is done. This
   leads to the situation that the "finish" button may even be
   set disabled, but the DOM node representing the button
   will not have been updated before it gets blocked. This
   will allow mouse click events from the user to still be
   processed and thus create two or more service requests.
   
   
    
   
   

LOCAL FIX

PROBLEM SUMMARY
 *  ****************************************************************
   * USERS AFFECTED: All users of Tivoli Service Automation Manager
   7.2.2.2
   ****************************************************************
   * PROBLEM DESCRIPTION:
   Finish button does not get disabled after it is pressed  once
   during offering submission on IE8.
   When clicking twice in a row. it can happen that two service
   requests get submitted.
   ****************************************************************
   * RECOMMENDATION:
   Apply 7.2.2.2-TIV-TSAM-LA0002
   
   For permanent resolution apply Tivoli Service Automation Manager
   7.2.3 when available.
   
   
    
   
   

PROBLEM CONCLUSION
 *  Root cause of the problem is that the rendering engine on IE8 is
   very slow compared with other browsers.
   The OK button does actually get disabled by javascript code
   before a synchronized XHR call gets to submit the service
   request, but the rendering engine on IE does not update the UI
   fast enough to actually
   propagate the disablement of the button before the synchronized
   call blocks the UI. If the user then clicks on the button again,
   the "click" event is stored on the internal event queue and gets
   fired right after SR submission is done, thus triggering
   a second SR submission.
   
   The fix wraps the SR handling in a closure that gets executed
   only once. Also, the closure is started with a little delay of a
   few msecs to give IE enough time to do the rendering before the
   SR is submitted
   
   The fix for this APAR is contained in the following packages:
   | 7.2.3-TIV-TSAM
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   IV22080
   
   
 * REPORTED COMPONENT NAME
   TSAM (& INSTALL
   
   
 * REPORTED COMPONENT ID
   5724W7800
   
   
 * REPORTED RELEASE
   722
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2012-06-04
   
   
 * CLOSED DATE
   2012-07-06
   
   
 * LAST MODIFIED DATE
   2012-07-06
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   TSAM (& INSTALL
   
   
 * FIXED COMPONENT ID
   5724W7800
   
   

APPLICABLE COMPONENT LEVELS
 * R722 PSY
   UP