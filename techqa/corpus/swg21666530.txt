Title: IBM javax.net.ssl.SSLHandshakeException occurs when applying WebSphere Message Broker fix pack - United States

Text:
IBM Integration Bus; javax.net.ssl.SSLHandshakeException; mqiinfo; SSL_RSA_WITH_AES_128_CBC_SHA TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 When you upgrade from WebSphere Message Broker (WMB) Version 7.0.0.3 or earlier to V7.0.0.4 or later, or from Version 8.0.0.0 (using Javaâ„¢ 6 SR9 FP1) to Version 8.0.0.1 (using Java 6 SR10) or later, SSL communication fails with the following exception: 

javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure 
Ignoring unsupported cipher suite: SSL_RSA_WITH_AES_128_CBC_SHA 

CAUSE
Advanced Encryption Standard (AES) ciphers, such as SSL_RSA_WITH_AES_128_CBC_SHA, became unavailable from WebSphere Message Broker V7.0.0.4 and V8.0.0.1 with protocol SSLv3.
The difference in behavior between these versions is due to a code change in the server/client handshake process in Java 1.6 SR10, to support TLSv1.2. In Java 6 SR10, both the server and client side check whether the selected cipher suite is supported by the selected protocol, but prior to Java 1.6 SR10, only the server side carried out the check. As a result, the AES / SSLv3 combination works on the client side for versions of WebSphere Message Broker that utilize JRE earlier than Java 6 SR10.

For more information, see the following Java documentation: Cipher Suites [http://publib.boulder.ibm.com/infocenter/javasdk/v6r0/index.jsp?topic=%2Fcom.ibm.java.security.component.60.doc%2Fsecurity-component%2Fjsse2Docs%2Fciphersuites.html].


DIAGNOSING THE PROBLEM
To identify the root cause of an SSL handshake_failure, check both the SSL client and SSL server trace.

The execution group (DataFlowEngine process) uses Java through JNI for SSL communication. For example, if the message flow includes a node that implements SSL communication, such as an HTTPRequest node or SOAPRequest node, its behavior can be captured by IBM JSSE trace. 


For more details about JSSE trace, see the following technote:

JSSE trace Instructions [http://www.ibm.com/support/docview.wss?uid=swg21300238]

A change was introduced in the JSSE in version 1.4.2 SR8 of the Java 2 platform. When IBMJSSE2 is used as a server, if the SSLv3 protocol is used for the handshake, it is no longer able to use any of the AES cipher suites. Previously, the selection of the cipher suite was independent of the protocol selected so an SSLv3 handshake could take place. The TLS protocol is not affected by this change. This change enables support for Microsoft Vista clients.

AES cipher suite is not defined in SSLv3 [RFC 6101] but is defined in TLS [RFC 2246 & RFC 3268].

WebSphere Message Broker V7.0.0.4 and V8.0.0.1 use IBM Java 6 SR10, which is the SR level that started checking AES ciphers on the SSL client side.

The following message is shown in the JSSE trace before "ClientHello": 

 * 
 * Ignoring unsupported cipher suite: SSL_RSA_WITH_AES_128_CBC_SHA
   Ignoring unsupported cipher suite: SSL_DHE_RSA_WITH_AES_128_CBC_SHA
   Ignoring unsupported cipher suite: SSL_DHE_DSS_WITH_AES_128_CBC_SHA
 * 

Note: This problem does not occur with IBM Integration Bus Version 9.0, which uses Java 7. 
RESOLVING THE PROBLEM
You can resolve the problem by changing the protocol from SSLv3 to TLS, to use the AES cipher: 

 * On SOAPRequest nodes, specify the Protocol property on the HTTP Transport tab. 
 * On HTTPRequest nodes, specify the Protocol property on the SSL tab. 


Alternatively, you can change to a cipher suite that can be used with SSLv3:  * On SOAPRequest nodes, specify the Allowed SSL Ciphers property on the HTTP Transport tab. 
 * On HTTPRequest nodes, specify the Allowed SSL Ciphers property on the SSL tab.

RELATED INFORMATION
#Java SDK 6 [http://www.ibm.com/support/knowledgecenter/SSYKE2_6.0.0/com.ibm.java.security.component.60.doc/security-component/jsse2Docs/ibmjsse2.html?lang=en]


 

PRODUCT ALIAS/SYNONYM
 WMB MB WebSphere Message Broker IBM Integration Bus IIB IBMIB MQ Integrator WBIMB WBI-MB MQSI WMQI