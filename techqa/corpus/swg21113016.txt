Title: IBM Manually Unconfiguring a DCE Security Server - United States

Text:
l2dce109 dcehint dcehintadmin TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Manually Unconfiguring a DCE Security Server 

RESOLVING THE PROBLEM
 

dcesetup unconfig_secserver is the proper way to unconfigure the security server part of DCE without touching the rest of a machine's DCE configuration. This command was introduced in patch 22 for DCE on Solaris 2.5, as defect fix 19528 in July of 1997. You should use the procedures described in this note only if it's impossible for you to use the dcesetup unconfig_secserver command for some reason. 

Suppose you want to unconfigure the security server part of DCE on a machine named foo. I'll assume that the CDS name of the security server is /.:/subsys/dce/sec/foo_rgy, and that it's a slave server. (If you want to unconfigure your master security server, then you'll first have to use dcecp registry designate to switch master / slave roles such that some other security server is the master.) I'll also assume that the security server on foo is up and running and healthy, and that the other security and CDS servers in your cell are also up. See the notes at the end for some additional hints in case the security server on foo is not actually operational enough for this procedure to work. 

Note that CDS names of security servers can be inconsistent. Today on Solaris, new security servers get CDS names like /.:/subsys/dce/sec/foo_rgy, but in the past, the master server was named /.:/subsys/dce/sec/master and replicas (slaves) were named like /.:/subsys/dce/sec/bar_slave. This was confusing since the master / slave roles could be changed but the CDS names stayed the same, so the security server named "master" in CDS wasn't necessarily the master. This confused people (but not DCE itself), so we changed it. Other DCE vendors may give different names to security servers. It doesn't really matter, as long as you know what the names are. You can use dcecp -c registry dump to get a list of your security servers; among other things you'll see each server's CDS name and its IP address. This should allow you to determine who's who. (You should run the registry dump command at a time when all security servers are up in order to get complete information.) 



Manually unconfiguring a healthy security server 

Here's the drill to unconfigure /.:/subsys/dce/sec/foo_rgy "by hand": 


 * 1.
 * 
 * 
 * 
 * 2.
 * 
 * 
 * 
 * 3.
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 4.
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 5.
 * 
 * 
 * 
 * 
 * 
 * (The next four steps constitute "local unconfiguration".) 
   
   6. Verify that secd is not running anymore on foo. 
   
   7. Remove local disk files on foo that belonged to secd (make sure you're really on foo when you do this!): 
   
   # rm /opt/dcelocal/var/security/.mkey
   # rm -r /opt/dcelocal/var/security/rgy_data
   # rm /opt/dcelocal/var/security/secd.log
   # rm /opt/dcelocal/var/security/sec_audit_trail*
   # rm -r /opt/dcelocal/var/security/rcache
   
   8. Edit the /opt/dcelocal/etc/setup_state file and remove the line that begins with "startup_secd". 
   
   9. If the foo security server appears in any machine's /opt/dcelocal/etc/security/pe_site file anywhere in your cell, then remove the line(s) that refer to foo and replace them with lines that refer to some other security server(s). [../security/pe_site.html]The pe_site file on foo itself will almost certainly include lines that refer to itself. 

Manually unconfiguring a dead security server If the security server on foo is in bad enough shape that the dcecp registry delete command fails, then you have to work harder. Here are some tips: 


 * Information about foo is kept in CDS, in the security registry, and on foo's local disk. You need to remove it from all three places in order to cleanly unconfigure. 

 * The master security server and the CDS server that stores master copies of /.: and /.:/subsys/dce/sec must be up for this to work. 

 * If you decide that you need to use the techniques here, you should manually kill the secd process on foo (if it's still running) before doing anything else. 

 * In CDS, you need to remove the server entry for foo_rgy and you need to remove foo_rgy from group /.:/sec. You can do those two things manually if necessary: 
   
   # dcecp -c rpcentry delete /.:/subsys/dce/sec/foo_rgy
   # dcecp -c rpcgroup remove /.:/sec \
   -member /.:/subsys/dce/sec/foo_rgy
   # dcecp -c directory list /.:/subsys/dce/sec
   # dcecp -c rpcgroup list /.:/sec
   
   (The last two lines are sanity checks to confirm the removal.) 

 * If foo was the master security server, then you can use a command like this to designate a different replica to be the master: 
   
   # dcecp -c registry designate /.:/subsys/dce/sec/bar_rgy -master
   
   (The registry designate command may be incorrectly documented as registry set in your manuals.) You should not need to use the -force option on this command unless your cell was in a funny state before the master server died. Do NOT use -force unless you know for sure what it does and why you need it. 

 * You can remove knowledge of foo from the security registry as follows: 
   
   # dcecp -c registry delete /.:/subsys/dce/sec/foo_rgy
   # dcecp -c registry catalog
   
   Again the second command confirms the removal, and you will have to add -force to the first command if and only if foo's security server is down. 

 * You should clean up foo's local disk and its /opt/dcelocal/etc/setup_state file and any client files as described in the last 4 steps of the procedure above. [/#local_rm]


After doing all this, the dcecp -c registry dump command should give you a correct listing of your security servers, and it should indicate that the last update time and sequence numbers of all the slaves match those of the master. This should be true no matter which machine you are on when you issue the registry dump command. Make sure to perform this sanity check when you're done. It would probably also be a good idea to add a test account, repeat the registry dump, and login using the test account -- if all that works, then your security servers are fine.  * 

Other notes You should check the pe_site file [../security/pe_site.html]on each of your client machines, and remove any references to the decommissioned security server.