Title: IBM ICM query: Troubleshooting error DGL7146A: The query string is too long or too complex - United States

Text:
7146; DGL7146A; The query string is too long or too complex TECHNOTE (FAQ)

QUESTION
 Error "DGL7146A: The query string is too long or too complex." is missing from the Messages and Codes book. 

ANSWER
Refer to the following documentation for information on this error until it is documented in the Messages and Codesbook. 

Error 

DGL7146A: The query string is too longor too complex. 

Error ID 

DKMessageIdICM.DK_ICM_MSG_QL_TOO_LONG_OR_TOO_COMPLEX = 7146 

Explanation
The database query that is generated for the specified query is too long or too complex to be executed by the database. 

When DB2Â® Content Manager processes an XPath query, it translates the query into an SQL statement that runs against the Content Manager database to produce the desired results. This error means that the SQL that was generated for the XPath query became too long or too complex for the database to execute. 

Most likely, the query contains too many wildcards (*) and did not have enough hints with the wildcards to allow the system to shorten the list of possible views for the wildcards. When a wildcard (*) is used, the system automatically expands the wildcard to all possible views in the system that are accessible to this user and that are allowed at the specified level in the hierarchy (for example, root, children of a specific view, and so on). The system automatically limits the list of possible views, based on other information provided next to the wildcard. If the resulting expanded query is beyond the maximum length of an SQL string that is allowed by the underlying database, this error is returned. 

If you have not defined any additional views in your system (also referred to as "item type subsets"), a base view is used with the same name as each item type and child component type. 

Action 

You can reduce the likelihood of encountering this error by using the following tactics. 

 * Avoid or limit the use of wildcards (*). Wildcards are the primary cause of this error. 
 * List all desired views instead of using a wildcard. There is a reasonable chance that your application is actually interested in less than the complete list of possible views. If you are not interested in system-defined type views or views that are used by other applications, explicitly providing a list can reduce the length of the generated SQL. For example, instead of using the query "/*", you can use "/Book | /Journal | /Conference". 
 * Use a single forward slash if you are only interested in root components, and not any child components, that meet the search criteria. Using "/*" instead of "//*" allows the system to include only root component type views, and exclude any child components. The double-slash requests any child of any type at any level; the forward slash requests only a fraction of available types on some systems. 
 * Specify the exact number of levels, if possible, to enable the system to include only views that have that many levels of children and only children of possible view types at that level. For example, if you know that the children you want are five levels deep, instead of using "//*", use "/*/*/*/*/*". 
 * Provide any known parent component type view names. If you want to search all of the children of a particular type view, specify any type of ancestor. The system limits the types to only those possible under that parent type. For example, instead of using "//*", use something like "/Book/*", "/Book//*", "//*/Paragraph//*", and so on. 
 * If you know of any attribute that is common to any of the levels through which you traverse, specify them. The system can determine which are the possible item types that have such attributes, and it can significantly limit the search results. For example, instead of using "//*", use "//*[@customerNum]", "/*/*[@pages]//*", and so on.



Cross reference information Segment Product Component Platform Version Edition Enterprise Content Management Content Manager Usage AIX, Linux, Solaris, UNIX, Windows 2000, Windows NT, Windows XP 8.1, 8.2