Title: IBM How to define the default behavior when no processing policy rules match - United States

Text:
datapower http get multi-protocol gateway mpgw match rule JSON 600limitation xa xs xg xi xb xm ve 382limitation 401limitation 402limitation 500limitation TECHNOTE (FAQ)

QUESTION
 Each XML Firewall or Multi-Protocol Gateway service has a processing policy that consists of one or more rules. These rules specify the criteria by which that rule is selected and the actions that are performed as the request or response passes through that service. But, what happens if none of the rule criteria is matched by any of the rules in the policy? The behavior of the service depends on many factors, including the request type, the response type, the type of service object, and so on.

When no processing policy rules of a processing policy are matched, the default behavior might not be the behavior that you want. Instead of using the default behavior, you can control the behavior with "match all" rules. 

CAUSE
When you define a DataPower service, if no processing policy rules are matched within that service, then the request takes the default actions for that service. The default actions are based on the service type, and the request and response types. In some cases, the actions might be to respond back with a 500 response code. In other cases, the request might be allowed to pass through the service.
To control the default behavior, add a "match-all" rule with the specific behavior to the end of the list of rules for that processing policy.


ANSWER
When you create a service, add a processing policy rule to the bottom of the list of rules. This rule should match all requests, and it should define the behavior you want to have when no other rules match. Repeat for a response rule. 


For example, consider configuring a match-all rule by specifying "*" for the URL to match on. All requests that are not handled by one of the preceding rules are handled explicitly by this match-all rule. This match-all rule can perform any operation on that request. If you want to pass the request through to the back end, you can do so. If you want to reject the request, you can do that as well.

To handle both request side and response side traffic, add a "match all" rule both to the client to server and to the server to client directions.

Some additional considerations depend on the request or response type and, in some cases, the service type:


 * Pass Through
 * 
 * 
 * 
 * 
 * 
 * HTTP GET
 * 
 * 
 *  Use the default configuration that disables the HTTP GET method. Handle the request with a "match all" rule. Handle the request with a rule that matches explicitly the HTTP GET method. 
 * 
 * 
 * 
 * JSON
 * 
 * 
 * 
 * 
 * NON-XML
 * 
 * 
 * 


In summary, when you create a DataPower service, explicitly add a "match all" rule in each direction that delivers the behavior that you want. Use this "match all" rule to reject requests and responses that fall outside of the parameters for which the service was intended.