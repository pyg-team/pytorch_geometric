Title: IBM LockPagesInMemory - TM1 server configuration parameter - United States

Text:
LockPagesInMemory PRODUCT DOCUMENTATION

ABSTRACT
 This document provides an expanded description of the LockPagesInMemory TM1 server configuration parameter, which is set in the Tm1s.cfg file. 

CONTENT
LockPagesInMemory 




This parameter is applicable only to IBM® Cognos® TM1® servers running on a Microsoft® Windows® 64-bit operating system. 

When this parameter is enabled (LockPagesInMemory=T), memory pages used by the TM1 process are held in memory ('locked') and do not page out to disk under any circumstances. This retains the pages in memory over an idle period, making access to TM1 data faster after the idle period. 

This parameter will have no effect on performance for an actively running TM1 system, in which TM1 data is regularly accessed.

Parameter type:
· Optional
· Static
If you change this parameter value, restart the TM1 server to apply the new value. 

When LockPagesInMemory is not present in Tm1s.cfg, or if the parameter is set to F, the following behavior is expected: 

When a TM1 server running on a Windows 64-bit operating system is idle for a period of time, physical memory taken up by the TM1 server is paged out to disk. This paging to disk happens even if there are no other processes contending for the memory pages. Essentially, Windows leaves the memory pages vacant and available. This is a function of the Windows 64-bit operating system and not TM1. 

This background paging by the Windows operating system can cause initial performance degradation in large TM1 databases when trying to access TM1 data after an idle period. For example, when the TM1 system has been inactive overnight the first access in the morning will take longer, as the required memory pages containing TM1 data are read from disk back into memory. Also, if the TM1 model is such that there are large cube data areas that are accessed infrequently, the memory holding that cube information may page out to disk. When a request is made for that cube data the request will take longer, as these infrequently used pages must be read back into memory. 

When LockPagesInMemory=T in Tm1s.cfg, the memory pages containing TM1 data are locked into memory and are not available for use at any time by any other process. This can make the system overall perform poorly if there are other tasks that need to run on the TM1 machine. For example, if the machine has 48 GB of physical memory, and the TM1 server takes 38 GB to fully load, then there are only 10 GB of physical memory to run any and all other processes, including system processes. These other processes may perform poorly because they may force extensive paging activity as the system tries to run them all in what would then essentially be a 10 GB machine. If a second TM1 server is started with the same LockPagesInMemory=T configuration setting, and that second TM1 instance would normally take 12 GB to load, the load will fail since that TM1 server can not lock 12 GB of memory, as there is only 10 GB available.