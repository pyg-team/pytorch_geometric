Title: IBM Delay of 15 seconds to detect socket closed on Solaris - United States

Text:
LdapCtx_c_search; ServiceUnavailableException; Connection_readReply ; 6870947; delay; delayladp; IZ56135; IZ56135_Solaris; Solaris_IZ56135 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 It takes more than 15 seconds to display a page and in security(you can find URL of it's MustGather technote below) trace log, you can find:

LdapConnectio 1 com.ibm.ws.wim.adapter.ldap.LdapConnection search(String, String, Object[], searchControls) Exception caught: javax.naming.ServiceUnavailableException: ldap.ibm.com:389; socket closed; remaining name 'dc=ibm' 


SYMPTOM
[9/22/11 14:10:49:463 CST] 0000007f LdapConnectio 1 com.ibm.ws.wim.adapter.ldap.LdapConnection search(String, String, Object[], searchControls) Exception caught: javax.naming.ServiceUnavailableException: ldap.ibm.com:389; socket closed; remaining name 'dc=ibm' 
at om.sun.jndi.ldap.Connection.readReply(Connection.java:419) 
at com.sun.jndi.ldap.LdapClient.getSearchReply(LdapClient.java:611) 
at com.sun.jndi.ldap.LdapClient.search(LdapClient.java:534) 
at com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1962) 
at com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1824) 
at com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1749) 
at com.sun.jndi.toolkit.ctx.ComponentDirContext.p_search(ComponentDirContext.java:368)
at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:338) 

After further analysis, from the trace log, we can find:

[9/22/11 14:10:33:954 CST] 0000007f LTPAToken 3 tokenString after 
decrypt: 
u:user\:ldap.ibm.com\:389/uid=test,ou=users,dc=ibm%**** 

... ... 
/// After around 15 seconds, find the connection closed 
[9/22/11 14:10:49:463 CST] 0000007f LdapConnectio 1 
com.ibm.ws.wim.adapter.ldap.LdapConnection search(String, String, 
Object[], SearchControls) Exception caught: 

javax.naming.ServiceUnavailableException: abc.ibm.com:389; socket 
closed; remaining name 'dc=ibm' 
at com.sun.jndi.ldap.Connection.readReply(Connection.java:419) 
at com.sun.jndi.ldap.LdapClient.getSearchReply(LdapClient.java:611) 
at com.sun.jndi.ldap.LdapClient.search(LdapClient.java:534) 
at com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1962) 
at com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1824) 
at com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1749) 
at com.sun.jndi.toolkit.ctx.ComponentDirContext.p_search(ComponentDirContext.java:368) 
at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.jva:338) 
at javax.naming.directory.InitialDirContext.search(InitialDirContext.java:257) 
at com.ibm.ws.wim.adapter.ldap.LdapConnection.search(LdapConnection.java:2741) 

... ... 
/// Then WebSphere tries to reconnect to the socket:

[9/22/11 14:10:49:469 CST] 0000007f LdapConnectio > 
com.ibm.ws.wim.adapter.ldap.LdapConnection JNDI_CALL 
createDirContext(Hashtable, long) ENTRY ldap://ldap.ibm.com:389 
uid=test,ou=users,dc=ibm 


CAUSE
Oracle Bug ID: 6870947
15 sec delay detecting "socket closed" condition when a TCP connection is reset by an LDAP server 

http://bugs.sun.com/view_bug.do?bug_id=6870947 [http://bugs.sun.com/view_bug.do?bug_id=6870947] 



DIAGNOSING THE PROBLEM
To diagnose this issue, please enable a security trace and capture the trace data during the time of the problem. You can enable a security trace specification as following technote's instruction. 

MustGather: Security problems for WebSphere Application Server
http://www-01.ibm.com/support/docview.wss?uid=swg21470063 [http://www-01.ibm.com/support/docview.wss?uid=swg21470063] 

 From the trace log, if you find after it does an LDAP search and around 15 seconds later, reports the socket to LDAP server is closed, then this issue is reported in Bug ID: 6870947: 

15 sec delay detecting "socket closed" condition when a TCP connection is reset by an LDAP server 

http://bugs.sun.com/view_bug.do?bug_id=6870947 [http://bugs.sun.com/view_bug.do?bug_id=6870947] 

You can find the recreation steps in the above document. 


Note that this is a Solaris platform, on which we run the IBM/Oracle Hybrid JDK. The base JDK (which includes the LDAP code in the class library) originates from Oracle and we are unable to deliver fixes in that part of the code base independently. We are reliant on Oracle to deliver such fixes. 
Oracle has fixed Bug ID: 6870947 in Java 1.6.0_27.


RESOLVING THE PROBLEM
Choose one of following actions to resolve the issue: 

 1. Upgrade JDK to 1.6.0_27 or above. The fix is available beginning with SDK Fix Pack 7.0.0.23 with SDK build 1.6.0_31. The link to the Fix Pack download page is provided below:
    
    IBM 7.0.0.23: Java SDK 1.6 SR10 FP1 Cumulative Fix for WebSphere - United Stateshttp://www.ibm.com/support/docview.wss?uid=swg24032506 [http://www.ibm.com/support/docview.wss?uid=swg24032506]
    
    You can find the latest Fix Pack for WebSphere Application Server at the following link:
    
    IBM Recommended fixes for WebSphere Application Server - United States
    http://www.ibm.com/support/docview.wss?uid=swg27004980#ver70 [http://www.ibm.com/support/docview.wss?uid=swg27004980#ver70]
    
    
 2. As work around, add the following JVM generic argument :-Dcom.sun.jndi.ldap.read.timeout=[integer value in milliseconds]
    
    
    Find out Where to set generic JVM arguments in WebSphere Application Server 
    http://www.ibm.com/support/docview.wss?uid=swg21417365 [http://www.ibm.com/support/docview.wss?uid=swg21417365]