Title: IBM Behavior of isunknown operator for Java object attributes - United States

Text:
isknown; isunknown TECHNOTE (FAQ)

QUESTION
 Why does isunknown always return false for Java object attributes? 

ANSWER
For Java objects (not XML objects), the keywords isknown and isunknown have a constant behavior:

 * isknown always returns true, whatever the type and value of the attribute
 * isunknown always returns false, whatever the type and value of the attribute

This is because the unknown concept has no real meaning in Java, as all the fields of a Java object have a defined value when the object is created, including the primitive data types.

 

For XML objects, all the fields are represented by objects, including the primitive data types. Such a representation provides the unknown meaning when a field is null. 

You should manage unknown values for Java objects according to the context. For instance, you must define the unknown value for primitive types (primitive Java types cannot have the null value). For instance: 

public class MyClass {

 public static int INT_UNKNOWN_VALUE = -1;

 ...

}



Here, '-1' defines an unknown value for integer attributes. This implies to arbitrarily choose a value that should never be used in real data (we suppose that -1 will never be used in real life data).

For non primitive-typed attributes, the unknown value should be null. 

You must make the tests using these constants, without using isknown or isunknown:



rule TestUnknown
{ 
when {
?c : MyClass (someIntAttribute == MyClass.INT_UNKNOWN_VALUE);
} then {...




Cross reference information Segment Product Component Platform Version Edition Business Integration IBM Operational Decision Manager Platform Independent 7.5 Enterprise 
HISTORICAL NUMBER
 jrules/FAQ/23