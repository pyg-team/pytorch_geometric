Title: IBM Failed login authenticate with external userid using Windows Active Directory LDAP - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Getting failed login authenticate with external userid, IBM Sterling B2B Integrator (SBI) connected to Active Directory Windows LDAP using SSL. When attempt was made to login from myfilegateway UI or SBI UI as an external userid, it failed with ‘Invalid user name and/or password’, and the SBI Authentication log posted a CommunicationException. 

SYMPTOM
 SBI Authentication log posted errors and java exception: 

[2013-11-22 14:36:14.458] DEBUG SecurityManager user:ABCuser attempting to log in (SSO:false)
[2013-11-22 14:36:14.458] DEBUG LDAPAuthentication user:ABCuser is identified as an EXTERNAL User
[2013-11-22 14:36:14.458] DEBUG LDAPAuthentication performing LDAP search....
[2013-11-22 14:36:14.458] ALL LDAPAuthenticationLDAP port: 636
[2013-11-22 14:36:14.458] ALL LDAPAuthenticationLDAP connect timeout:com.sun.jndi.ldap.connect.timeout=50000

[2013-11-22 14:36:14.568] ERROR LDAPAuthentication LDAP authentication has failed with exception for user:ABCuser
[2013-11-22 14:36:14.568] ERROR [1385148974568] abc.com:636
[2013-11-22 14:36:14.568] ERRORDTL [1385148974568]javax.naming.CommunicationException: abc:636 [Root exception is java.net.SocketException: java.security.NoSuchAlgorithmException: Error constructing implementation (algorithm: Default, provider: SunJSSE, class: com.sun.net.ssl.internal.ssl.DefaultSSLContextImpl)]
at com.sun.jndi.ldap.Connection.<init>(Connection.java:200)
at com.sun.jndi.ldap.LdapClient.<init>(LdapClient.java:118)
at com.sun.jndi.ldap.LdapClient.getInstance(LdapClient.java:1580)
at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2652)
at com.sun.jndi.ldap.LdapCtx.<init>(LdapCtx.java:293) 


CAUSE
 Trailing spaces after the LDAP properties.


ENVIRONMENT
SI connected SSL to Windows Active Directory LDAP server



DIAGNOSING THE PROBLEM
Noting a few things to check and be aware of while setting up a SSL LDAP configuration in SBI: 


1. Remove all trailing spaces after each LDAP property in the customer_overrides.properties file or in the authentication_policy.properties file.

2. If the LDAP server is configured for Server Authentication (not Client/Server Authentication), the two LDAP Keystore properties of LDAP_SECURITY_KEYSTORE and LDAP_SECURITY_KEYSTORE_PASSWORD are not needed. You only need to specify the two LDAP Truststore properties LDAP_SECURITY_TRUSTSTORE and LDAP_SECURITY_TRUSTSTORE_PASSWORD in the SI Authentication_policy.properties file or in customer_overrides.properties file, the Truststore should contain the LDAP server public certificate.

3. The key password should be the same as the KeyStore password. This is checked if configuring the LDAP keystore properties:

LDAP_SECURITY_KEYSTORE=/home/yourkeystore.jks
LDAP_SECURITY_KEYSTORE_PASSWORD=yourpassword

4. Using the Keytool Java Utility, which comes with SI located in the SI_install/jdk/bin dir. This command is used to list the certificates within the keystore file:

keytool -list -v -keystore your_keystore_name.jks

And ensure the Keystore type is jks.

5. On LDAP Windows Active Directory, you must use two back slashes when configuring the properties within SBI because at product initialization, one of the back slashes will be removed. This can be verified by using QueueWatcher in SBI and reviewing your properties file, for example: 

authentication_policy.LDAP_SECURITY_TRUSTSTORE=E:\\IBM\\si_truststore_ikeyman.jks
authentication_policy.LDAP_SECURITY_KEYSTORE=E:\\IBM\\si_keystore_ikeyman.jks

Once SI is up and active, you can review the top of the SI Authentication log to ensure it is correctly pointing to your LDAP Truststore and Keystore directories correctly. For example you will see: <Java System Props> {javax.net.ssl.trustStore = E:\IBM\si_truststore, javax.net.ssl.keyStore = E:\IBM\si_keystore}

6. Ensure your SBI user id is configured within SBI as an Authentication Type of External.
Also ensure this same user id is configured within the LDAP server using the same case.


7. All of the required LDAP parameters should be configured within the authentication_policy.properties file or they can be configured within the customer_overrides.properties file using the correct prefix, authentication_policy. All of the needed properties should be in one or the other properties file. Best practice is to keep them in one location.


RESOLVING THE PROBLEM
Cleared all trailing spaces after the LDAP properties. Verified that all required parameters were set within the customer_overrides.properties or authenication_policy.properties.