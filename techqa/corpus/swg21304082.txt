Title: IBM Failed object imports create rows in the ICMSTITEMS001001 table that have no corresponding entries in the RMOBJECTS table - United States

Text:
ICMSTITEMS001001; Failed import; Rows added to ICMSTITEMS001001 during import failure; INPROGRESS TECHNOTE (FAQ)

QUESTION
 When an object is imported into the DB2® Content Manager Version 8.3 or Version 8.4 system and the import fails, rows are added to the ICMSTITEMS001001 table related to the import attempt. However, no corresponding rows are found in the RMOBJECTS table. Furthermore, if you run routine DB2 Content Manager V8.3 or V8.4 utilities, such as the asynchronous recovery utility, these utilities fail to clean the extra rows from the table. 

CAUSE
This function is working as designed. The rows added to the ICMSTITEMS001001 table are intended to be used for troubleshooting purposes by the DB2® Content Manager V8.3 or V8.4 system administrator when troubleshooting reported import problems. Therefore, the rows are not removed by any DB2 Content Manager V8.3 or V8.4 utilities. The asynchronous recovery utility is designed such that it will not delete these records from the ICMSTITEMS001001 table.
In an asynchronous recovery process, DB2 Content Manager purposely does not remove these rows from the ICMSTITEMS001001 table in order to aid in troubleshooting. If a row is left in this state in the ICMSTITEMS001001 table, it means that a transaction failure has occurred after the library server generated an item ID but before an object could be stored to the resource manager. The rows help identify when and why transaction failures occurred.

For example, the "CHANGED" time stamp column in that row can be an indicator of the block of time when transactions failed. If you can correlate this block of time with another known problem on your system (for example, when your network was down or when a system failure occurred), you will be able to determine why these transactions failed.


ANSWER
If you want to clean up these rows from the table (for example, after you finished analysis of the rows where INPROGRESS=1, and now want to delete them), then you can issue the following SQL statement, where yyyy-mm-dd-hh.mm.ss.tttttt is the time stamp that you choose as the watermark for expired transactions: 

DELETE FROM ICMSTITEMS001001
WHERE INPROGRESS=1 AND
CHANGED < 'yyyy-mm-dd-hh.mm.ss.tttttt'

Recommendation: If you have a large number of rows in ICMSTITEMS001001 with INPROGRESS=1, then consider performing this clean-up during off-hours, or use the "pause" feature of the library server before running it. If the number of rows deleted is large, this locks the ICMSTITEMS001001 table until all deletes are committed, which would deadlock other transactions going on in parallel.

Also, always back up the table before executing any SQL statement manually against the library in case you need to restore the data.