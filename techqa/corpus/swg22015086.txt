Title: IBM DIA5000C error with dump file - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Whenever Db2 logs a DIA5000C error in the db2diag.log and creates a dump file for no obvious reason, meanwhile applications got ADM2502C. The first suggestion to customers is to check the network, meaning reviewing OS logs of network layer and/or network router/switch infrastructure for possible errors. Even there is not clear errors from network, but there is a chance the data transmitted over the network got corrupted, causing the error. 

SYMPTOM
Example of DIA5000C error in db2diag.log 

2018-03-14-19.12.08.558428-240 E12195757E791 LEVEL: Error
PID : xxx TID : 140610858116864 PROC : db2sysc 
INSTANCE: xxx NODE : 000 DB :
APPHDL : xxx APPID: xxx
AUTHID : xxx HOSTNAME:xxx
EDUID : xxx EDUNAME: db2agent (instance) 2
FUNCTION: DB2 UDB, Common Trace API, sqljsParseInstVar, probe:410
MESSAGE : DIA5000C A DRDA AS token "RECOVERABLE" was detected. The diagnostic
data returned is (SRVDGN): "FUNCTION ID = 0045 , PROBE POINT = 0410 ,
TRACE POINT = 0020 , SUBCODE1 = FFFFFFFF804B008D, SUBCODE2 =
000000000000C501, SUBCODE3 = 0000000000000000, ERROR MSG = Parser:
Invalid DDM length".

2018-03-14-19.12.08.559691-240 I12196549E665 LEVEL: Error
PID : xxx TID : xxx PROC : db2sysc 
INSTANCE: xxx NODE : 000 DB :
APPHDL : xxx APPID: xxx
AUTHID : xxx HOSTNAME: xxx
EDUID : xxx EDUNAME: db2agent (instance) 
FUNCTION: DB2 UDB, Common Trace API, sqljsParseInstVar, probe:20
MESSAGE : ZRC=0x804B008D=-2142568307=SQLJS_SYNTAX "SYNTAX ERROR"
DATA #1 : DDM Object, PD_TYPE_DDM_OBJECT, 16 bytes

data length : 18446744073709551612 -> extremely large
codepoint : 0xc501 ( UNKNOWN )
length : 0 ( COMPLETE )

2018-03-14-19.12.08.615489-240 I12197215E200 LEVEL: Error
PID:xxx TID:xxx NODE:000 Title: **** DRDA ASCB ****
Dump File:/xxx/sqllib/db2dump/17627.28271.002.dump.bin

And from the function definition of sqljsParseInstVar, clearly the code is expecting data of length 0 but the receive buffer shows otherwise and the codepoint is also unknown codepoint : 0xc501 ( UNKNOWN ) 
So in this case, server got unexpected data/value from client by network, then generated one dump file.