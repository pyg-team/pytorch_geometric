Title: IBM WebSphere Application Server Hang in Federated Repository LDAP when using the default settings - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 After an idle period of time accessing applications that requires Lightweight Directory Access Protocol (LDAP) authentication, when using the Federated Repository in WebSphere Application Server, any attempt to log into the application hangs, and the page does not load. It may take 10-15 minutes before you can access the pages, as if the issue cleared itself up.


SYMPTOM
After a long period of idle time, access to your application becomes hung. But after a user connection is successful, everything is working again. 

 * Firewall set with an idle timeout 
 * Default settings are in use for the LDAP configuration (or context pooling doesn't have a timeout configured) 
 * This only applies to the Federated Repository, not stand-alone LDAP. 


CAUSE
Due to the way the default settings are set for the Federated Repository LDAP configuration, a firewall can idle timeout a connection, and since the pooled connections are not removed from the pool immediately until the connection is retried and fails after a period of time. 


DIAGNOSING THE PROBLEM
You will first observe your application hangs, and eventually hung threads are observed in the SystemOut.log. If you take javacores during this time, you are likely to see threads similar to the state below, where the WIM adapter is calling LDAP methods. The threads may be in a wait state or may be directly calling readReply(): 

 

at java/lang/Object.wait(Native Method) 
at java/lang/Object.wait(Object.java:231(Compiled Code)) 
at com/sun/jndi/ldap/Connection.readReply(Connection.java:446) 
at com/sun/jndi/ldap/LdapClient.getSearchReply(LdapClient.java:626) 
at com/sun/jndi/ldap/LdapClient.search(LdapClient.java:549) 
at com/sun/jndi/ldap/LdapCtx.doSearch(LdapCtx.java:1959) 
at com/sun/jndi/ldap/LdapCtx.searchAux(LdapCtx.java:1821) 
at com/sun/jndi/ldap/LdapCtx.c_search(LdapCtx.java:1746) 
at com/sun/jndi/toolkit/ctx/ComponentDirContext.p_search(ComponentDirContext.java:383) 
at com/sun/jndi/toolkit/ctx/PartialCompositeDirContext.search(PartialCompositeDirContext.java:353) 
at javax/naming/directory/InitialDirContext.search(InitialDirContext.java:268) 
at com/ibm/ws/wim/adapter/ldap/LdapConnection.search(LdapConnection.java:2512) 
at com/ibm/ws/wim/adapter/ldap/LdapConnection.checkSearchCache(LdapConnection.java:2473) 
at com/ibm/ws/wim/adapter/ldap/LdapConnection.search(LdapConnection.java:2653) 
at com/ibm/ws/wim/adapter/ldap/LdapConnection.searchEntities(LdapConnection.java:2797) 
at com/ibm/ws/wim/adapter/ldap/LdapAdapter.login(LdapAdapter.java:2572) 
at com/ibm/ws/wim/ProfileManager.loginImpl(ProfileManager.java:3329) 
at com/ibm/ws/wim/ProfileManager.genericProfileManagerMethod(ProfileManager.java:273) 
at com/ibm/ws/wim/ProfileManager.login(ProfileManager.java:377) 
at com/ibm/websphere/wim/ServiceProvider.login(ServiceProvider.java:482)
at com/ibm/ws/wim/registry/util/LoginBridge.checkPassword(LoginBridge.java:169) 
at com/ibm/ws/wim/registry/WIMUserRegistry$1.run(WIMUserRegistry.java:173) 
at com/ibm/ws/security/auth/ContextManagerImpl.runAs(ContextManagerImpl.java:4132) 

 


What is happening is that, when using the default timeout settings, the firewall's (or some backend resource's) idle timeout has fired and that any new connections to the LDAP server, passing through the firewall, will never reach their destination. 

By default, the LDAP on WebSphere Application Server is configured to use context pooling with no timeout configured., meaning that every single LDAP connection is sharing the same open pooled connections, and if these connections sit idle for a long period of time then are subsequently accessed, hangs will be observed

The LDAP request will retry again and again (with longer retry intervals) until it simply closes the unresponsive connection and generates a new one (this could take upwards of 15 minutes). The new connection will succeed through the firewall and further connections will work as well without any hang.


RESOLVING THE PROBLEM
From the WebSphere Application Server admin console, there are two ways to prevent this problem. 

Navigate to Security > Global Security > click Configure... (with Federated Repository selected) > Manage Repositories > Repository Name > Performance 

1. Set the Context Pool Times Out setting 

 * 
 * 
 * Context pool times out 
 * 
 * Context Pool
 * 
 * Do not set the timeout too small, as that would defeat the purpose of the context pool.


2. Disable Context Pooling  * 
 * 
 * Enable context pool
 * 
 * 


Documentation WebSphere Application Server 7.0 

 * 
 * Tuning the access to the LDAP server
 * Lightweight Directory Access Protocol Performance Settings [http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.nd.multiplatform.doc/info/ae/ae/uwim_ldapperfsettings.html]


WebSphere Application Server 8.0  * 
 * Tuning the access to the LDAP server
 * Lightweight Directory Access Protocol Performance Settings [http://www14.software.ibm.com/webapp/wsbroker/redirect?version=matt&product=was-nd-mp&topic=uwim_ldapperfsettings]


WebSphere Application Server 8.5 & 8.5.5  * 
 * Tuning the access to the LDAP server
 * Lightweight Directory Access Protocol Performance Settings [http://pic.dhe.ibm.com/infocenter/wasinfo/v8r5/topic/com.ibm.websphere.nd.multiplatform.doc/ae/uwim_ldapperfsettings.html]


WebSphere Application Server 9.0  * 
 * Lightweight Directory Access Protocol Performance Settings
 * Tuning federated LDAP repositories in Liberty [https://www.ibm.com/support/knowledgecenter/en/SSEQTP_9.0.0/com.ibm.websphere.wlp.nd.multiplatform.doc/ae/twlp_tun_fedldap.html]
   
   
   


Related Technotes 
How can LDAP connection pooling be configured in WebSphere Application Server with Standalone LDAP repository [http://www.IBM.com/support/docview.wss?uid=swg21215841] (if you are not using an LDAP configuration in the admin console) 

Application server hang occurs after period of server idleness [http://www.ibm.com/support/docview.wss?uid=swg21574779] (WebSphere Portal)