Title: IBM Timeout/Hang on the SOA Topology workspaces - United States

Text:
timeout; topology; SOA; connection pool; SDMS; KD4UI0004E; CAMSOAALL CAMSOAPERF CAMSOADB TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 For large environments, with hundreds/thousands of monitored operations, the default settings of the embedded WAS component of TEPS may need some tuning, in order to avoid timeout/hang when accessing the topology and services management workspaces. 

SYMPTOM
Accessing SOA topology (in any way, either from the specific view, or
from a contextual link on the service inventory, or also from the service management workspace) you get, after a long time (2 or more minutes), an error message in TEP KD4UI0004E. As a result, the workspace will not be populated at all.


DIAGNOSING THE PROBLEM
It is highly suggested to inspect the eWAS log. This is a standard Websphere Application Server "SystemOut.log" located in the path: 

 * for Windows TEPS: <ITM_HOME>\CNPSJ\profiles\ITMProfile\logs\ITMServer 
 * for Unix TEPS: <ITM_HOME>/<ARCHITECTURE>/iw/profiles/ITMProfile/logs/ITMServer


You could look for exceptions similar to these:  * 
 * com.ibm.management.soa.dms.exceptions.DMSDataFormatException: com.ibm.management.soa.dms.exceptions.DMSDataFormatException KD4DM0023E The SDMS command failed due to errors accessing the SDMS database.: java.lang.NullPointerException
   ...
   SDMSFacadeBea E KD4DM0003E An internal error occurred in the SOA Domain Management Server while processing a request.
   ...
   javax.ejb.TransactionRolledbackLocalException: ; nested exception is: javax.transaction.TransactionRolledbackException: Transaction is ended due to timeout


Additionally, if you want to provide more detailed traces to the IBM Support, here is the RAS1 suggested trace setting: KBB_RAS1=ERROR (UNIT:QueryModelManager ALL) (UNIT:TepsQueryHelper ALL) (UNIT:EvaluatorHolderImpl ALL) (UNIT:KD4EVAL ALL) 

However, for the above timeout errors, the key is to validate the JDBC datasource configured in eWAS component and, if possible, debug/monitor the SDMS database locks on DB side. 

1) eWAS JDBC Datasource configuration validation 

From a command prompt, you need to launch the wsadmin.sh tool as follows: 

<...>/ITMProfile/bin/wsadmin.sh (or wsadmin.bat for Windows TEPS) 

[/support/docview.wss?uid=swg21576043&aid=1] [/support/docview.wss?uid=swg21576043&aid=1] 

 * Now you can query eWAS:


wsadmin>$AdminConfig list DataSource [/support/docview.wss?uid=swg21576043&aid=2] [/support/docview.wss?uid=swg21576043&aid=2] 

Based on the above result (NOTE: your output will differ in the trailing numbers), you can query the kd4SDMSDatasource as follows: 

wsadmin>$AdminConfig show kd4SDMSDatasource(cells/ITMCell/nodes/ITMNode/servers/ITMServer|resources.xml#DataSource_1322492601964) 

and here is an output example of a proper configured datasource: 

{authDataAlias ITMNode/kd4Alias}
{authMechanismPreference BASIC_PASSWORD}
{connectionPool (cells/ITMCell/nodes/ITMNode/servers/ITMServer|resources.xml#ConnectionPool_1322492601965)}
{description "KD4 DataSource"}
{diagnoseConnectionUsage false}
{jndiName jdbc/SDMS}
{logMissingTransactionContext true}
{manageCachedHandles false}
{mapping (cells/ITMCell/nodes/ITMNode/servers/ITMServer|resources.xml#MappingModule_1322492601965)}
{name kd4SDMSDatasource}
{propertySet (cells/ITMCell/nodes/ITMNode/servers/ITMServer|resources.xml#J2EEResourcePropertySet_1322492602025)}
{provider kd4SDMSJDBCProvider(cells/ITMCell/nodes/ITMNode/servers/ITMServer|resources.xml#JDBCProvider_1322492599965)}
{relationalResourceAdapter "WebSphere Relational Resource Adapter(cells/ITMCell/nodes/ITMNode/servers/ITMServer|resources.xml#builtin_rra)"}
{statementCacheSize 0} 

 * Another check is on kd4SDMSJDBCProvider:


wsadmin>$AdminConfig show kd4SDMSJDBCProvider(cells/ITMCell/nodes/ITMNode/servers/ITMServer|resources.xml#JDBCProvider_1322492599965) {classpath /opt/IBM/ITM/li6263/cq/Products/KD4/latest/lib/db2jcc.jar;/opt/IBM/ITM/li6263/cq/Products/KD4/latest/lib/db2jcc_license_cu.jar}
{implementationClassName com.ibm.db2.jcc.DB2ConnectionPoolDataSource}
{name kd4SDMSJDBCProvider}
{nativepath {}}
{xa false} 

Now, it is a good idea to confirm that the two jars exist at i.e. /opt/IBM/ITM/li6263/cq/Products/KD4/latest/lib/db2jcc.jar and /opt/IBM/ITM/li6263/cq/Products/KD4/latest/lib/db2jcc_license_cu.jar 

 * Finally, once confirmed the above settings are OK, you can query the eWAS ConnectionPool as follows:


wsadmin>$AdminConfig show (cells/ITMCell/nodes/ITMNode/servers/ITMServer|resources.xml#ConnectionPool_1322492601965)  * 
 * 
 * {connectionTimeout 180}
 * 
 * 
 * 
 * {maxConnections 10}
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 


The above output shows the default settings for the eWAS KD4 Connection Pool. 2) SDMS database locks validation 

In order to check the active locks on the KD4SDMS database you need to run a database profiling tool, for example "db2top" for DB2/Unix. 

Just invoke 'db2top' as follows: (using the correct DB2 user, i.e. db2inst1) 

db2top -d KD4SDMS -a 

and select the 'U' menu option to display the current active locks 

[/support/docview.wss?uid=swg21576043&aid=3] [/support/docview.wss?uid=swg21576043&aid=3] 

In the above example, the 'Locks held' value is pretty high (more than 10) and it tends to increase during the TEPS query needed to populate the SOA Topology views.


RESOLVING THE PROBLEM
In the situation depicted above, there is a large number of dangling queries that need to timeout and be cleaned up. To confirm this, you can run the following queries: 

wsadmin>set objectName [$AdminControl queryNames *:name=kd4SDMSDatasource,*]
...
wsadmin>$AdminControl invoke $objectName showAllPoolContents 

 * 
 * 
 * 
 * 
 * Total number of connections: 10 (max/min 10/1, reap/unused/aged 180/1800/0, connectiontimeout/purge 180/EntirePool)
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * Total number of connection in shared pool: 10
 * 
 * 
 * 
 * No free connections
 * 
 * 
 * 
 * 


Adding more connections to the connection pool in eWAS most likely will help to resolve the problem. wsadmin>$AdminControl setAttribute $objectName maxConnections 20 

(there is no response from running this command if there were no problems) 

Finally, to permanently save the changes: 

wsadmin>$AdminConfig save 

(there is no response from running this command if there were no problems) 

Now, the 'Locks held' should begin to fall. In few seconds or minutes the ConnectionPool will not be a bottleneck anymore, i.e. 

 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 13 
 * 
 * max/min 20/1
 * 
 * 
 * 


and you should be able to get populated the SOA Topology views in few seconds.