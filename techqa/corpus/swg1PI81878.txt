Title: IBM PI81878: ISSUE WITH NON-TRIVIAL CONSTRUCTOR INITIALIZER - United States

Text:
  A FIX IS AVAILABLE
IBM Rational Rhapsody 8.3.0 [http://www-01.ibm.com/support/docview.wss?uid=swg24044061]


SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  After updating a model from an earlier version of Rhapsody to
   Rhapsody 8.2, There are  some instances where the code is
   incorrect.
   When a constructor initializer contains a boolean expression
   with a greater-than (>) symbol, this is causing Rhapsody to
   generate what appears to be garbled code.
   For example, if the ctor initializer in the model contains the
   following:
   
   itsClass(argument_0, argument_0 > 0, argument_0, argument_0),
   attribute_0(argument_0)
   
   the resulting code is:
   
   class_with_gt_initializer::class_with_gt_initializer(int
   argument_0) :
   itsClass(argument_0, argument_0 > 0,
   argument_0),
   attribute_0(argument_0),
   argument_0),
   attribute_0(argument_0) {
   
   I have tried setting CPP_CG::Class::MultiLineInitializerList to
   false to see if the feature to format the initializer list on
   multiple lines is causing the issue, but that does not resolve
   it.
   
   
    
   
   

LOCAL FIX

PROBLEM SUMMARY
 *  ****************************************************************
   * USERS AFFECTED:                                              *
   * Rhapsody                                                     *
   ****************************************************************
   * PROBLEM DESCRIPTION:                                         *
   * ISSUE WITH NON-TRIVIAL CONSTRUCTOR INITIALIZER               *
   ****************************************************************
   * RECOMMENDATION:                                              *
   ****************************************************************
   
   
    
   
   

PROBLEM CONCLUSION
 *  constructor initializer with the chanracters '>','<' sometimes
   not Roundtriped, generated correctly
   problem fixed.
   
   one limitation stay, if initializer contain generalization to
   template class the strig in the template  <> section must not
   contain the charcters   '>','<' (exept as template brackets)
   posible work around this limitations:
   - brackets around the template  expresions, exapmples:
   superclass<(template_expersion > 1)>(init_expression)
    superclass<<(expe1 >1)>,<(expe2 <1)>>(init expression)
   -use property CPP_CG::Operation::OrderedConstructorInitializer
   for correct none reorder code generation
   -use property
   CPP_CG::Operation::DisableAutoGeneratedInitializer
   for simpler code generation and Roundtrip of constructor
   initialaizer, in this case the initialazer is a simple string
   that copied as is from the initializer field to the code in code
   generation and to the model in roundtrip
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   PI81878
   
   
 * REPORTED COMPONENT NAME
   TLOGIC RHAPSODY
   
   
 * REPORTED COMPONENT ID
   5724V74RP
   
   
 * REPORTED RELEASE
   820
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt / Xsystem
   
   
 * SUBMITTED DATE
   2017-05-19
   
   
 * CLOSED DATE
   2017-12-04
   
   
 * LAST MODIFIED DATE
   2017-12-04
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   TLOGIC RHAPSODY
   
   
 * FIXED COMPONENT ID
   5724V74RP
   
   

APPLICABLE COMPONENT LEVELS
 * R820 PSY
   UP