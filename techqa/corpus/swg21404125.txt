Title: IBM WebSphere MQ SSL/TLS client application MQRC_SSL_INITIALIZATION_ERROR when launched in a DB2 UNIX environment. - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 WebSphere MQ SSL/TLS client application fails to connect with error MQRC_SSL_INITIALIZATION_ERROR when launched in a DB2 UNIX environment. (WebSphere MQ V7.0 or earlier) 

SYMPTOM
When running a WebSphere MQ SSL/TLS client application from a UNIX command shell where a DB2 library directory has been added to the library search path, the client application is unable to connect to the queue manager. The MQ connect call fails with error MQRC_SSL_INITIALIZATION_ERROR (2393). 

When the same application is executed in a command shell without DB2 on the library search path, then it is able to connect successfully.

In the failing case, there is a directory such as /opt/ibm/db2/V9.5/lib32 or /opt/ibm/db2/V9.5/lib64 in the library search path. The library search path is platform-specific and may include directories specified in environment variables (such as LD_LIBRARY_PATH, LIBPATH or SHLIB_PATH) or in configuration files such as /etc/ld.so.conf.


CAUSE
WebSphere MQ for UNIX uses a component named GSKit to establish SSL/TLS connections. DB2 on UNIX platforms ships an embedded version of the GSKit libraries in the DB2 library directory.

When the WebSphere MQ client dynamically loads its secure socket library, the operating system scans the library search path to locate the GSKit libraries.

If the DB2 libraries have been added to the library search path then the operating system may use the DB2 lib32 or lib64 directory to load the DB2 embedded version of GSKit. On some systems, the DB2 embedded GSKit is older than the system GSKit that MQ expects to use. Older GSKit versions lack fixes for some known defects and can therefore cause the MQ connect call to fail.


ENVIRONMENT
WebSphere MQ SSL client applications running on AIX, HP-UX, Linux or Solaris systems where DB2 is installed and the DB2 library directory has been added to the library search path (for example, by executing a DB2 profile script). Applications using MQ 7.0.1.0 or later with OCSP, including those whose SSL/TLS certificates contain the AuthorityInfoAccess X.509 certificate extension, may be more likely to fail.



DIAGNOSING THE PROBLEM
Depending on the application type, issue one of the following commands. Replace MQMDIR with the installed location of WebSphere MQ: /usr/mqm on AIX and /opt/mqm on other UNIX platforms. 


For a 32-bit client application on HP-UX:
ldd MQMDIR/lib/amqccgsk_r

For a 32-bit client application on platforms other than HP-UX:
ldd MQMDIR/lib/amqccgsk

For a 64-bit client application on HP-UX:
ldd MQMDIR/lib64/amqccgsk_r

For a 64-bit client application on platforms other than HP-UX:
ldd MQMDIR/lib64/amqccgsk

If the output of the ldd command shows any libgsk7 libraries resolved via the DB2 lib32 or lib64 directory then the application is affected by this issue.

For example, consider the following output for a failing 64-bit Linux (POWER) application:

$ ldd /opt/mqm/lib64/amqccgsk
linux-vdso64.so.1 => (0x0000000000100000)
libmqmcs.so => /opt/mqm/lib64/libmqmcs.so (0x0000040000020000)
libgsk7ssl_64.so => /opt/ibm/db2/V9.5/lib64/libgsk7ssl_64.so (0x0000040000370000)
libgsk7cms_64.so => /opt/ibm/db2/V9.5/lib64/libgsk7cms_64.so (0x0000040000460000)
libpthread.so.0 => /lib64/power6/libpthread.so.0 (0x00000400007e0000)
libdl.so.2 => /lib64/libdl.so.2 (0x0000040000820000)
libc.so.6 => /lib64/power6/libc.so.6 (0x0000040000840000)
libstdc++.so.5 => /usr/lib64/libstdc++.so.5 (0x0000040000a10000)
libm.so.6 => /lib64/power6/libm.so.6 (0x0000040000b60000)
libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x0000040000c30000)
libgsk7sys_64.so => /opt/ibm/db2/V9.5/lib64/libgsk7sys_64.so (0x0000040000c60000)
/lib64/ld64.so.1 (0x0000000020000000)

In this example, three libgsk7 libraries have been loaded from the /opt/ibm/db2/V9.5/lib64 DB2 library directory. Any WebSphere MQ client application run from this environment is therefore susceptible to problems which may arise from running with a different version of GSKit.


RESOLVING THE PROBLEM
Add the appropriate directory from the following table to the library path in front of the DB2 directories: 

 

Platform and client application type Directory AIX 32-bit application /usr/opt/ibm/gskta/lib AIX 64-bit application /usr/opt/ibm/gsksa/lib64 HP-UX 32-bit application /opt/ibm/gsk7/lib HP-UX 64-bit application /opt/ibm/gsk7_64/lib64 Linux 32-bit application /usr/local/ibm/gsk7/lib Linux 64-bit application /usr/local/ibm/gsk7_64/lib64 Solaris 32-bit application /opt/ibm/gsk7/lib Solaris 64-bit application /opt/ibm/gsk7_64/lib64 You only need to add the directory for the application type and platform on which your SSL client application is running. The GSKit library path is not architecture-specific so these paths are common to all processor types. 

 

For example, on Linux the library search path environment variable is named LD_LIBRARY_PATH. The following command would add the appropriate value for a 32-bit Linux application: 

 export LD_LIBRARY_PATH=/usr/local/ibm/gsk7/lib:$LD_LIBRARY_PATH 

 

Provided this command is executed after the DB2 profile has been loaded then this will add the system GSKit directory in front of the DB2 library directory and therefore ensure that the MQ client can load the correct GSKit version. The UNIX env command can be used to display the environment variables currently set. 

 

Note that it is not necessary to perform this task for queue manager channel processes because the queue manager processes all run with setuid mqm permissions. UNIX setuid processes do not use library loading environment variables, so no changes to the environment will take effect and the problem will not occur. The issue is therefore specific to UNIX client applications that are running without setuid or setgid permissions.

 

PRODUCT ALIAS/SYNONYM
 WMQ MQ