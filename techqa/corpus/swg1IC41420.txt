Title: IBM IC41420: Generated capsules do not know about subclasses - United States

Text:
  A FIX IS AVAILABLE
IBM Rational Rose RealTime 7.0.0.1 iFix004 [http://www-01.ibm.com/support/docview.wss?uid=swg24020329]


SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  The problem is that the RQA-RT test harness code generator does
   not compile when send a subclass using a signal that has the bas
   e class specified.
   This was because the test harness code generator does not add al
   l the dependencies for the class/capsule represented by the inte
   raction instance to the stub/driver.
   
   
    
   
   

LOCAL FIX
 *  1)
   For a workaround, set the verify behaviour options to reuse the
   generated
   harness in the Logical View and add #include "SubData.h" in the
   Implementation
   preface of the RQARTTopsenderR1W capsule specification. The same
   can be
   accomplished by adding a dependency between the capsule
   RQARTTopsenderR1W and  the class SubData. Now the test harness
   will compile and the test will pass.
   However, the data received will not be valid because of the
   problem below.
   
   Another workaround is a customer can put the #include
   "SubData.h" in the RQARTTestComponentTestRun CommonPreface
   (Component, C++ Generation), or in the model component being
   copied to create the RQARTTestComponentTestRun.  Either works
   and you could have a second cloned component just for testing or
   just one, where it is clearly commented which #includes are
   there just for the RQART testing.
   
   
   2)
   Again, the workaround is to reuse the generated harness in the
   Logical View and
   modify the send to use RTTypedValue_Data(). If this change is
   not made, the
   comparison passes, but the data (z) is not set to the correct
   value at the
   receiving end. The code should be changed to the following:
   
   sendPort.helloDataSub(
   RTTypedValue_Data(sendData,&RTType_SubData)
   ).sendAt(0, General);
   
   
    
   
   

PROBLEM SUMMARY
 *  Generated capsules do not know about subclasses.
   
   
    
   
   

PROBLEM CONCLUSION
 *  Fixed in release 7001 iFix004.
   
   Now, we extract dependency information from specification of
   the class/capsule represented by the interaction instance to
   the stub/driver and add these dependencies in the generated
   test harness class/capsule. This solves the issue.
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   IC41420
   
   
 * REPORTED COMPONENT NAME
   RATL ROSE RT VX
   
   
 * REPORTED COMPONENT ID
   5724F4600
   
   
 * REPORTED RELEASE
   ALL
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2004-07-01
   
   
 * CLOSED DATE
   2008-10-17
   
   
 * LAST MODIFIED DATE
   2008-10-17
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   RATL ROSE RT VX
   
   
 * FIXED COMPONENT ID
   5724F4600
   
   

APPLICABLE COMPONENT LEVELS
 * RALL PSN
   UP