Title: IBM Deploying the IBM i2 Analyze Connector Creator or IBM i2 Analyze iBase Connector using the Microsoft JDBC 4.2 Driver - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 IBM i2 Analyze Connector Creator and IBM i2 Analyze iBase Connector establishes a remote database connection using a jTDS JDBC driver which does not support the use of an SSL secured connection. 

CAUSE
As standard, the IBM i2 Analyze Connector Creator and IBM i2 Analyze iBase Connector establishes a remote database connection using a jTDS JDBC driver which does not support the use of an SSL secured connection. By using a Microsoft JDBC Driver instead, these components can be enabled to work with an SSL secured connection.

ENVIRONMENT
This Technote assumes you have already completed a full and successful install of the i2 Analyze Connector Creator or i2 Analyze iBase Connector using the default jTDS JDBC driver as specified in the relevant deployment guide. 

IBM i2 Analyze iBase Connector Deployment Guide http://www-01.ibm.com/support/docview.wss?uid=swg27047800 [http://www-01.ibm.com/support/docview.wss?uid=swg27047800] IBM i2 Analyze Connector Creator Deployment Guide http://www-01.ibm.com/support/docview.wss?uid=swg27047823 [http://www-01.ibm.com/support/docview.wss?uid=swg27047823] 
RESOLVING THE PROBLEM
This Technote explains how to update an existing i2 Analyze iBase Connector or i2 Analyze Connector Creator configuration to use a JDBC driver which supports a secure database connection over SSL. 

IMPORTANT: Please take a backup of each file you update before carrying out the following steps. 

 1. Using the appropriate deployment guide (linked above), deploy an instance of your connector using the default jTDS driver as per the guide. 
 2. Ensure your deployment is working correctly using the default jTDS driver (without SSL enabled). 
 3. Stop the Liberty Profile using the i2 Analyze toolkit command, 'deploy -t stopLiberty' 
 4. Download the Microsoft JDBC Driver "sqljdbc42.jar" from the following location: https://www.microsoft.com/en-gb/download/details.aspx?id=11774 [https://www.microsoft.com/en-gb/download/details.aspx?id=11774] 
 5. Copy the driver file to the same location that the default jTDS driver is. This should be the value that you specified as an environment property in the iBase environment.properties file, "path.to.jtds.jar=". For example (your file path may vary) C:\IBM\i2analyze\toolkit\configuration\environment\common\jdbc-drivers\jtds-1.2.4.jar 
 6. Edit and update the server.datasource.xml file with the new information. This is typically located in C:\IBM\i2analyze\toolkit\deploy\wlp\usr\servers\i2analyze
    For every entry in the file pointing to the old JDBC driver, modify the following:  * Path of the JDBC driver: (dir=) (Note that this will not change if you did not change the location when copying in the new driver). 
     * Change the JDBC driver name from the original JDBC driver "jtds-1.2.4.jar" to the new Microsoft JDBC driver for SQL "sqljdbc42.jar". 
     * Change the class name from the original "javax.sql.XADataSource" to "com.microsoft.sqlserver.jdbc.SQLServerXADataSource".
       
       The following are example extracts of what the part of the file might look like before and after the changes. Please note that the following extract is given only as an example and the actual content will differ in your configuration. The following is also a sample for the i2 Analyze iBase Connector, but the steps above are the same for the i2 Analyze Connector Creator.
       
       BEFORE:
       <library id ="MSJDBCLib">
       <fileset includes="jtds-1.2.4.jar" dir="C:/IBM/i2analyze/toolkit/configuration/environment/common/jdbc-drivers "/>
       </library>
       <dataSource id="IBASE_IAP_WAREHOUSE" type="javax.sql.XADataSource" beginTranForResultSetScrollingAPIs="false" jndiName="ds/IBASE_IAP_WAREHOUSE">
       <jdbcDriver libraryRef="MSJDBCLib" javax.sql.XADataSource="net.sourceforge.jtds.jdbcx.JtdsDataSource"/>
       <properties password="{aes}myEncryptedHash/isHere" instance="MSSQLSERVER" databaseName="My_iBase_Database" serverName="sample.ibm.com" user="iBase_sysadmin"/>
       </dataSource>
       <!-- SQL Server -->
       <dataSource id="IBASE_IAP_WAREHOUSE_LOG" type="javax.sql.XADataSource" beginTranForResultSetScrollingAPIs="false" jndiName="ds/IBASE_IAP_WAREHOUSE_LOG">
       <jdbcDriver libraryRef="MSJDBCLib"
       javax.sql.XADataSource="net.sourceforge.jtds.jdbcx.JtdsDataSource"/>
       <properties
       password="{aes}myEncryptedHash/isHere" instance="MSSQLSERVER" databaseName="My_iBase_Database" serverName="sample.ibm.com" user="iBase_sysadmin"/>
       </dataSource>
       
       AFTER:
       <library id ="MSJDBCLib">
       <fileset includes="sqljdbc42.jar" dir="C:/IBM/i2analyze/toolkit/configuration/environment/common/jdbc-drivers "/>
       </library>
       <dataSource id="IBASE_IAP_WAREHOUSE" type="javax.sql.XADataSource" beginTranForResultSetScrollingAPIs="false" jndiName="ds/IBASE_IAP_WAREHOUSE">
       <jdbcDriver libraryRef="MSJDBCLib" javax.sql.XADataSource="com.microsoft.sqlserver.jdbc.SQLServerXADataSource"/>
       <properties password="{aes}myEncryptedHash/isHere" instance="MSSQLSERVER" databaseName="My_iBase_Database" serverName="sample.ibm.com" user="iBase_sysadmin"/>
       </dataSource>
       <!-- SQL Server -->
       <dataSource id="IBASE_IAP_WAREHOUSE_LOG" type="javax.sql.XADataSource" beginTranForResultSetScrollingAPIs="false" jndiName="ds/IBASE_IAP_WAREHOUSE_LOG">
       <jdbcDriver libraryRef="MSJDBCLib"
       javax.sql.XADataSource="com.microsoft.sqlserver.jdbc.SQLServerXADataSource"/>
       <properties
       password="{aes}myEncryptedHash/isHere" instance="MSSQLSERVER" databaseName="My_iBase_Database" serverName="sample.ibm.com" user="iBase_sysadmin"/>
       </dataSource>
    
    
 7. Restart the Liberty Profile using the i2 Analyze toolkit command, 'deploy -t startLiberty'
    


Optional (Enabling enforced encryption on the SQL server)  1. Login to your SQL Server and open SQL Server configuration manager. 
 2. Expand the 'SQL Server Network Configuration' section. 
 3. Right click 'Protocols for MSSQLSERVER'. 
 4. In the window that appears, set 'Force Encryption' to 'Yes' on the Flags tab. 
 5. Click OK.


Known issues 

If you see the following warning message in the log files, you can either safely ignore them, or fix the warning using the workaround listed below. 

Log Warning: 

The property 'instance' does not exist on the DataSource class com.microsoft.sqlserver.jdbc.SQLServerXADataSource. 

[9/1/16 11:53:38:848 IST] 000000dd com.ibm.ws.rsadapter.spi.InternalGenericDataStoreHelper I DSRA8203I: 

Database product name: Microsoft SQL Server 

Removing the warning: 

 1. Stop Liberty as in the above instructions. 
 2. Open the file 'server.datasources.xml'. 
 3. Remove the instance property from the list of properties (Note: do this for each instance where the MS SQL Driver is called)
    For example:
    
    BEFORE
    <properties
    password="{aes}myEncryptedHash/isHere" instance="MSSQLSERVER" databaseName="My_iBase_Database" serverName="sample.ibm.com" user="iBase_sysadmin"/>
    
    AFTER
    <properties
    password="{aes}myEncryptedHash/isHere" databaseName="My_iBase_Database" serverName="sample.ibm.com" user="iBase_sysadmin"/> 
 4. Save the file. 
 5. Restart Liberty as in the above instructions.