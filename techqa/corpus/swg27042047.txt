Title: IBM Atlas Policy Suite V6.0.3 documentation update: Adding data feed filters - United States

Text:
 PRODUCT DOCUMENTATION

ABSTRACT
 The "Adding data feed filters" section is missing from Administering IBM Atlas Policy Suite, Version 6.0.3. 

CONTENT
The "Adding data feed filters" section belongs here:




Chapter 4. Importing data into IBM Atlas Policy Suite 

 * 
 * Regularly pulling data into the Atlas database  * 
   
   
   

Adding data feed filters In some cases, you might want the value that is stored in a particular column in IBM® Atlas Policy Suite to remain untouched regardless of the value that is read from the source table. In other cases, you might want to hard code a value that always replaces the value that is read from the source table. You can accomplish these tasks by adding data feed filters to the data_feed_filter.xml file.


 * 
 * About this task
 * There are two filter operations: 
 *  
   Ignore Atlas Extensions ignores the value in a particular column in the source table. For a new record, the default value for the column is used. If the record exists, the value that is stored in the IBM Atlas Policy Suite database remains untouched.
   
   
   Replace 
   
   This operation takes a value argument that specifies the value to write into the IBM Atlas Policy Suite database. The value from the source table is ignored. 
   
   Neither operation modifies the data in the source table. The filter operations are applied as the data is written into the IBM Atlas Policy Suite database. 
   
   Currently, the only column to which you can apply a filter is the Confidential column in the matter source table. The first data feed filter example demonstrates how to apply a filter to the Confidential column so that the IBM Atlas Policy Suite value is not overwritten during an update.
   
   

 * 
 * Creating a Filter
 *  
 * The Data feed filters are stored as XML entities in this file: /ATLAS
   /Properties/data_feed_filters.xml
   
   The file is laid out thus: 
 * <?xml version="1.0" encoding="UTF-8"?> 
   <config>  * 
    * <data-filter>  * 
       * 
       * 
       * 
       * 
      
      </data-filter> 
    * 
   
   </config> 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * <!-- Legal Matter filters --> 
   <feed name="MatterLoader">  * 
    * <fields>  * 
       * <oncreate operation="op" value="value"> 
         <onupdate operation="op" value="value"> 
       * 
      
      
   
   
 *   *   * 
      
      </fields> 
    * 
   
   </feed> 
 * <!-- Person filters --> 
   <feed name="HRLoader">  * 
    * <fields>  * 
       * <oncreate operation="op" value="value"> 
         <onupdate operation="op" value="value"> 
       * 
      
      
   
   
 *   *   * 
      
      </fields> 
    * 
   
   </feed> 
 * 
 * 
 * 
 * <table name="OrgUnit">  * 
    * <field name="columnName">  * 
       * 
       * 
      
      </field> 
   
   
 *   * <!-- more field elements here --> 
   
   
 *   * 
   
   </table> 
 * 
 * 
 * 
 * 
   
 * Filter definition elements 
 *  
 * feed and table
   
   These two elements identify the data that the filter will affect. The values of their name attributes are shown below:
   
   
   
 *  Attribute <feed> <table> Affected Data name MatterLoader
   LegalMatter Legal Matter HRLoader Person Persons OULoader OrgUnit Organizations 
 * 
 * 
 * 
 * 
 * fields 
 * 
   The fields element is a container for the individual field elements. It does not take any attributes.
   
   
 * field 
 * 
   The field element takes a single name attribute that names the source table column that the filter will affect. You may have no more than one field element per column.
   
   
 * oncreate 
 * 
   The oncreate element creates a filter that’s applied when an object is created. You can have only one oncreate element within the same field element.
   
   
   
 *  Attribute Value Meaning operation ignore
   The data from the source table is ignored. The default value for the column is used instead. replace The data from the source table is replaced with the value of the value attribute. value Any acceptable value for the
   column. In an ignore operation, the value attribute is illegal.
   
   In a replace operation, value supplies the replacement value. The attribute, in this case, is required. 
 * 
 * onupdate 
 * 
   The onupdate element creates a filter that’s applied when an existing object is updated. You can have only one onupdate element within the same field element.
   
   
 *  Attribute Value Meaning operation ignore
   The data from the source table might be ignored, depending on the value of
   the value attribute. If it is ignored, the value that is currently stored in the IBM Atlas Policy Suite data remains untouched. replace The data from the source
   table is replaced with the
   value of the value attribute. value Any acceptable value for the
   column. In an ignore operation, the source table data is ignored if value is not supplied or it the current value in the
   IBM Atlas Policy Suite database matches the value of the value attribute. If value is supplied but it is
   different from the value in the database, the source table data is written to the database.
   
   In a replace operation, value supplies thereplacement value. The attribute, in this case, is required. 
 * Examples of data feed filters
   
 * Data feed filters can be used to configure Atlas Extensions to ignore the value in a particular column of a source table or hard code a value that always replaces the value that is read from the source table. 
 * This example tells Atlas Extensions to always ignore the source table value of the Confidential column for the matter during an update:
   
   <feed name="MatterLoader">
   <table name="LegalMatter">
   <fields>
   <field name="Confidential">
   <onupdate operation="ignore">
   </field>
   </fields>
   </table>
   </feed>
   
   This example ignores the CustomField1 column for the matter if the value in the IBM Atlas Policy Suite database is Secure:
   
   <feed name="MatterLoader">
   <table name="LegalMatter">
   <fields>
   <field name="CustomField1">
   <onupdate operation="ignore" value="Secure"/>
   </field>
   </fields>
   </table>
   </feed>
   
   This always sets the Person status to ACTIVE:
   
   <feed name="HRLoader">
   <table name="Person">
   <fields>
   <field name="Status">
   <oncreate operation="replace" value="ACTIVE"/>
   <onupdate operation="replace" value="ACTIVE"/>
   </field>
   </fields>
   </table>
   </feed>