Title: IBM PK77703: WHEN THE DC IS STARTED, EXCESSIVE CONNECTION REFUSED MESSAGES AT STARTUP WHEN MANAGING SERVER IS DOWN - United States

Text:
 SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS DOCUMENTATION ERROR.
    
   
   

ERROR DESCRIPTION
 *  ABSTRACT:
   When the DC is started, excessive CONNECTION REFUSED messages at
   startup when Managing Server is down
   
   Details:
   The following message is issued:
   java.net.ConnectException: EDC8128I Connection refused.
   (errno2=0x76630291)
   followed by a java exception stack.
   This pattern is repeated numerous times,followed by
   Thu Dec 18 14:32:10 GMT+00:00 2008: Check if IP address of
   Kernal in property file is correct OR if kernal is up & running
   Thu Dec 18 14:32:10 GMT+00:00 2008: Unable to load classes from
   Kernel com.cyanea.kernel.common.KernelException:
   java.lang.ClassNo
   oundException: com.cyanea.kernel.util.JoinManager
   Thu Dec 18 14:32:10 GMT+00:00 2008: kernel props used :
   kernel.codebase=http://9.52.131.163:9122/kernel.core.jar
   http://9.52.131.1 [http://9.52.131.1]
   :9122/ppe.publish-intf.jar
   http://9.52.131.163:9122/ppe.publish.jar,
   kernel.rfs.address=9.52.131.163:9120 [http://9.52.131.163:9122/ppe.publish.jar,kernel.rfs.address=9.52.131.163:9120]
   Thu Dec 18 14:32:10 GMT+00:00 2008: Please re-check the above
   properties and make sure that kernel is running...
   
   After several minutes, the sequence repeats.
   
   
    
   
   

LOCAL FIX
 *  Defect 19336, included with fixpack 4, PK72363 [http://www-01.ibm.com/support/docview.wss?uid=swg1PK72363], adds a
   time-stamped message for each connection attempt showing the
   frequency and retry interval, and clearly shows the interval
   increasing over time, based on the customer's retry policy.
   
   RETRY POLICY EXPLANATION and LESS AGGRESSIVE ALTERNATIVE
   ---------------------------------------------------------------
   
   ITCAM initiates connection to the MS using the JAVA class
   java.net.URLClassLoader using DC properties kernel.codebase and
   kernel.rfs.address. In some situations, such as the MS being
   completely down, or the URL/port being incorrect, the class
   loading cannot occur and we are left with a very basic
   connection problem. In that case, we use kernel retry
   properties which define the connection retry policy.  The
   default policy is somewhat aggressive but is controlled by
   properties the customer can set in the runtime DC properties.
   In both z/OS, Windows and possibly other environments, java
   tries 3 times and prints an exception stack each time and can
   generate a generous amount of output before the retry interval
   increases substantially.
   
   Below we list the properties with their defaults. We also list a
   less aggressing policy that can be used to override the
   defaults.
   
   ################################################################
   # Properties controlling initial kernel connection and class
   # loading retries when the initial attempt fails
   #
   #   PROPERTY and current DEFAULT value:
   #      kernel.retry.initial=15
   #          Initial connection retry interval in seconds
   #      kernel.retry.iter=3
   #         Number of connection attempts, before we issue
   #         CHECK-IP MSGS and increase (wait/sleep)
   #         time interval between connection attempts.
   #      kernel.retry.maxsleep=600
   #         Maximum amount of time in seconds between connection
   #         retry attempts. This is the maximum amount of time
   #         between connection attempts. In other words, this is
   #         the maximum amount of time for the interval
   #         between connection attempts.
   #      kernel.retry.multiplyFactor=2
   #         Multiplication factor used to increase retry interval
   #         up to the max interval determined by
   #         kernel.retry.maxsleep.
   #
   #   The property kernel.retry.iter specifies how many attempts
   #   will be made using  the current retry interval setting.
   #   After this number of attempts, CHECK IP messages are
   #   displayed and the interval is increased by a factor
   #   specified by kernel.retry.multiplyFactor. A value of 2
   #   indicates the new retry interval will be twice the
   #   previous retry interval.
   #
   #
   #   How to define a less aggressive retry policy:
   #      The following could be used as a much less aggressive
   #      connection approach.
   #        kernel.retry.maxsleep=1200
   #        kernel.retry.initial=300
   #        kernel.retry.iter=1
   #        kernel.retry.multiplyFactor=2
   ################################################################
   
   
    
   
   

PROBLEM SUMMARY
 *  WHEN THE DC IS STARTED, EXCESSIVE CONNECTION REFUSED MESSAGES AT
   STARTUP WHEN MANAGING SERVER IS DOWN
   
   
    
   
   

PROBLEM CONCLUSION
 *  Workaround is documented in the APAR
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   PK77703
   
   
 * REPORTED COMPONENT NAME
   ITCAM WAS DIST
   
   
 * REPORTED COMPONENT ID
   5724L6200
   
   
 * REPORTED RELEASE
   610
   
   
 * STATUS
   CLOSED DOC
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2008-12-18
   
   
 * CLOSED DATE
   2009-01-30
   
   
 * LAST MODIFIED DATE
   2009-01-30
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION

APPLICABLE COMPONENT LEVELS