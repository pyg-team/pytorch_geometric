Title: IBM How to support large messages using Adapter for WebSphere MQ - United States

Text:
Large message support with MQ adapter; WebSphereMQ Adapter TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 For WebSphere Business Integration Adapter for WebSphere MQ to support large messages, some default settings need to be modified. 

CAUSE
 Adapter for WebSphere MQ has to be configured to support large messages.

RESOLVING THE PROBLEM
The following sections describe the queue manager log entries in detail: 

Log buffer pages
Description: Controls the size of the queue manager buffer to log file writes in number of pages. Use this parameter when a high volume of messages is being sent through a server.
How to view or set: In the registry, navigate to HKEY_LOCAL_MACHINE > SOFTWARE > IBM > MQSeries > CurrentVision > Configuration > QueueManager > QM_name > Log > LogBufferPages. For embedded JMS, edit the createmq.properties setting LogFilePages in the install_root\properties directory to the desired value. Run the deletemq and createmq commands to delete or recreate the queue manager. For external JMS, set LogFilePages to the desired value. Do this before creating the queue manager in the registry. Run the amqmdain regsec command to secure the registry value and create the queue manager.
Default value: 0
Recommended value: There is no performance penalty for setting this value too high. Therefore, set the value to its maximum of 512 pages.

Log primary files
Description: Controls the number of primary or permanent log files for the queue manager. Use this parameter when high volumes of messages are being sent through a server.
How to view or set: In the registry, navigate to HKEY_LOCAL_MACHINE > SOFTWARE > IBM > MQSeries > CurrentVision > Configuration > QueueManager > QM_name > Log > LogPrimaryFiles. For embedded JMS, edit the createmq.properties setting LogFilePages in the install_root\properties directory to the desired value. Run the deletemq and createmq commands to delete or re-create the queue manager. For external JMS, set LogPrimaryFiles to the desired value. Do this before creating the queue manager in the registry. Run the amqmdain regsec command to secure the registry value and create the queue manager.
Default value: External: 3, embedded: 0
Recommended value: There is no performance penalty for setting this value too high. Set the value to its maximum of 63 pages.

Log secondary Files 
Description: Controls the number of secondary log files for the queue manager. Secondary files are created when the primary files are not enough and deleted when they are no longer needed.
How to view or set: In the registry, navigate to HKEY_LOCAL_MACHINE > SOFTWARE > IBM > MQSeries > CurrentVision > Configuration > QueueManager > QM_name > Log >LogSecondaryFiles. For embedded JMS, edit the createmq.properties setting LogSecondaryFiles in the install_root\properties directory to the desired value. Run the deletemq and createmq commands to delete or re-create the queue manager. For external JMS, set LogPrimaryFiles to the desired value. Do this before creating the queue manager in the registry. Run the amqmdain regsec command to secure the registry value and create the queue manager.
Default value: External: 2, embedded: 60
Recommended value: There is a combined limit of 63 for the primary and secondary files. Because secondary logs are slower, for ideal performance, set this to 0.

Log default path
Description: Controls the location of the queue manager log files. Use this parameter when high volumes of messages are sent through a server.
How to view or set: In the registry, navigate to HKEY_LOCAL_MACHINE > SOFTWARE > IBM > MQSeries > CurrentVision > Configuration > QueueManager > QM_name > Log > LogDefaultPath. For embedded JMS, edit the createmq.properties setting LogPath in the install_root\properties directory to the desired value. Run the deletemq and createmq commands to delete or re-create the queue manager. For external JMS, set LogDefaultPath to the desired value. Do this before creating the queue manager in the registry. Run the amqmdain regsec command to secure the registry value and create the queue manager.
Default value: WebSphereMQHome\log
Recommended value: It is ideal to have a disk dedicated to this task because WebSphere MQ tries to keep the head of the disk positioned at the place in the file where it needs to write next. A fast RAID volume is best.

Default queue buffer size
Description: Controls the size in bytes of an in-memory buffer for nonpersistent queues. Use this parameter when large message sizes are used or large bursts of messages cause the queue to back up. If the queue backs up past this buffer, messages are flushed out to the disk.
How to view or set: In the registry, navigate to HKEY_LOCAL_MACHINE > SOFTWARE > IBM > MQSeries > CurrentVersion > Configuration > QueueManager > QM_name > TuningParameters > DefaultQBufferSize. Embedded JMS is not currently supported; you need MQ5.3 CSD2 and an accompanying Version 5.0 fix. For external JMS, set DefaultQBufferSize to the desired value. Do this before creating the queue manager. Run the amqmdain regsec command to secure the registry value and create the queue manager.
Default value: 64K (registry key does not exist)
Recommended value: Set this parameter to accommodate the typical number of messages sitting on the queue at any given time. This should be numberOfMessages*(500+messageSizeInBytes). The maximum value is 100 MB, but typically 1 MB is enough.

Default persistent queue buffer size
Description: Controls the size in bytes of an in-memory buffer for nonpersistent queues. Use this parameter whenever memory is available.
How to view or set: In the registry, navigate to HKEY_LOCAL_MACHINE > SOFTWARE > IBM > MQSeries > CurrentVersion > Configuration > QueueManager > QM_name > TuningParameters > DefaultPQBufferSize. Embedded JMS is not currently supported; you need MQ5.3 CSD2 and an accompanying Version 5.0 fix. For external JMS, set DefaultPQBufferSize to the desired value. Create the queue manager. 
Default value: 0 (registry key does not exist)
Recommended value: Set this parameter to accommodate the number of typical concurrently processed messages, plus a little more for read-ahead capabilities. Do this by calculating numOfCocurrentMessages*(msgSizeInBytes+500)*2. Typically, 1 MB is enough.

Maximum channels:
Description: Controls the allowable number of concurrent CLIENT transport clients. Use this parameter when large numbers of clients are being used.
How to view or set: In the registry, navigate to HKEY_LOCAL_MACHINE > SOFTWARE > IBM > MQSeries > CurrentVersion > Configuration > QueueManager > QM_name > Channels > MaxChannels. Embedded JMS is not currently supported; you need MQ5.3 CSD2 and an accompanying Version 5.0 fix. For external JMS, set MaxChannels to the desired value. Restart the queue manager.
Default value: External: 100 (registry key does not exist), embedded: 1000
Recommended value: Set this parameter high enough to contain the maximum number of concurrent JMS clients.

Channel application bind type:
Description: Controls whether the channel application is an MQ FASTPATH application. Use this parameter at all times.
How to view or set: In the registry, navigate to HKEY_LOCAL_MACHINE > SOFTWARE > IBM > MQSeries > CurrentVersion > Configuration > QueueManager > QM_name > Channels > MQIBindType. Embedded JMS is not currently supported; you need MQ5.3 CSD2 and an accompanying Version 5.0 fix. For external JMS, set MQIBindType to the desired value. Restart the queue manager.

If MQ Reason Code 2030 (MQRC_MSG_TOO_BIG_FOR_Q) is returned, it indicates that the message is too big for the queue.

To enable large files to be sent by the adapter, you must modify the following settings.


 * QueueManager Log in the registry should have:  * LogPrimaryFiles=62 
    * LogSecondaryFiles=1 
    * LogFilePages=16384 
    * LogType=CIRCULAR 
    * LogBufferPages=512
   
   

 * Set the heap size in the start script of the adapter to -mx1024m.

 * Make the following changes to allow message of 12 MB :  * ALTER QMGR MAXMSGL(12582912) 
    * ALTER CHL(TESTQM_SVR.CH01) CHLTYPE(SVRCONN) MAXMSGL(12582912) 
    * ALTER Q(APPL_TEST1) MAXMSGL(12582912) 
    * ALTER Q(SYSTEM.DEAD.LETTER.QUEUE) MAXMSGL(12582912) 
   
   

 * Change the MAXMSGL on the SYSTEM.DEAD.LETTER.QUEUE to 12 MB.


The adapter can now connect to the 'TESTQM_SVR.CH01', SVRCONN channel and put messages up to 12 MB in size.