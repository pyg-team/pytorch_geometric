Title: IBM Changing from RPC Binding Style to Document Style in WebSphere Studio v5.x.x - United States

Text:
WSAD; WSSD; v5; web service; document; rpc; style; binding; 1199288 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 How to convert a Web Service using RPC style to Document style in WebSphere Studio v5.0.1. The web service is using the IBM/Apache Soap runtime in WebSphere Application Server v 5.0.x of the WebSphere Test Environment. 

RESOLVING THE PROBLEM
There's no easy way of doing this. The WSDL has a style attribute within the SOAP protocol binding can contain one of two values: rpc or document. However, the WSDL file is considered as a development artifact, and the real is issue is what the WebSphere Studio tooling supports and what web service runtimes a WebSphere v5.x.x server supports. 

 
When this development artifact is changed, you need to re-deploy your Web service, which is possible in WebSphere Studio v5.1.1 (i.e. redeploy == re-run the wizard ) for a JAX-RPC project. However WebSphere Studio v5.0.1 web services tooling is based on the IBM/Apache 2.3 SOAP runtime. Apache SOAP doesn't support doc style Web services. This is half true, Apache SOAP does have some kind of XML messaging servlet that they claimed to be the doc style Web service support. However, that Apache SOAP runtime servlet basically lets you get at the SOAP body, and that's it, there is no (de)serializer 
support. So the Apache Soap support depends on how you look at it. 

WebSphere Studio v5.0 tooling does not provide any support for Apache SOAP-based doc style Web service I would not recommend any customer going down that path, because it's not inter-operable. You can argue that Apache SOAP is not inter-operable at the first place (e.g. with .Net) ......but Apache SOAP doc/lit is even worse. 

Regarding WebSphere Studio v5.0 , I should be more precise, doc/literal is supported in the client If you feed the client wizard with a WSDL file that uses doc/literal. The wizard will generate a proper proxy for you. If you feed the same doc/lit WSDL to the creation (skeleton) wizard, the generated code will not talk doc/literal. However,if the Web Service itself is RPC ...changing the client only does not help. However if you are targeting a .Net Doc Web Service this can be useful. 

If you want your WebSphere Application Server v5.x RPC service to talk doc/literal, my recommendation is to upgrade to WebSphere Application Server v5.0.2+ which also supports the JAX-RPC 1.0 (JSR-101) + JSR-109 runtime. This tooling is available only in WebSphere Studio v5.1.x. Trying to create an Apache SOAP-based doc/lit service will lead to a dead end, Apache SOAP is just not suited for doc/lit.

WebSphere Studio v5.1.x allows you re-run the wizard against a JAX-RPC project as mentioned earlier. Re-running the wizard should work. The correct behavior is that we will re-generate all the (de)serializers and overwrite the appropriate entries in the deployment descriptors. However, there's a catch, the v5.1.1 wizard is not smart enough to remove the existing entries. For example, if you have an existing service call A..........and you redeploy A, then things will work. But if you decide to change your service name from A to B, then the wizard will create a new service call B. Keep in mind hat its not a common occurrence to change a service name. Regardless, in this case B will be deployed as a new service ,but the fact that A is still there will cause runtime problems.....the wizard is not smart enough 
to remove that. What we really need is an un-deploy option. This would not happen till v6 or later... no commitments here.The only way to un-deploy now, is to removing the files associated with A. 

In the case of v5.0.x. the WebSphere Application Server 50 WES handbook/redbook mentions Document style, but stresses the use of RPC with WebSphere Studio v5.0.x. 

WebSphere Version 5 Web Services Handbook 
ftp://www.redbooks.ibm.com/redbooks/SG246891/sg246891-00.pdf [ftp://www.redbooks.ibm.com/redbooks/SG246891/sg246891-00.pdf] 

This book and the runtime being addressed is IBM/Apache Soap. The v5.0.x book has been replaced with a v5.1.x/JAX-RPC focused version: 

WebSphere Version 5.1 Application Developer 5.1.1 Web Services Handbook - Feb 2004 http://www.redbooks.ibm.com/redbooks/pdfs/sg246891.pdf [http://www.redbooks.ibm.com/redbooks/pdfs/sg246891.pdf] 

The v5.0 book has sections on "RPC representation" and how it differs from Document style and mentions that "SOAP supports two different communication styles:..". It states that DOC : "... is a very flexible but not yet frequently used communication style." The v5.0.x redbook is a bit dated in that, DOC is becoming more used as evidenced by the support in WebSphere Studio v5.1.1/WebSphere Application Server 5.0.2+. This is also re-stated/updated in the v5.1.x redbook 

In conclusion, trying to create an Apache SOAP-based doc/literal service will lead to a dead end, Apache SOAP is just not suited for doc/literal. 


Some interesting articles on this issue of RPC and Document Type: 

1. 
"Reap the benefits of document style Web services" 
by James McCarthy, 1 June 2002 
http://www-106.ibm.com/developerworks/webservices/library/ws-docstyle.html [http://www-106.ibm.com/developerworks/webservices/library/ws-docstyle.html] 

It focuses on: 

"...the Web Service Definition Language (WSDL) specification is a very subtle switch that can turn the SOAP binding of a Web service from a remote procedure call to a pass-through document. The style attribute within the SOAP protocol binding can contain one of two values: rpc or document. ..." 

It is helpful if you have tooling and runtime support for this. 

2. From a .Net perspective:

" Rpc and document SOAP from one .NET web service" 
http://radio.weblogs.com/0105476/stories/2002/04/12/rpcAndDocumentSoapFromOnenetWebService.html [http://radio.weblogs.com/0105476/stories/2002/04/12/rpcAndDocumentSoapFromOnenetWebService.html] 

The article explains/promotes Doc Literal in trying to answer the question: 
"...Am I correct in saying that if you want your service to be more useable you should publish it in both doc & rpc formats?..." 

Microsoft encourages Document style. The article also explains an interesting .Net switch for converting RPC messages to DOC among other things. 

3. Read the v5.1.1 redbook for a WebSphere Studio/WebSphere Application Server J2EE and WS-I perspective on Document type, which v5.1.x supports. 






 



Cross reference information Segment Product Component Platform Version Edition Software Development Rational Application Developer for WebSphere Software - 
HISTORICAL NUMBER
 "pmr 47809 278 000"