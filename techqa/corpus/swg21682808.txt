Title: IBM How to disable IBM FileNet P8 Content Engine (CE) server tracing completely and move both the error and trace logs output to another location. - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Can I disable CE server traces completely and move both the error and trace log output to another location? 

SYMPTOM
Content Engine trace does not appear to turn off and the P8 server error log output location cannot be changed.


CAUSE
Disablement of P8 server tracing only prevents the logging of DEBUG messages for the marked subsystems. INFO, WARN, and ERROR messages are unconditionally logged to both the p8 trace and error logs. Which may give the appearance that P8 Server tracing is still enabled. 

FileNet Enterprise Manager will only allow you to change the output location for the P8 server trace logs.



ENVIRONMENT
IBM FileNet Content Manager



DIAGNOSING THE PROBLEM
The P8 server trace is still being written to after disabling CE tracing.
The business requires the P8 server error log to be written to another location besides the default directory.



RESOLVING THE PROBLEM
Use the log4j configuration samples provided under the FileNet Content Engine installation directory. In Windows, these files are available at C:\Program Files\FileNet\ContentEngine\config\samples. 


The steps required to enable and collect server trace files for support are as follows:


 1. Copy the sample log4j.xml.server to log4j.xml and if so desired, move the file to another location that will be referenced in the jvm argument that you will apply to the Content Engine application server. 
 2. (JBoss ONLY) Please note that since JBoss systems use log4j by default, the following steps should be applied to the existing log4j.xml file located in <JBoss_install_root>/server/<server-name>/conf. Where <JBoss_install_root> is the location of the JBoss installation. 
 3. Open the log4j.xml file and verify the output location and size of trace and error. Here are the settings to pay attention to for this

 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 

 * Change the path to the location where you want the files to be output to if you do not want the default location:
 * 
 * 
 * Note: 
 * Ensure that the path exists and the Content Engine operating system user (the user account that runs the java process of the application server jvm hosting the content Engine) has read/write access to the location you want the logs to be written to.


 * WebSphere
 * 
 * 
 * WebLogic
 * 
 * 
 * JBoss
 * 
 * 
 * 
 * 
 * Windows example:
 * 
 * 
 * 
 * 
 * 
 * E:/P8Traces/
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * E:/P8Traces
 * /
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * ...and further down some more lines to modify:
 * 
 * 
 * 
 * 
 * 
 * 
 * E:/P8Traces
 * /
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * E:/P8Traces/
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * Unix/Linux example:
 * 
 * 
 * 
 * 
 * 
 * /opt/IBM/
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * /opt/IBM/
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * ...and further down some more lines to modify:
 * 
 * 
 * 
 * 
 * 
 * /opt/IBM/
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * "/opt/IBM/
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * Also change the 'layout class' value - This is done in two places within the file:
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * <layout class="org.apache.log4j.PatternLayout">
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * <layout class="com.filenet.apiimpl.util.TraceLayout"/>
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * Note:
 * 
 * 
 * 


Add the following as JVM command line arguments to the application server:  1. Example for Unix:-Dlog4j.configuration=file:/<absolute_path_for_log4j_file>/log4j.xml 
 2. Example for Windows: -Dlog4j.configuration=file:/c:/log4j.xml on Unix -Dlog4j.configuration=file:/usr/home/log4j.xml 
 3. Once the change is made, restart the web application server.


Note: -DskipTLC=true (Instructs the CE server to skip the existing trace logging configuration.) 

Example for WebSphere: Application servers > CPEserver01 > Process definition > Java Virtual Machine 
[/support/docview.wss?uid=swg21682808&amp;aid=2] 

Check the Content Engine ping page to see if the jvm arguments took. 
[/support/docview.wss?uid=swg21682808&aid=3] [/support/docview.wss?uid=swg21682808&aid=3] 


Note: Turn tracing off by removing the JVM command line arguments (and restarting the application server) and, if necessary, via FileNet Enterprise Manager or ACCE. 


If you are following this procedure because all tracing was enabled through FileNet Enterprise Manager or ACCE and it can no longer be accessed do not enable any tracing in the log4j file. 


Disable/enable P8 server trace so that the 'p8_server_trace.log' is not written out to: 
 1. Edit the log4j.xml file as per above. 
 2. See the example edits below to enable or disable


enabled: 

# NOTE: These entries are used only if -DskipTLC=true has been specified as 
# a JVM argument. 
######################################################################## --> 
<!-- By default, trace logging is turned off --> 
<logger name="filenet_tracing"> 
<level value="off"/> 

<!-- Disable FileNet TraceRollingAppender so it doe not write to p8_server_trace.log --> 
<appender-ref ref="FileNetTraceRollingAppender"/> 
</logger> 

<!-- SubSystem: wsi --> 
<!-- logger name="filenet_tracing.wsi"> 



To enable P8 Server tracing for sub components, enable <appender-ref ref="FileNetTraceRollingAppender"/> then enable the subSystem component you want to enable at the level you want to enable for troubleshooting. 

Example: moderate summary 

<!-- SubSystem: security --> 
<logger name="filenet_tracing.security"> <level value="debug"/> </logger> 
<!-- logger name="filenet_tracing.security.timer"> <level value="debug"/> </logger--> 
<!-- ## Remove the comment corresponding to the desired detail level --> 
<logger name="filenet_tracing.security.detail.moderate.summary"> <level value="debug"/> </logger> 
<!-- logger name="filenet_tracing.security.detail.moderate"> <level value="debug"/> </logger --> 
<!-- logger name="filenet_tracing.security.detail"> <level value="debug"/> </logger --> 



disabled: 

<!-- By default, trace logging is turned off --> 
<logger name="filenet_tracing"> 
<level value="off"/> 

<!-- Disable FileNet TraceRollingAppender so it does not write to p8_server_trace.log --> 
<!-- appender-ref ref="FileNetTraceRollingAppender"/ --> 
</logger> 

<!-- SubSystem: wsi --> 
<!-- logger name="filenet_tracing.wsi"> 


The above will disable all logging being written to the P8 server trace log. 

Note: A recycle of the jvm hosting the Content Engine will be required to activate any changes to the settings. 
RELATED INFORMATION
 Enabling IBM FileNet Content Engine server tracing [http://www-01.ibm.com/support/docview.wss?rs=0&uid=swg21308282]