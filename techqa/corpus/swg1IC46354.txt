Title: IBM IC46354: RATIONAL ROSE(R) ANSI C++ REVERSE ENGINEERING BLANKS OPERATION RETURN TYPE USING & REFERENCE - United States

Text:
 SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  Using this class, the return type for the operator<< function is
   lost if a return type is defined in the model for the function.
   
   
   class SysFormatter
   {
   public:
     // This operation invokes stream manipulators.
     SysFormatter& operator<<(
       SysFormatter& (* f)(SysFormatter&)
     )
     {
       return f(*this);
     }
   };
   
   
   Steps to reproduce the problem:
   1) Create a new model, add an ANSI C++ component and open the
   ANSI C++ Specification.
   2) Set the source root to the location of SysFormatter.h file.
   3) Add SysFormatter.h to the File list and close the
   specification
   4) Right-click on the component and reverse engineer
   
   At this point a correct model is created in Rose 2003.06.15.
   Confirm this by opening the operation specification for
   operator<<. The return type shows as
      SysFormatter (Logical View::...::SysFormatter&)
   
   5) Reverse engineer again.
   
   The return type for operator<< has now been blanked out. In
   further testing it appears the return type will be blanked if it
   starts with any contents and will be set correctly if it was
   previously blank. This causes the return type definition to
   switch for every subsequent reverse engineering.
   
   If the model is forward engineered when the type is blank, the
   return type for the operation will be removed from the source,
   causing data loss and uncompilable code.
   
   
    
   
   

LOCAL FIX
 *  At a time when both the source code and the model are correct,
   in the operation specification on the ANSI C++ tab set the
   property "Synchronize" to "FALSE".
   
   
    
   
   

PROBLEM SUMMARY
 *  Reverse Engineering causes the entry in return type to get
   reset to blank. This causes FE to generate inappropriate
   code
   
   
    
   
   

PROBLEM CONCLUSION
 *  Fixed indirectly.  Can no longer reproduce in Rational Rose
   v7.0.0.1 iFix002.
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   IC46354
   
   
 * REPORTED COMPONENT NAME
   RATL ROSE C++ V
   
   
 * REPORTED COMPONENT ID
   5724F4100
   
   
 * REPORTED RELEASE
   ALL
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2005-08-12
   
   
 * CLOSED DATE
   2007-08-07
   
   
 * LAST MODIFIED DATE
   2007-08-07
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   RATL ROSE C++ V
   
   
 * FIXED COMPONENT ID
   5724F4100
   
   

APPLICABLE COMPONENT LEVELS
 * RALL PSN
   UP