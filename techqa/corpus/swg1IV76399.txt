Title: IBM IV76399: SETTING A BIGDECIMAL INTO A MESSAGE CAUSES "INVALID XML" WRITTEN INTO THE MESSAGE WITHOUT INCURRING A JAVA EXCEPTION - United States

Text:
 SUBSCRIBE TO THIS APAR
By subscribing, you receive periodic emails alerting you to the status of the APAR, along with a link to the fix after it becomes available. You can track this item individually or track all items by product.

Notify me when this APAR changes.

Notify me when an APAR for this component changes.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  When using the WebSphere MQ javax.jms.MapMessage and using
   setObject() to attempt to set a BigDecimal into the message,
   the invalid XML is written to the message to be placed on the
   MQ Queue, rather than generating a Java exception.
   
   For example, the invalid XML looks like the following:
   
   <fieldname50</fieldname>
   
   instead of
   
   <fieldname>50</fieldname>
   
   
    
   
   

LOCAL FIX

PROBLEM SUMMARY
 *  ****************************************************************
   USERS AFFECTED:
   This issue affects users of the WebSphere MQ Classes for JMS
   trying to set illegal object types such as BigInteger as the
   value of a name/value pair on a JMS MapMessage.
   
   
   Platforms affected:
   MultiPlatform
   
   ****************************************************************
   PROBLEM DESCRIPTION:
   When a BigInteger object was set as the value of a name/value
   pair in a JMS MapMessage using the setObject method of the
   message, this method call did not fail as expected, but
   succeeded in writing malformed XML to the message.
   
   
    
   
   

PROBLEM CONCLUSION
 *  An attempt to set an illegal object type on a MapMessage now
   fails with an exception - for example, an attempt to set a
   BigInteger will result in an exception like:
   
   com.ibm.msg.client.jms.DetailedMessageFormatException:
   JMSCC0083: An incorrect object of type 'java.math.BigDecimal'
   was provided.
   An object was provided to the writeObject() method that was not
   a Java(tm) primitive wrapper type.
   Correct the application to ensure that only objects of the
   permitted types are passed as parameters to the writeObject()
   method.
   &#09;at
   sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native
   Method)
   &#09;at
   sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown
   Source)
   &#09;at
   sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknow
   n Source)
   &#09;at java.lang.reflect.Constructor.newInstance(Unknown
   Source)
   &#09;at
   com.ibm.msg.client.commonservices.j2se.NLSServices.createExcepti
   on(NLSServices.java:319)
   &#09;at
   com.ibm.msg.client.commonservices.nls.NLSServices.createExceptio
   n(NLSServices.java:226)
   &#09;at
   com.ibm.msg.client.jms.internal.JmsErrorUtils.createException(Jm
   sErrorUtils.java:126)
   &#09;at
   com.ibm.msg.client.jms.internal.JmsMapMessageImpl.setObject(JmsM
   apMessageImpl.java:832)
   &#09;at
   com.ibm.jms.JMSMapMessage.setObject(JMSMapMessage.java:655)
   &#09;at
   tests.TestJMSMapMessage.runTest(TestJMSMapMessage.java:50)
   &#09;at tests.TestJMSMapMessage.main(TestJMSMapMessage.java:24)
   
   The allowed object types are objectified primitive object types
   (Integer, Short, Byte, Float, Long, Double, Boolean, Character),
   String objects, and byte arrays.
   
   ---------------------------------------------------------------
   The fix is targeted for delivery in the following PTFs:
   
   Version    Maintenance Level
   v7.1       7.1.0.8
   v7.5       7.5.0.7
   v8.0       8.0.0.5
   
   The latest available maintenance can be obtained from
   'WebSphere MQ Recommended Fixes'
   http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006037 [http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006037]
   
   If the maintenance level is not yet available information on
   its planned availability can be found in 'WebSphere MQ
   Planned Maintenance Release Dates'
   http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006309 [http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006309]
   ---------------------------------------------------------------
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   IV76399
   
   
 * REPORTED COMPONENT NAME
   WMQ LIN X86-64
   
   
 * REPORTED COMPONENT ID
   5724H7230
   
   
 * REPORTED RELEASE
   710
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2015-08-27
   
   
 * CLOSED DATE
   2015-11-30
   
   
 * LAST MODIFIED DATE
   2015-11-30
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   WMQ LIN X86-64
   
   
 * FIXED COMPONENT ID
   5724H7230
   
   

APPLICABLE COMPONENT LEVELS
 * R710 PSY
   UP