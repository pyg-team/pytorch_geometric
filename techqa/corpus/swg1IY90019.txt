Title: IBM IY90019: SSL IN IMPACT 3.1 PATCH 3 DOES NOT WORK WHEN IMPACT SERVERS ARE IN CLUSTERED MODE. - United States

Text:
 SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  SSL in Impact 3.1 Patch 3 does not work when Impact servers are
   in clustered mode. This occurs for both mutual and server-only
   authentication
   
   
    
   
   

LOCAL FIX
 *  n/a
   
   
    
   
   

PROBLEM SUMMARY
 *         SSL Setup for Impact 3.1 with Clustering
   
   JSSE Keystore/Truststore Setup
   ==============================
   
   There are three basic steps that will need to be performed,
   these are, generate
   a keystore for a particular component, export the certificate
   for the component,
   and import the certificate into the Truststore of the other
   component(s). The
   tool that aids in this is the keytool binary, which is provided
   with the Java
   runtime.
   
   For the following, assume the following configuration: one GUI
   Server and two
   Impact cluster members, named NCI and NCI2. The example commands
   below, however,
   will only show the steps for one of these components, as they
   are almost
   identical. A note will be made where they differ.
   
   NOTE: These examples assume that the keytool program is on your
   path. If you
         are unsure of where to find it, one is provided with the
   Impact/GUI Server
         install and can be located under $GUI_HOME or $IMPACT_HOME
   at
         platform/$ARCH/j2sdk1.4.2_05/bin. The examples assume a
   Unix-like OS. The
         backslash characters are there only for readability and
   are not required;
         the prompt is denoted by '$>' characters
   
   # generate kestore for the NCI component
   $> keytool -genkey -dname "CN=www.ibm.com, OU=Tivoli, O=IBM,
   C=US" \
      -alias NCI -keypass changeit -storepass changeit -validity
   365 \
      -keystore nci.jks
   
   # export client certificate for NCI
   $> keytool -export -alias NCI -file nci.cer -keystore nci.jks
   
   Once this step has been completed for each component, i.e. the
   GUI Server and
   all Impact cluster members, it is time to import the client
   certificates into
   the appropriate Truststores.
   
   Continuing with our example, the certificate for the GUI Server
   should be
   imported into the Truststore for the NCI and NCI2 components,
   the certificate
   for the NCI component should be imported into the Truststore for
   the GUI Server
   and the NCI2 components, and the certificate for the NCI2
   component should be
   imported into the Truststore for the GUI Server and NCI
   components.
   
   # import GUI Server certificate into NCI Truststore
   $> keytool -import -alias guiserver -file guiserver.cer
   -keystore nci.certs
   
   # import NCI2 certificate into NCI Truststore
   $> keytool -import -alias nci2 -file nci2.cer -keystore
   nci.certs
   
   
   Now that the JSSE Keystores and Truststores are set up, it is
   time to configure
   the Netcool components. There are two ways to set up SSL
   Authentication between
   the components, Server Authentication and Two-Way or Mutual
   Authentication.
   
   
   Server Authentication
   =====================
   
   During the SSL handshake, the server sends the client a
   certificate to
   authenticate itself. The client uses the certificate to
   authenticate the
   identity the certificate claims to represent.
   
   Utilization of this authentication scheme requires the client
   side to use a
   Truststore containing the server's certificate, while the server
   must have a
   Keystore which also contains its certificate. In a clustered
   environment,
   however, there are two types of clients. The first is the GUI
   Server, which is
   a client to the primary Impact cluster member. The second is any
   secondary
   Impact server that is part of the same cluster, which is also a
   client to the
   primary Impact cluster member.
   
   For each of the Impact cluster members, edit the
   <server_name>_basicservletmanager.props to enable SSL for SOAP
   communication in
   the following manner:
   
   impact.basicservletmanager.sslmode=true
   impact.basicservletmanager.ssl.keystore=<fully qualified path to
   Keystore file>
   impact.basicservletmanager.ssl.keypass=<Keystore password>
   
   For the GUI Server, add the following to the startup script,
   ncgui_server,
   anywhere before the last line where the exec call is issued:
   
   # set up SSL SOAP between guiserver and impact server
   JAVA_OPTS="${JAVA_OPTS} -Djavax.net.ssl.trustStore=<fully
   qualified path to Truststore file>
   -Djavax.net.ssl.trustStorePassword=<Truststore password>"
   
   
   
   Mutual Authentication
   =====================
   
   Mutual authentication is where there is a reciprocal trust
   relationship between
   the client and the server, the client must generate a
   certificate containing
   his identity and private key in his keystore. The client must
   also make a
   version of the certificate containing his identity and public
   key, which the
   server must store in her truststore. In turn, the client needs
   to trust the
   server; this is accomplished by importing the server's CA
   certificate into the
   client truststore.
   
   For the GUI Server, add the following to the startup script,
   ncgui_server,
   anywhere before the last line where the exec call is issued:
   
   JAVA_OPTS="${JAVA_OPTS} -Djavax.net.ssl.trustStore=<fully
   qualified path to Truststore file>
   -Djavax.net.ssl.trustStorePassword=<Truststore password>
   Djavax.net.ssl.keyStore=<fully qualified path to Keystore>
   -Djavax.net.ssl.keyStorePassword=<Keystore password>"
   
   For each of the Impact cluster members, edit the
   <server_name>_basicservletmanager.props to enable SSL for SOAP
   communication in
   the following manner:
   
   impact.basicservletmanager.clientauth=true
   impact.basicservletmanager.sslmode=true
   impact.basicservletmanager.ssl.keystore=<fully qualified path to
   Keystore file>
   impact.basicservletmanager.ssl.keypass=<Keystore password>
   
   Lastly in each Impact server s startup script, nci_server,
   change the command
   that starts the Impact server.
   
   From:
   ${VM_RUNTIME} -Dapp=${NAME}_nci_server ${VM_FLAGS}
   -Dbase.directory=$IMPACT_HOME -Dname=$NAME
   -Dnetcool.productname=impact -cp
   ${OPTIONAL_JARS}:${IMPACT_HOME}/lib/rubi3p.jar:${IMPACT_HOME}/li
   b/ncsmClient.jar:${IMPACT_HOME}/lib/${JAR}.jar:${IMPACT_HOME}/li
   b3p/${JAR3P}.jar com.micromuse.response.server.ResponseServer $*
   <${IMPACT_HOME}/bin/.server.input
   2>${IMPACT_HOME}/log/${NAME}.$$.stacktrace &
   
   To:
   
   ${VM_RUNTIME} -Dapp=${NAME}_nci_server ${VM_FLAGS}
   -Dbase.directory=$IMPACT_HOME -Dname=$NAME
   -Dnetcool.productname=impact -Djavax.net.ssl.trustStore=<fully
   qualified path to Truststore>
   -Djavax.net.ssl.trustStorePassword=<Truststore password> -cp
   ${OPTIONAL_JARS}:${IMPACT_HOME}/lib/rubi3p.jar:${IMPACT_HOME}/li
   b/ncsmClient.jar:${IMPACT_HOME}/lib/${JAR}.jar:${IMPACT_HOME}/li
   b3p/${JAR3P}.jar com.micromuse.response.server.ResponseServer $*
   <${IMPACT_HOME}/bin/.server.input
   2>${IMPACT_HOME}/log/${NAME}.$$.stacktrace &
   
   
    
   
   

PROBLEM CONCLUSION
 *     Fixed in Impact 3.1 Fix Pack 5
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   IY90019
   
   
 * REPORTED COMPONENT NAME
   NETCOOL/IMPACT
   
   
 * REPORTED COMPONENT ID
   5724O59IS
   
   
 * REPORTED RELEASE
   310
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2006-09-29
   
   
 * CLOSED DATE
   2007-09-05
   
   
 * LAST MODIFIED DATE
   2007-09-05
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   NETCOOL/IMPACT
   
   
 * FIXED COMPONENT ID
   5724O59IS
   
   

APPLICABLE COMPONENT LEVELS
 * R310 PSY
   UP