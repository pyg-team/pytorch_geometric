Title: IBM Netcool/OMNIbus 8.1 : Configuring SSL connectivity - United States

Text:
ssl; nc_gskcmd; omni.kdb; cn; commonname; commonnames; object server TECHNOTE (FAQ)

QUESTION
 nc_gskcmd : Can you configure SSL for ObjectServers from the command line 

ANSWER

Yes, the SSL configuration of an ObjectServer or a multi tier system can be performed from the command line.

In the given example, the CA is the primary ObjectServer's omni.kdb.
The details are also provided in an attached file to allow for editing.

Netcool/OMNIbus 8.1 SSL example


Overview
host1 = Primary ObjectServer (CA Server)
host2 = Backup ObjectServer

omni.dat

[AGG_P]
{
Primary: host1 ssl 7777
}
[AGG_B]
{
Primary: host2 ssl 7777
}
[AGG_GATE]
{
Primary: host2 4777
}


Primary ObjectServer

On the Primary ObjectServer [host1]:

Create CMS key database (Acting as Issuing CA):
$NCHOME/bin/nc_gskcmd -keydb -create -db "$NCHOME/etc/security/keys/omni.kdb" \
-pw mypassword -stash -expire 3660

Create self signed CA certificate:
$NCHOME/bin/nc_gskcmd -cert -create \
-db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "CA" -size 1024 -ca true -dn "CN=CA,O=IBM,OU=Support,L=SouthBank,ST=London,C=GB" \
-expire 3660 -X509version 3 


Export the CA Certificate for distribution:
$NCHOME/bin/nc_gskcmd -cert -extract -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "CA" \
-target "$NCHOME/etc/security/keys/cacert.arm"

Create certificate request for primary ObjectServer:
Note : Label is same as the server name in omni.dat file as is the Common Name (CN) 

$NCHOME/bin/nc_gskcmd -certreq -create -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "AGG_P" \
-size 2048 \
-dn "CN=AGG_P,O=IBM,OU=Support,L=SouthBank,ST=London,C=GB" \
-file "$NCHOME/etc/security/keys/AGG_P_req.arm"

Sign the certificate requests using above created signer certificate label CA:
$NCHOME/bin/nc_gskcmd -cert -sign -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "CA" \
-target "$NCHOME/etc/security/keys/AGG_P_cert.arm" \
-expire 3660 \
-file "$NCHOME/etc/security/keys/AGG_P_req.arm"

Receive the signed certificate in omni.kdb file:
$NCHOME/bin/nc_gskcmd -cert -receive -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-file "$NCHOME/etc/security/keys/AGG_P_cert.arm"



Backup ObjectServer

On the backup ObjectServer.

Create CMS key database [host2]

$NCHOME/bin/nc_gskcmd -keydb -create -db "$NCHOME/etc/security/keys/omni.kdb" \
-pw mypassword -stash -expire 3660

Copy the CA file from host1 to $NCHOME/etc/security/keys on host2

$NCHOME/bin/nc_gskcmd -cert -add -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "CA" \
-file "$NCHOME/etc/security/keys/cacert.arm"

Create a request

$NCHOME/bin/nc_gskcmd -certreq -create -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "AGG_B" \
-size 2048 \
-dn "CN=AGG_B,O=IBM,OU=Support,L=SouthBank,ST=London,C=GB" \
-file "$NCHOME/etc/security/keys/AGG_B_req.arm"

Sign the request on the Primary [host1]
copy $NCHOME/etc/security/keys/AGG_B_req.arm to the primary ObjectServer acting as the CA server

$NCHOME/bin/nc_gskcmd -cert -sign -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "CA" \
-target "$NCHOME/etc/security/keys/AGG_B_cert.arm" \
-expire 3660 \
-file "$NCHOME/etc/security/keys/AGG_B_req.arm"

Receive the certificate on the Backup [host2]:
copy AGG_B_cert.arm back to $NCHOME/etc/security/keys on the backup

$NCHOME/bin/nc_gskcmd -cert -receive -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-file "$NCHOME/etc/security/keys/AGG_B_cert.arm"

Check the created certificates:
$NCHOME/bin/nc_gskcmd -cert -list -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword


Bi-directional gateway

The ObjectServer names identify the SSL certificate labels to use:
Name : 'AGG_GATE'
Gate.ObjectServerA.Server : 'AGG_P'
Gate.ObjectServerB.Server : 'AGG_B'


SSL Clients

Extract signer certificate to distribute to clients in file, if not done already.

$NCHOME/bin/nc_gskcmd -cert -extract -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "CA" \
-target "$NCHOME/etc/security/keys/cacert.arm"

Distribute cacert.arm file to Netcool/OMNIbus clients connecting to the ObjectServer's using SSL

Configuring the Clients:

Install the cacert.arm file in a secure directory;
$NCHOME/etc/security/keys/cacert.arm

Create the CMS database omni.kdb, if required:
$NCHOME/bin/nc_gskcmd -keydb -create -db "$NCHOME/etc/security/keys/omni.kdb" \
-pw mypassword \
-stash -expire 3660

Add signer certificate from server to client:
$NCHOME/bin/nc_gskcmd -cert -add -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "CA" \
-file "$NCHOME/etc/security/keys/cacert.arm"

e.g.
nco_ping AGG_P
nco_ping AGG_B


Extending the multiter system

# Collection o/s
[C2A01]
{
Primary: host3 4300 ssl 4777
}
[COL_P_1]
{
Primary: host3 4100 ssl 7777
}
[AGG_V]
{
Primary: host1 ssl 7777
Backup: host2 ssl 7777
}


Create CMS key database [host3]:
$NCHOME/bin/nc_gskcmd -keydb -create \
-db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword -stash -expire 366

Copy the CA file from host1 to $NCHOME/etc/security/keys on host3:
$NCHOME/bin/nc_gskcmd -cert -add -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "CA" \
-file "$NCHOME/etc/security/keys/cacert.arm"

Create a request:
$NCHOME/bin/nc_gskcmd -certreq -create -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "COL_P_1" \
-size 2048 \
-dn "CN=COL_P_1,O=IBM,OU=Support,L=SouthBank,ST=London,C=GB" \
-file "$NCHOME/etc/security/keys/COL_P_1_req.arm"

Sign the request on the Primary [host1]:
copy $NCHOME/etc/security/keys/COL_P_1_req.arm to the primary ObjectServer acting as the CA server

$NCHOME/bin/nc_gskcmd -cert -sign -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-label "CA" \
-target "$NCHOME/etc/security/keys/COL_P_1_cert.arm" \
-expire 366 \
-file "$NCHOME/etc/security/keys/COL_P_1_req.arm"

Receive the certificate on the collection ObjectServer [host3]:
copy COL_P_cert.arm back to $NCHOME/etc/security/keys on the collection ObjectServer

$NCHOME/bin/nc_gskcmd -cert -receive \
-db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword \
-file "$NCHOME/etc/security/keys/COL_P_1_cert.arm"

$NCHOME/bin/nc_gskcmd -cert -list -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword

Certificates found
* default, - personal, ! trusted
- CA
- COL_P_1


For the Gateway properties use collection to aggregation configuration but specify the 

Gate.Writer.CommonNames:

Gate.Reader.Server : 'COL_P_1'

Gate.Writer.Server : 'AGG_V'
Gate.Writer.CommonNames : 'AGG_P,AGG_B'


General Maintenance commands:

List the certificates:

$NCHOME/bin/nc_gskcmd -cert -list -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword

Delete a certificate:

$NCHOME/bin/nc_gskcmd -cert -delete -label "PrimaryOS" \
-db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword

List the certificate requests:

$NCHOME/bin/nc_gskcmd -certreq -list -db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword

Delete certificate request:

$NCHOME/bin/nc_gskcmd -certreq -delete -label "PrimaryOS" \
-db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword

List the details of certificate:

$NCHOME/bin/nc_gskcmd -cert -details -label AGG_P \
-db "$NCHOME/etc/security/keys/omni.kdb" -pw mypassword

Label : AGG_P
Key Size : 1024
Version : X509 V3
Serial : 454a2e8bce01c6b3
Issuer : CN=CA,OU=Support,O=IBM,L=SouthBank,ST=London,C=GB
Subject : CN=AGG_P,OU=Support,O=IBM,L=SouthBank,ST=London,C=GB
Not Before : July 14, 2015 9:31:34 AM GMT+01:00
Not After : July 15, 2016 9:31:34 AM GMT+01:00
Public Key
Public Key Type : RSA (1.2.840.113549.1.1.1)
Fingerprint : SHA1 :
Fingerprint : MD5 :
Fingerprint : SHA256 :
Signature Algorithm : SHA1WithRSASignature (1.2.840.113549.1.1.5)
Value
Trust Status : Enabled

Web GUI Connectivity to the ObjectServer

ncwDataSourceDefinitions.xml
<ncwPrimaryServer>
<ncwOSConnection maxPoolSize="10" port="7777" host="host1" ssl="true" minPoolSize="5"/>
</ncwPrimaryServer>
<ncwBackUpServer>
<ncwOSConnection maxPoolSize="10" port="7777" host="host1" ssl="true" minPoolSize="5"/>
</ncwBackUpServer>

JAZZSM_HOME/profile/etc/com.sybase.jdbc3.SybDriver.props
USESSLPRIMARY=true
USESSLBACKUP=true

Update the CA certificate using the WebSphere Administration Console as SMADMIN as described in the 

manual
The file that Web GUI updates is:
JAZZSM_HOME/profile/config/cells/JazzSMNode01Cell/nodes/JazzSMNode01/trust.p12

Redirect the ObjectServer authentication using the confvmm4ncos.sh
./confvmm4ncos.sh JAZZSM_HOME/profile root '' host1 7777 host2 7777

Restart the Web GUI server


SSL_AGG.txt [/support/docview.wss?uid=swg21962367&aid=2]SSL_AGG.txt [/support/docview.wss?uid=swg21962367&aid=1]