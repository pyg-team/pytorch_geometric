Title: IBM The FilteredQueryTimeout property provides enhanced job and policy sweep performance - United States

Text:
 PRODUCT DOCUMENTATION

ABSTRACT
 Content Engine 5.2 Feature Pack 2 introduces the integer property FilteredQueryTimeout. In some cases, this property can be used to enhance job and policy sweep performance. 

CONTENT
The FilteredQueryTimeout property 

The property is applied to the CmSweepJob and the CmPolicyControlledSweep classes, with a default value of 0 (zero seconds). When the default value of 0 is used, there is no change to the API queries that are issued by job and policy sweeps, which means that, by default, job and policy sweep query behavior does not change in 5.2 Feature Pack 2.

Sweep query and sweep filter expression
A sweep uses Content Engine API queries to obtain instances of a class (or instances of a class and all subclasses). An example of a sweep query of the Document class and all subclasses is as follows:

SELECT TOP 2000 bcn.Id, bcn.StorageArea, bcn.ReplicationGroup
FROM Document bcn WITH INCLUDESUBCLASSES
WHERE Id > {00000000-0000-0000-0000-000000000000} ORDER BY Id

A sweep policy uses a filter expression (FilterExpression property) with a SQL-like syntax to select the instances that the policy will operate on. For example, if a Document disposal policy has a filter expression of IsReserved=TRUE AND ContentSize > 10000, the disposal policy deletes only instances that are in the reservation state and have content that is larger than 10,000 bytes. Before the 5.2 Feature Pack 2 release, the conditions that are contained in the filter expression were not included in the WHERE clause of the sweep query.

Using the FilteredQueryTimeout property
In 5.2 Feature Pack 2, the FilteredQueryTimeout property can be used to include the conditions of the filter expression in the sweep query. If the FilteredQueryTimeout value is greater than 0, then the first query of either the job or policy sweep iteration includes the conditions of the filter expression in the WHERE clause of the query. Expanding on the previous example and using a FilteredQueryTimeout value of 90 seconds, a sweep query of the Document class and all subclasses with a filter expression of IsReserved=TRUE AND ContentSize > 10000 is as follows (extracted from Sweep Framework detailed trace logging):

SELECT TOP 2000 bcn.Id, bcn.StorageArea, bcn.ReplicationGroup, bcn.ContentSize, bcn.IsReserved
FROM Document bcn WITH INCLUDESUBCLASSES
WHERE Id > {00000000-0000-0000-0000-000000000000}
AND (IsReserved=TRUE AND ContentSize > 10000)
ORDER BY Id OPTIONS(TIMELIMIT 90)

The TIMELIMIT value of the query is set to the value of the FilteredQueryTimeout property (TIMELIMIT 90). The time limit is applied only to the first query of the sweep iteration. If the query time limit is exceeded, then the query terminates and the sweep falls back to using a query that does not contain the filter expression in the WHERE clause. The sweep continues to use the WHERE clause without the filter expression until the iteration is completed. If the query time limit is not exceeded during the first query, then the sweep continues to use the WHERE clause with the filter expression until the sweep iteration is completed.

Setting the FilteredQueryTimeout value
You can use the Content Platform Engine administration console to set the FilteredQueryTimeout value for existing job and policy sweeps. 

Important: The administration console does not support setting the FilteredQueryTimeout value during the creation of the sweep. Therefore, create the sweep in the disabled state if you want to set the FilteredQueryTimeout value before the sweep is enabled.

To set the FilteredQueryTimeout value for a job sweep: 

 1. In the administration console, access the sweep properties:  1. In the domain navigation pane, select the object store. 
     2. In the object store navigation pane, select the appropriate sweep folder:  * For a job sweep, navigate to Sweep Management > Job Sweeps. Select the type of sweep, and then select the specific job sweep object. 
         * For a policy sweep, navigate to Sweep Management > Policy-Controlled Sweeps. Select the underlying sweep object. It is named as the target base class of the sweep.
        
        
    
    
 2. On the Properties tab, change the value of the Filtered Query Timeout property and save the job object. 
 3. Enable the job sweep.


Multiple filter expressions 
Policy sweeps can include multiple policies; for example, a sweep of the Document class can include a disposal sweep policy and a retention update sweep policy. When multiple policies are defined for a sweep, the conditions of each filter expression of each policy are combined with an OR operator and are included in the WHERE clause. 

In the following example, the FilteredQueryTimeout value is set to 90 seconds for a sweep of the Document class that includes two sweep policies. The first policy defines the filter expression as IsReserved=TRUE, and the second policy defines the filter expression as ContentSize<5000000. The sweep must select objects that match either expression, by using the following API SQL statement: 

SELECT TOP 2000 bcn.Id, bcn.Owner, bcn.CmRetentionDate, bcn.IsReserved, bcn.DateCreated, bcn.ContentSize 
FROM Document bcn WITH INCLUDESUBCLASSES 
WHERE Id > {00000000-0000-0000-0000-000000000000} 
AND ((IsReserved=TRUE) OR (ContentSize<5000000)) 
ORDER BY Id OPTIONS(TIMELIMIT 90) 

Using a covering index 
To improve performance when the FilteredQueryTimeout value is used (that is, set to a value greater than 0), expand the covering index to include the columns that are defined in the filter expression or expressions. For example, if the filter expression for sweep of the Document class is set to IsReserved=TRUE, add the related column of the DocVersion table (is_reserved) to the covering index. 

For more information about using a covering index to improve sweep performance, see Creating an index to improve sweep performance [http://pic.dhe.ibm.com/infocenter/p8docs/v5r2m0/topic/com.ibm.p8.performance.doc/p8ppt237.htm]. 

Monitoring sweep query performance 
You can monitor sweep query performance by using the system dashboard tool. Under Object Store, Sweep Framework, name of the sweep, see the counters name ‘class-name’ + ‘Queries’ and ‘class-name’ + ‘Filtered Queries’. 

Guidelines for using the FilteredQueryTimeout property 
The use of the FilteredQueryTimeout property is normally a trade-off between longer-running queries and processing more objects within Content Platform Engine. For example, if a filter expression selects 10% of the instances in the data set, each query runs longer if the FilteredQueryTimeout property is used, but only 10% of the instances are processed by the policy. If the FilteredQueryTimeout property is not used, then each query runs faster, but 100% of the instances are examined by the policy. 

In general, set the FilteredQueryTimeout property to a fairly low value (for example, 30 seconds), create a covering index, and monitor the sweep performance through the system dashboard tool.