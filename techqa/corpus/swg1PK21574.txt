Title: IBM PK21574: JSF CLIENT DATA OBJECT DOESN'T RESOLVE APPLICABLE INTROSPECTIVE CLASSES ACCESSIBLE VIA A REFERENCED PROJECT . - United States

Text:
 SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS RETURNED (APAR CANNOT BE RESOLVED WITHOUT ADDITIONAL INFO FROM IBM OR CUSTOMER.)
    
   
   

ERROR DESCRIPTION
 *  Environment: Windows XP
   
   Product name: IBM? Rational? Application Developer
   
   Program Version    :  6.0.1.1 iFix01
   Build: 20050725_1800
   
   Reproducible Y/N: Y
   Title: JSF client data Object doesn't resolve applicable
   introspective classes accessible via a referenced project
   Description of problem:
   The customer has an issue within his project where the JSF
   client data doesn't show the applicable introspective classes.
   This behavior is prevalent where the relating classes are out
   with the associated web project, even though the applicable
   project references are assigned, and the product help files
   illustrate only where these classes would be included within the
   initial project.
   Customer included an illustrating project of this problem.
   
   Engineer research:
   You can see the behavior described when importing his project
   interchange as attached where if you try to drop a client data
   object onto the DataGrid component there is a "select a node
   that has children" error dialog. It can also be recreated to
   replicate the project by following these steps:
   1). Create a simple Java Project and give it a source folder src
   2). Create a package com.umusic.impl
   3). Create a package com.umusic.data
   4). Create a class in the impl package called Songs and write
   some implementation (the one I have supplied just returns an
   simple array)
   5). Create a DataBean class and provide a get method to the
   Songs.
   This is a simplistic reflection of an access bean calling a
   session EJB
   6). Create a web project and related EAR
   7). Enable the project for faces and client faces from the
   Properties/Web Project features
   8). Include the project created in 1 as a project reference
   9). Create a Faces page with client data model (from the New
   Faces dropdown)
   10). From the page data tab, create a JavaBean from the DataBean
   class, note that this will be visible if you?ve included the
   external project and will create the reference and
   introspectively locate the referenced class, in this case Song.
   If you were creating a normal server side control within the
   page, this could be dragged onto the designer and the controls
   built fine.
   11). Select the Client Data tab and create a new client data
   reference to the JavaBean in 10)
   12). The bean is recognized, but the internal class reference
   Song is not found and therefore no child nodes are built and
   cannot be dragged onto the page
   13). A client data object would normally be able to be dragged
   into a DataGrid component (selected from the Faces Client
   Components tab in the palette)
   
   NB: I also tried as noted by the customer putting all the
   relevant classes into the JavaSource of the Web Project itself
   and it did recognize and find the internal classes. The Client
   data object can then be dragged onto the DataGrid component as
   suggested in step 13 above. It appears only when the classes are
   in a referenced project that the problem occurs and I cannot
   find any other project specific setting that makes these
   visible.
   
   
    
   
   

LOCAL FIX

PROBLEM SUMMARY

PROBLEM CONCLUSION

TEMPORARY FIX

COMMENTS
 *  Adding client data generates classes. The object classes
   (DataBean, Songs) must be available on the classpath of
   project in which client data will be created (i.e. in the
   web-inf\lib folder)
   
   
    
   
   

APAR INFORMATION
 * APAR NUMBER
   PK21574
   
   
 * REPORTED COMPONENT NAME
   APP DEV V6 WIN
   
   
 * REPORTED COMPONENT ID
   5724J1901
   
   
 * REPORTED RELEASE
   601
   
   
 * STATUS
   CLOSED RET
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2006-03-15
   
   
 * CLOSED DATE
   2006-03-27
   
   
 * LAST MODIFIED DATE
   2006-03-27
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION

APPLICABLE COMPONENT LEVELS