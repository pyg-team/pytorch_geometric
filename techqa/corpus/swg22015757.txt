Title: IBM TS4300 fails to get a key from SKLM - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 New TS4300 to work with SKLM. It apparently passes the connection test in the TS4300 but get a key failues. 
"
KMIP: key not found on server
KMIP_KEY_NOT_FOUND
"


RESOLVING THE PROBLEM
New TS4300 to work with SKLM. It apparently passes the connection test in the TS4300 but get a key failues. 

Had an old library with encrypted tapes using sklm 2.5 using non ssl on port 3801.
All was fine then.

​Two changes happened after that:
Has upgraded sklm to 2.7 IP is 10.9.27.27
and 
Configured a new library IP is 10.22.6.20 using kmip port 5696 to connect to sklm 2.7.

Used a blank new tape in the new kmip library to encrypt it using sklm 2.7 to see if encryption works between the two.

The test contains:
​1. Connection test
2. Drive check
3. tape backup encryption AA0237 - Failed
"
KMIP: key not found on server
KMIP_KEY_NOT_FOUND
"

Sklm audit logs show no key request or creating a key coming from device to sklm. 

Here is some snippets from debug log

Apr 13, 2018 10:33:53 AM Thread[pool-6-thread-1,5,main] com.ibm.tklm.server.db.daokmip.KmipEntitySearch buildLocateQuery(Attribute[], Collection<Attribute[]>, int)(valueSearchCriteria, rangeSeachCriteria, maxNumberToReturn)
FINER: ENTRY 
[[ATTRIBUTE NAME Object Type]: SYMMETRIC_KEY
[ATTRIBUTE NAME Name]: [[INDEX null] [TYPE TEXT] [VALUE key00000000000000000E]]] null 2,147,483,647


Apr 13, 2018 10:33:52 AM Thread[pool-6-thread-1,5,main] com.ibm.tklm.kmip.decoder.TTLVDecoder parseKMIPDataTypeObject
ALL: Parsed Tag: Name Value (0x420055), Type: Text String (0x07), Data: key00000000000000000E


Apr 13, 2018 10:33:54 AM Thread[pool-6-thread-1,5,main] com.ibm.tklm.server.db.daokmip.KmipEntitySearch setParameters(PreparedStatement, parameterList)
ALL: 
Parameter 1: SYMMETRIC_KEY
Parameter 2: key00000000000000000E
Parameter 3: 1

Apr 13, 2018 10:33:54 AM Thread[pool-6-thread-1,5,main] com.ibm.tklm.kmip.KMIPHeader createResponseHeader
ALL: Setting response protocol version to v1.2
Apr 13, 2018 10:33:54 AM Thread[pool-6-thread-1,5,main] com.ibm.tklm.kmip.stub.SSLRequestProcessor run
ALL: Responding to CN=KMIPSelfSigned,C=US,ST=New York,L=Armonk,1.2.840.113549.1.9.1=#160f737570706f72744069626d2e636f6d,OU=Storage Products,O=IBM
Response message: KMIPMessage: 
.
Solution
======
These keys were not generated at SKLM server....they seem to have loaded from some other source.
I am saying this because if you create / generate a key on the SKLM server it will have the NAME attribute value.
It will not be there, only if its imported from other source in that case, we just load what was provided even if it has no name but won't work during encryption.

There is a LOCATE request but apparently you seem to be locating a Key with attribute Name having value key00000000000000000E

From the debug log:

Tag: Attribute Name (0x42000A), Type: Text String (0x07), Data: Name
Tag: Attribute Value (0x42000B), Type: Structure (0x01), Data: 
Tag: Name Value (0x420055), Type: Text String (0x07), Data: key00000000000000000E
Tag: Name Type (0x420054), Type: Enumeration (0x05), Data: 0x00000001 (UninterpretedTextString)

But from the Key list output, the alias of the key has value key00000000000000000E and Name is empty. 

tklmKeyList('[-alias key00000000000000000E -v y]')
shows:
"
alias key00000000000000000e
...
Name 
"

Where name is blank which should have had a name.

So at the time of creating / registering the key I think the specific Name Value was not provided, hence the DB does not has that value for the Name Attribute. Since there is no such object in the database with Name = key00000000000000000E, Locate is sending an empty response.

Two things can be done:
1. Either change the way the Locate request is sent.
2. Modify the object to update the attribute Name to have a value and then Locate for that Name value. Modify can be done using the Modify Attribute operation.

Keys were updated with names by L3 then encryption worked fine afterwards.
.