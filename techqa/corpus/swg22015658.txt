Title: IBM Configuring SystemT extractors in Datacap - United States

Text:
 PREVENTIVE SERVICE PLANNING

ABSTRACT
 This technote provides information about configuring SystemT extractors in Datacap. 

CONTENT
Prerequisite: To configure System T extractors, you must upgrade IBM Datacap version to IBM Datacap 9.1.3 Interim Fix 4. 

1. Configuring prebuilt extractors in Datacap 

Prebuilt extractors are the extractors that are shipped with Datacap. The list of prebuilt extractors is available in action library help for the ExtractText action. 
To use the prebuilt extractor, no special configuration is required. The extractor can be called directly through the ExtractText action of DocumentAnalytics library. 

Syntax: ExtractText(ModuleName.Viewname,ModuleName.ViewName,…n) 

Description : 

 * ModuleName in the case of prebuilt extractor that is shipped with Datacap is “Named_Entity_Recognition”.
 * Viewname is the extractor name.
 * N denotes any number of extractors that can be passed to SystemT.

Example: ExtractText(Name_Entity_Recognition.Person,Named_Entitiy_Recognition.Address,Named_Entity_Recogniton.City) 

Note: Avoid space between parameters. 

2. Custom extractors
Custom extractors are the extractors that you create using the SystemT Designer tool. 

An extractor can be exported for use within Datacap after it is complete and collects results in SystemT Designer, against a set of documents.

Single extractor
A ‘single extractor’ is an extractor that extracts one type or one pattern of data. For example, in the screenshot below, the extractor Contract_Term or ContractStart_Date are single extractors. They are saved as individual extractors within any category.
They can be exported individually in SystemT.


[/support/docview.wss?uid=swg22015658&amp;aid=1] 
Figure 1: Single Extractor / Individual Extractor 
To export the extractor, right click the extractor in the ‘Extractors’ tab, select Export and follow the steps mentioned in this section.  

2.1 Category of Extractors 

Multiple single extractors are saved under a category to form a group of extractors. This is required when a customer needs different type of data to be extracted from their documents. All extractors that are grouped together in a category can be exported at once, instead of exporting them individually. 

For example, in the screenshot below, two single extractors are saved under a category named “CustomerX_Extractors”. This category can then be exported as executable which consists of all the extractors.


[/support/docview.wss?uid=swg22015658&amp;aid=2] 
Figure 2: Category of Extractors 
To export the extractor, right click the category, select Export and follow the process mentioned in this section. Advantage of using category is that all the extractors get exported within a category. Three folders are created in System for both the above types of exports. The number of files varies in these folders. 

2.2 Exporting extractors in SystemT


[/support/docview.wss?uid=swg22015658&amp;aid=3] 
Figure 3: Export extractors in SystemT 

On export, the SystemT exports the extractor in form of a zip file containing three folders:  * Resources It is not mandatory for SystemT to export this folder every time.
   
   
 * SRC This folder is generated when the check box – ‘Include Source Files’ is checked while exporting the extractor in SystemT. This folder contains the AQL files for extractor. Although these are not going to be used in Datacap, they can be helpful in looking up what the modules and views are called, simply by opening the files in a text editor.
   
   
 * TAMs This folder contains the TAM files for the extractors. TAMs files are the binary files which cannot be modified using notepad or any editing tool. These are used in Datacap.
   
   

3. Configuring custom extractors in Datacap 

In Datacap 9.1.3 there are two valid approaches to configure extractors in Datacap.
No matter which approach you choose, you must first take a backup copy of your RRS\Aql folder. 

3.1 Copying the custom extractor TAM files 

Follow these steps to add the TAM files associated with the custom extractors to the RRS\Aql folder.

 * Take a backup copy of the RRS\Aql folder of your Datacap installation
 * From the exported zip file of the custom extractors, copy all the files from the TAMs folder to the \Datacap\RRS\Aql folder

Note: Since the SystemT tool exports the TAM files associated with all the dependent extractors, the TAMs folder may contain TAM file associated with prebuilt extractors. In that case, you get a warning from Windows about replacing existing files. If so, choose the option to replace the files. 

Next, copy any dictionary files that may have been exported

 1. Search the resources folder of the exported zip file for .dict files.
 2. If any are found, copy them to the \Datacap\RRS\Aql folder of Datacap installation.

Now, you can start using your custom extractors in the ExtractText action 

Example: ExtractText(tauser_tauser.FullYearText,Named_Entity_Recognition.City) 

tauser_tauser is the module name and FullYearText is the viewname. 

To get the module name, check the modulename in AQL file present in SRC folder. The highlighted text in the below screenshot is the module name.


[/support/docview.wss?uid=swg22015658&aid=4] [/support/docview.wss?uid=swg22015658&aid=4] 
Figure 4: Sample AQL file to understand the module name 

4. Additional Comments 4.1 SystemT Tool for building custom extractors
It is important that the version of the SystemT tool that you use to build custom extractors, exports TAM files which are compatible with the TAM files that exist in the\Datacap\RRS\Aql folder. The TAM files for the prebuilt extractors that are provided with Datacap 913 ifix4 were generated using the 3.12.8.414 version of the SystemT Designer tool. To ensure compatibility, this is the only version of the SystemT tool that should be used to build the custom extractors. 

4.2 Comparing results between the SystemT tool and Datacap ExtractText action 

In order to validate the functionality of a custom extractor as it is executed in Datacap, it is common to compare the results generated from Datacap with the results that were obtained from SystemT tool. 

When doing such a comparison, it is imperative that the same text is being used in both the cases. The best practice would be to run a document through Datacap OCR first, use the text file creation actions to generate an output of the OCR results and use those files when building extractors.