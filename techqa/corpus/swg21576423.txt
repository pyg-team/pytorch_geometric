Title: IBM Dynamically route MQ message using MQOD structure in DataPower - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 How to route MQ messages dynamically using MQOD structure? 

ANSWER
In order to dynamically route response message to remote queue manager, one can inject MQOD structure by using custom stylesheet in DataPower. 

It should be noted that the local queue manager should be configured to route message to remote queue manager using sender channel and the remote queue manager should have the respective receiver channel to get the message. 

Refer to the following link that describes how two queue managers communicate with each other in a distributed environment: http://publib.boulder.ibm.com/infocenter/wmqfte/v7r0/index.jsp?topic=%2Fcom.ibm.wmqfte.doc%2Fconfiguring_v6_qms.htm [http://publib.boulder.ibm.com/infocenter/wmqfte/v7r0/index.jsp?topic=%2Fcom.ibm.wmqfte.doc%2Fconfiguring_v6_qms.htm]. 

For information about WebSphere MQ queue manager clusters and how to configure them, see the link: http://publib.boulder.ibm.com/infocenter/wmqv7/v7r0/index.jsp?topic=%2Fcom.ibm.mq.csqzah.doc%2Fqc10220_.htm [http://publib.boulder.ibm.com/infocenter/wmqv7/v7r0/index.jsp?topic=%2Fcom.ibm.mq.csqzah.doc%2Fqc10220_.htm]. 

 

(1) Save the MQMD.ReplyToQ and MQMD.ReplyQMgr header values in the request flow:
<xsl:variable name="rule-type" select="dp:variable('var://service/transaction-rule-type')"/>
<xsl:choose>
<!-- Request Rule only -->
<xsl:when test="$rule-type = 'request'">
<xsl:variable name="entries" select="dp:request-header('MQMD')"/>
<xsl:variable name="header" select="dp:parse($entries)"/>
<xsl:variable name="RQ" select="$header//ReplyToQ"/>
<xsl:variable name="RQMgr" select="$header//ReplyToQMgr"/>
<dp:set-variable name="'var://context/MYMQMD/ReplyToQ'" value="$RQ"/>
<dp:set-variable name="'var://context/MYMQMD/ReplyToQMgr'" value="$RQMgr"/>
<xsl:message dp:priority="debug">
<xsl:value-of select="concat ('Request MQMD : ', dp:request-header('MQMD'))"/>
</xsl:message>
</xsl:when> 

(2) Populate the MQOD headers in the response flow:
<!-- Response rule only -->
<xsl:when test="$rule-type = 'response'">
<xsl:variable name="custMQODStr">
<MQOD>
<Version>2</Version>
<ObjectName>
<xsl:value-of select="dp:variable('var://context/MYMQMD/ReplyToQ')"/>
</ObjectName>
<ObjectQMgrName>
<xsl:value-of select="dp:variable('var://context/MYMQMD/ReplyToQMgr')"/>
</ObjectQMgrName>
</MQOD>
</xsl:variable>
<xsl:variable name="mqodStr">
<dp:serialize select="$custMQODStr" omit-xml-decl="yes"/>
</xsl:variable>
<xsl:message dp:priority="debug">
<xsl:value-of select="concat('Response MQOD : ', $mqodStr)"/>
</xsl:message>

(3) Inject the MQOD structure in the response flow:

<dp:set-response-header name="'MQOD'" value="$mqodStr"/>
</xsl:when>
</xsl:choos 

(4) Send the message using the mq-qm object that uses the local queue manager 

(5) For cluster environment, the MQOD structure should not contain the "ObjectQMgrName" element as MQ cluster environment can resolve queue manager names. 

For MQOD headers, refer to the following link: http://publib.boulder.ibm.com/infocenter/wmqv7/v7r0/topic/com.ibm.mq.csqzak.doc/fr13630_.htm [http://publib.boulder.ibm.com/infocenter/wmqv7/v7r0/topic/com.ibm.mq.csqzak.doc/fr13630_.htm]