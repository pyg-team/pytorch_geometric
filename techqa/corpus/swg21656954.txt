Title: IBM Registry Services application requests time out under a high volume of concurrent requests when using default system values - United States

Text:
jazzsm1102relnotes TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 
Registry Services in Jazz for Service Management can become unavailable under heavy work load environments when the underlying middleware and operating system has not been properly tuned for those types of loads. 


SYMPTOM
 

When Registry Services deals with a large number of concurrent requests from different clients or with a large number of providers and products, each individual request may take a very long time to be processed, causing connection time-outs on the client applications, which often may be perceived as Jazz for Service Management becoming unresponsive to newer requests.


CAUSE
 

The problem originates at three different levels. 

1. On Unix systems, DB2 requires several file handles for responding to multiple connections. Without the proper setting for the maximum number of file handles to support those connections, DB2 puts new connection requests on hold until other connections are released. 

2. DB2 default transaction log sizes are too small for a large number of concurrent transactions, which causes internal errors that slow down DB2 and forces the Registry Services application to return responses instructing the caller to retry the requests later.

3. WAS default connection pool size is quickly exhausted when the first two conditions above are verified, since each connection is held for longer periods of times while waiting for a chance to communicate with DB2.



ENVIRONMENT
 

All supported Jazz for Service Management middleware and operating systems.



DIAGNOSING THE PROBLEM
 

The first indication is in the WebSphere Application Server log files, under $was_profile/logs/server1/SystemOut.log, with a large number of log entries similar to these: 


[11/15/13 14:01:34:804 EST] 000000ad OslcRrService W CTJFK0155W Concurrent reconciliation process detected when creating the Registration Record RegistrationRecord{hashCode=1543773215,registrationId=1384523242845,productUri=http://tivvm195.cn.ibm.com:9430/cdm/oslc/configuration/6C40DC88EADA379A956539A4CB6F95D4,providerURI=1384449700555,reconciledResource=@null}. You can retry the request later.

[11/15/13 17:44:32:634 EST] 0000016e JaxRsUtils E CTJFO0025E The incoming request from the IP 9.123.103.184 did not end successfully. The Registry Services was not able to establish the connection with the database. The specific reason for this error is: Connection not available, Timed out waiting for 180001

[11/15/13 17:51:46:628 EST] 0000002c ThreadMonitor W WSVR0605W: Thread "WebContainer : 17" (00000196) has been active for 614174 milliseconds and may be hung. There is/are 1 thread(s) in total in the server that may be hung.

The confirmation can be achieved by following the steps described in the "Resolving the problem" section of this technote, inspecting the current values for the system. You should see values considerably lower than what is indicated in that section (for example, 10 for the maximum number of connections for the JDBC data source in WebSphere Application Server) .



RESOLVING THE PROBLEM
 

To resolve this problem, complete the following steps.

WebSphere Application Server

a) Set the properties for Registry Services database connection pool.

1. Select JDBC > Datasources > frs datasource > Connection pools

2. Set minimum connection to 0 and maximum connection to 60.

b) Set the properties for JVM memory

1. Select Servers > Application Servers > Server<n> > Process definition -> Java Virtual Machine

2. Set property min heap to 2048 and max heap to 4096

c) Set the properties for the number of JVM log files and file size

1. Select Troubleshooting > Logging and tracing > Server<n> > JVM Logs

2. Set property JVM log files to 100 and set property file size to 10MB


IBM DB2

a) Increase the transaction log file size.

1. Open the db2 command window.

2. Enter the following commands:

db2 update database config for FRSDB using LOGFILSIZ 16384 LOGPRIMARY 40 LOGSECOND 40

db2 deactivate database FRSDB

db2 activate database FRSDB

3. Verify the logfile size with the following command:

db2 get db config for FRSDB | grep -i logfilsiz

The command result is:

Log file size (4KB) (LOGFILSIZ) = 16384

Note: You must restart DB2, if the settings are not applied.


Operating system

a) Set ulimit

1. Set ulimit in /etc/security/limits.conf for root and db2inst1 users as follows:
You may need to reboot the computer when this setting is complete.

db2inst1 soft nofile 65536
db2inst1 hard nofile 65536
root hard nofile 2048
root soft nofile 2048

2. To verify the settings, use the command

ulimit -n

3. Apply the following settings in /etc/sysctl.conf. You may need to reboot the computer when this setting is complete.

# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 4294967296
fs.file-max = 6553600

RELATED INFORMATION
#Best practices for Registry Services performance [http://pic.dhe.ibm.com/infocenter/tivihelp/v3r1/topic/com.ibm.psc.doc_1.1.0.2/rs_original/oslc/web/rs_r_ctr_bp_registry_srvc_perf.html]