Title: IBM How to add custom menu in ClearTeam Explorer - United States

Text:
CTE; context; eclipse; clearcase; CCRC; menu; KCS3 TECHNOTE (FAQ)

QUESTION
 How do you add a custom context menu entry inside IBM Rational ClearTeam Explorer ?
ClearCase Explorer as well as Windows Explorer allow to define customs actions, how to do it with ClearTeam Explorer ? 

ANSWER
ClearTeam Explorer (CTE) is replacing CCRC in ClearCase V8.x As with CCRC, it is actually not possible to customize the context menu directly like it is with ClearCase explorer under MS Windows. Technote 1305422 specify that you cannot customize CCRC context menu (see http://www-01.ibm.com/support/docview.wss?uid=swg21305422 [http://www-01.ibm.com/support/docview.wss?uid=swg21305422] for full information), but at the bottom of the technote there is a statement : 

Note: Since actions are defined in the plugin.xml it is possible to write your own plugins and add objectContributions. Refer to www.eclipse.org [http://www.eclipse.org/] for further details. The very same conclusion is coming in the RFE RATLC00992131 . 

It in fact possible to ADD custom contributions to CCRC context menu, but NOT to customize existing one. This also apply to CTE with some minor modifications. 

In order to add custom entry you need to know the extension point in CTE. The extension point list can be found in the jar file for the respective plugin. As for all Eclipse plugin it's in the plugin.xml file (inside the jar). Example is the CTE IDE one : com.ibm.rational.clearcase.ide.feature_8.0.1.v201508262315 Can be found in C:\Program Files\IBM\RationalSDLC\ClearCase\web\update\plugins as well as in the Eclipse plugins folder where you install CTE. 

The following was made on Windows 7, with Eclipse 4.2.1 and ClearCase/CTE 8.0.1.9 We start a new plugins project in Eclipse. We will create one menu entry and one submenu entry. They will be called from the context menu in CTE (ClearCase perspective). 

You need to define the plugin.xml as below:


<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>

<extension
point="org.eclipse.ui.popupMenus">
<objectContribution
objectClass="com.ibm.rational.clearcase.ui.objects.wvcm.CCControllableResource"
id="CTEExtended.contribution1">
<menu
label="New Submenu"
path="additions"
id="CTEExtended.menu1">
<separator
name="group1">
</separator>
</menu>
<action
label="New Action"
class="CTEExtended.popup.actions.ContextMenuCC"
menubarPath="CTEExtended.menu1/group1"
enablesFor="1"
id="CTEExtended.newAction">
</action>
</objectContribution>
</extension>

</plugin>


This define the plugin with the object contribution and entries points. 

In order to get the element selected when the popup was fired, you will need to use the normal Eclipse way and check on the CCControllableFile/CCControllableFolder for the structuredSelection as below:


private ISelection selection;
public void selectionChanged(IAction action, ISelection selection) {
this.selection = selection;
}
/**
* @see IActionDelegate#run(IAction)
*/
public void run(IAction action) {
if (!selection.isEmpty() && selection instanceof IStructuredSelection) {
StringBuilder str_ActDesc = new StringBuilder();
String elemCCType = "";
String fileCCPath = "";
String dirCCPath = "";
IStructuredSelection structuredSelection = (IStructuredSelection) selection;
Object element = structuredSelection.getFirstElement();
// For files
if (element instanceof CCControllableFile) {
elemCCType ="file";
fileCCPath = ((CCControllableFile) element).getDisplayName();
dirCCPath = ((CCControllableFile) element).getViewRelativePath();
}
// For folders
if (element instanceof CCControllableFolder) {
elemCCType ="folder";
fileCCPath = ((CCControllableFolder) element).getDisplayName();
dirCCPath = ((CCControllableFolder) element).getViewRelativePath();
}
str_ActDesc.append("New Action was executed on a "+elemCCType+" :\n "
+ fileCCPath + "\n Path :" + dirCCPath);
MessageDialog.openInformation(shell, "CTEExtended", str_ActDesc.toString());
}
}


When the plugin is ready, you can package it as any other Eclipse plugin and then install it with the update feature of Eclipse/CTE. 

Checkout the enclosed example. You need CTE installed in Eclipse. This can be extended as needed using the CM API (libraries and documentation are an options when you install ClearCase). Note that such plugins/modifications are NOT supported by IBM. 

 

CTEExtended.zip [/support/docview.wss?uid=swg21967862&aid=2]CTEExtended.zip [/support/docview.wss?uid=swg21967862&aid=1]

CTEExtended.zip [/support/docview.wss?uid=swg21967862&aid=4]CTEExtended.zip [/support/docview.wss?uid=swg21967862&aid=3]