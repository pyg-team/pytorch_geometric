Title: IBM OSET interaction with TCP/IP and uses to which OSET is put - United States

Text:
TCP/IP; Usage and Test TECHNOTE (FAQ)

QUESTION
 This document describes an IODM Domain Name System (DNS) command to "clear" cache, called OSET. Included are details of what occurs when workstations are defined with Protocol 3; what happens if a cache is refreshed; and how OSET interacts with TCP/IP. Also discussed: changes to dynamic host configuration protocol (DHCP) server and the role OSET takes, among other actions, to deal with the changes. Finally, a paragraph addresses how to determine at which count to set the commit frequency with batch store. 

ANSWER
There is an IODM DNS "clear" cache command called OSET. 

For workstations defined with Protocol 3, IODM performs a DNS lookup the first time that the workstation is contacted by IODM. This happens during initialization complete/reinitialization (INITC/INITR) processing. If a "refresh" of the cache is required while IODM is running, the IODM OSET transaction might force another DNS lookup. An example of a required refresh of the cache is when DHCP assigns a new address to a workstation. The OSET transaction causes IODM to "forget" the TCP/IP address that it obtained from the last DNS lookup. When the workstation is next contacted by IODM, for instance during a DISPLAY transaction, IODM will perform a new DNS lookup. IODM stores the new TCP/IP address in cache. 

OSET contains updates to accommodate changes to the DHCP server through the DNSCLEAR. OSET is a manual transaction in the sense that EKCWRSET looks for terminal input. Wholesale DNS (DHCP) changes occur infrequently at an interval of once every 1 to 3 months. In this case, "bounce" the IODM region (using OID1-OID2 OIUP) so that the DNS changes occur over a weekend. In emergencies, DNSCLEAR=ALL is permissible. Essentially, automation is difficult to do because EKCWRSET performs a "RETRIEVE" as opposed to a "RECEIVE". A RETRIEVE is started by a terminal and a code change is necessary to make EKCWRSET perform the RETRIEVE. 

If your experience with batch store is with the commit frequency set too high, set commit to 1. This will not impact the online system. In truth, the enterprise does what is best for its environment, which is why SYNCCNT is an adjustable field. In some cases, the commit count could be too high for the folder application facility (FAF). A very high commit count causes DB2 to hold up more resources, an example of which is rows in FAF tables. In contrast, with a very low commit count, DB2 burns more CPU power to perform the commit. This causes a longer execution time of the batch store job. In either case, the resource problems and DB2 capabilities impact the speed with which DB2 serves the FAF or IODM requests. Determining a good number for the DB2 commit count used by the batch store jobs means you must pick a number on the system and gradually adjust it to fit. 

Refer also to PTF UQ50686, APAR PQ44765, to solve this problem. The APAR explains how to modify EKCIPREG to send a STAT command to the host. The STAT command causes IODM to clear cache for the workstation and to mark the workstation logged off. In addition, the APAR ships a sample BATCH or BAT file that allows the operator to restart IWPM at the same time. Last, the APAR ships a revised copy of EKCWROUT to properly handle the STAT command.