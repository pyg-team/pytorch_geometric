Title: IBM Debugging attolcc1 - ERROR: syntax error near extern - United States

Text:
1268942; Test RealTime; Runtime Analysis; attolcc1; syntax error; near; extern; attol; RTRT TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 This technote shows how to debug the instrumentation error 
syntax error near extern
which occurs when using the instrumentor of IBM速 Rational速 Test RealTime. 

SYMPTOM
You see the following error: 

 
ASN1_Universal.c: Instrumenting.
Failed.
TestRT attolcc1 - ERROR: syntax error near extern [ Directory\STDLIB.H, 191]
TestRT attolcc1 - ERROR: syntax error near extern [ Directory\STDLIB.H, 195]
TestRT attolcc1 - ERROR: syntax error near extern [ Directory\STDLIB.H, 199]
TestRT attolcc1 - FATAL ERROR: syntax error in source file, instrumentation cancelled.




CAUSE
In some cases, you cannot send IBM Rational technical support the .i file since you are on the secured system or are developing secret software.



RESOLVING THE PROBLEM
 


The error "attolcc1 - ERROR: syntax error near extern" says that the source code (or included files) is using some syntax that is not ANSI C compatible. You need to find that syntax and work around it in the TDP.

In the case where you cannot send the corresponding .i files, you need to do the following:

Open the .i file in an editor and find the line equivalent to line 191 in STDLIB.H. To do this you need to search for the "#line" directives that indicate lines in the STDLIB.H file. They normally look like this:

#line 35 "C:\\Program Files\\Microsoft Visual Studio\\VC98\\INCLUDE\\stdlib.h"


This is for Microsoft速 Windows速 but it demonstrates the general format:
#line <line number> <full path to file>

So you search for a "#line" for the file STDLIB.H that is greater than 191, then search backwards to the previous #line for the file STDLIB.H. Then you need to add the difference between the line number of the #line and 191 and move down the file by that amount. 

Example: In the first search you find:


#line 255 "C:\\Program Files\\Microsoft Visual Studio\\VC98\\INCLUDE\\stdlib.h"


Search back and you find:


#line 91 "C:\\Program Files\\Microsoft Visual Studio\\VC98\\INCLUDE\\stdlib.h"


Difference is 191 - 91 = 100 so you have to move 100 lines down in the file. 

You should find something like:

__far extern int toto;

There probably is some non-ANSI syntax (like__far) that needs to be worked around in the TDP. If you send Rational Support the lines surrounding this line (that is, equivalent to lines 180 to 200, this should be possible as it is not in customer code) then Support should be able to tell you what needs to be put in the TDP to work around the syntax.