Title: IBM How to apply the Operational Decision Manager maintenance fix from a command line interface - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 On a system running PureApplication Software 2.0 or later, attempting to apply a fix from the maintenance operation user interface raises an issue. 

SYMPTOM
This known issue applies to IBM Operational Decision Manager Application Pattern 8.5.1 and 8.5.1.1.


RESOLVING THE PROBLEM
You can use the command line interface (CLI) to apply the Operational Decision Manager maintenance fix by following these steps: 

 1. Upload the maintenance fix for PureApplication Server by web interface (Catalog > Emergency Fixes) or by CLI. Record the uploaded fix ID, for example, in the fix URL https:// /dashboard/catalog/fixes/#123, fix ID is 123. 
 2. Prepare the CLI parameters for applying ODM maintenance fixes for the components:

 *  Decision Center: maintenance_param = {"role": "DC_MAINTENANCE", "type": "dc_maintenance", "parameters":{"DC_MAINTENANCE.IFIXES":["https://127.0.0.1:9443/services/ifixes/${fixID}/scriptArchive.zip"]}} 
 * Decision Server: maintenance_param = {"role": "DS_MAINTENANCE", "type": "ds_maintenance", "parameters":{"DS_MAINTENANCE.IFIXES":["https://127.0.0.1:9443/services/ifixes/${fixID}/scriptArchive.zip"]}}
   1. Open a CLI session with PureApplication and get the Operational Decision Manager instance from the CLI: 
 * odm_instance = deployer.virtualapplications.get(<odm_instance_id>)
   1. Call the maintenance operation with odm_instance: 
 * odm_instance.operations.create(maintenance_param)


We also provide a sample script for calling the ODM maintenance operation:  * For PureApplication Service, call it with <deployer_cli_home>/deployer -h <PureApp_host> -u <admin_user> -p <admin_password> -a -f maintenance.py <ODM_instance_ID> <odm_type> <fixID>. 
 * For PureApplication System, call it with <pure_cli_home>/pure -h <PureApp_host> -u <admin_user> -p <admin_password> -a -f maintenance.py <ODM_instance_ID> <odm_type> <fixID>. 

The sample script, maintenance.py, is as follows: 
try: 
import deployer 
except ImportError: 
print "you must run this script in a CLI context" 
import sys 

if len(sys.argv) <4: 
print "you must provide 3 parameters to call odm maintenance operation" 

#instance ID, you can get it from web interface of deployed instance, e.g. d-1afd0c29-5e6e-416a-afaf-18a4adeb776b 
odmInstanceID = sys.argv[1] 
#ODM maintenance type, should only be "dc" or "ds" 
maintenanceType = sys.argv[2] 
#fix ID you get from emergency fix web interface. 
fixID = sys.argv[3] 

maintenance_role = "%s_MAINTENANCE" % maintenanceType.upper() 
maintenance_param = {"role": maintenance_role, "type": maintenance_role.lower(), "parameters":{"%s.IFIXES"%maintenance_role :["https://127.0.0.1:9443/services/ifixes/%s/scriptArchive.zip " % fixID]}} 
odm_instance = deployer.virtualapplications.get(odmInstanceID) 
odm_instance.operations.create(maintenance_param)