Title: IBM Spectrum Protect data deduplication and considerations for the use of SHA-1 - United States

Text:
sha1; secure; hash; algorithm; deduplication TECHNOTE (FAQ)

QUESTION
 According to media reports, an engineered collision was demonstrated for the Secure Hash Algorithm 1 (SHA-1). A collision occurs when two distinct pieces of data hash to the same digest. Does this collision affect data that is deduplicated by using IBM Spectrum Protect? 

ANSWER
IBM Spectrum Protect uses SHA-1 for data deduplication. 

SHA-1 is a cryptographic hash algorithm that produces a message digest of 160 bits or 20 bytes. IBM Spectrum Protect uses SHA-1 message digests for data deduplication, a function that can be performed on the client side or server side. (For details about SHA-1, see the many sources of information on the internet and elsewhere. Those sources also provide details about message digests, cryptography, and related topics.) 

Within IBM Spectrum Protect, SHA-1 is suitable for producing a message digest that describes data in a data deduplication system. IBM Spectrum Protect does not use SHA-1 for security purposes, such as for authentication to the product. IBM Spectrum Protect uses several data attributes to determine the uniqueness of a data extent (sometimes referred to as a chunk) when data is deduplicated. 

Example 

Consider a file that is named mydata.abc. Assume that the file is 760,000 bytes in size. When IBM Spectrum Protect deduplicates the file, the file is initially analyzed and extents are determined. An extent is determined by using a fingerprint algorithm that analyzes patterns in the data to determine where one extent ends and the next one begins. The fingerprint algorithm that IBM Spectrum Protect uses is variable block, meaning that extents are not fixed and uniform in size. One extent might be determined to be 56,000 bytes, while another extent from an analyzed file might be 120,000 bytes. After the extent is identified by the fingerprint algorithm, an SHA-1 message digest is generated to uniquely identify the extent. Finally, IBM Spectrum Protect generates an end-to-end MD5 message digest for the entire file. The digest is stored and used during file retrieval to ensure that the reassembly is correct. 

For purposes of this example, assume that the sample file mydata.abc results in the following extents: 

Extent Start position of extent in file (offset from beginning of file) Length of extent SHA-1 message digest for extent (displayed as a hex value) 1 0 100,000 x'0D6DC1019BF40D8BF3B2408C4C7BD6C104230B77' 2 100,000 73,000 x'19B222AF5EB625E945ED138AC71F268BCE59129F' 3 173,000 119,000 x'8314A1F73053A2B87FA98612C4985EB0A6D036EB' 4 292,000 88,000 x'D5B5012C9777BC4CF8E838953164431320D1BD46' 5 380,000 150,000 x'E7FE4356FBCE1634D4D9B36A64134695D618E0E4' 6 530,000 109,000 x'6082B153F4FAFBF1FF0A7DFA228ED2CFAB51C3B6' 7 639,000 121,000 x'39ECACBE658DE2B1A1F6B7C5CC5400C2F131CCA0' 
A key consideration for the IBM Spectrum Protect data deduplication system is that a given data extent is identified by more than the SHA-1 message digest that is generated for a given extent. In the example, each data extent is addressed or referenced by both the SHA-1 message digest along with the length of the extent. In the table, extent 3 would be uniquely identified by the SHA-1 message digest that was calculated for it along with the length of the extent: x'8314A1F73053A2B87FA98612C4985EB0A6D036EB'
and
119,000 

The normal behavior for IBM Spectrum Protect is to use the SHA-1 message digest along with the extent length to determine duplication of data and subsequently to process deduplication and reference handling. Also note that the deduplication analysis of this file created seven extents with the extents varying in size based on the fingerprint algorithm.

IBM Spectrum Protect also has the ability to detect if the deduplication system incorrectly "links" an extent from one file to another where the attributes (extent length and SHA-1 message digest) match but in fact the data is different. To detect this, IBM Spectrum Protect generates an end-to-end MD5 message digest for the entire file when the file is ingested and the deduplication is performed. Upon reassembly of the data, such as when it is read back by a client, the original MD5 digest is compared to a newly generated one for the data read. If the MD5 digests do not match, there was an issue with one or more of the data extents used to assemble that file. Today, a failure of the MD5 digest reported by IBM Spectrum Protect is typically indicative of a storage failure such as an unrecoverable disk failure. With regards to the SHA-1 collision discussed here, the MD5 end-to-end digest would detect this as well. When data is read by a client (restore, retrieve, or recall), IBM Spectrum Protect generates an end-to-end MD5 digest across the deduplicated extents that are being read from storage and sent to the client. This calculated MD5 digest is compared to the one that was generated and stored at the time that the file was originally stored to the server. If the MD5 digest that is calculated at the time of read does not match the one that is created when the data was stored, the issue will be surfaced as an error message and the IBM Spectrum Protect administrator will have visibility to this issue. In the case of the SHA-1 collision, this would result in the MD5 validation during read to fail. 

Does the SHA-1 collision affect IBM Spectrum Protect data deduplication? 

How does IBM Spectrum Protect use of SHA-1 message digests to support data deduplication relate to the SHA-1 collision as reported in the media? To summarize a few key data points from the announcement of the SHA-1 collision 
(Announcing the first SHA1 collision [https://security.googleblog.com/2017/02/announcing-first-sha1-collision.html]), consider the following: 

 * The SHA-1 collision was demonstrated for the message digest calculated for an entire file. 
 * To generate that collision, researchers expended quintillions of SHA-1 calculations requiring thousands of years of computation time (CPU and follow-on GPU).


To impact the data deduplication that is performed by IBM Spectrum Protect and to create a collision, the steps and actions outlined in the SHA-1 collision mentioned above are required. The SHA-1 collision would require significant additional engineering to result in the following issues:  * Cause a collision for a deduplicated extent. IBM Spectrum Protect uses SHA-1 for deduplicated extents. The SHA-1 collision demonstrated is at the level or scope of an entire file. The SHA-1 collision would have to be engineered with knowledge of deduplicated extent boundaries in order to operate at the level of granularity where IBM Spectrum Protect uses the SHA-1 hash. 
 * Generate targeted SHA-1 collisions for normally occurring data being stored to IBM Spectrum Protect as deduplicated extents where the colliding data will both generate the same SHA-1 and have the same size. 


While the reported SHA-1 collision is significant, and seems to have moved from being theoretical to actual, the chance of the collision occurring is quite small and requires significant effort. In this case, the effort to create the collision for a file is complex and resource intensive. Additional effort is needed to move beyond the file-level collision to something that achieves collisions for deduplicated extents for a given file while also compromising the end-to-end MD5 digest in addition to the SHA-1 hash.