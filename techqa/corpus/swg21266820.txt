Title: IBM TSearchICM C++ tool for query problem determination - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 Is there a C++ sample or tool that I can run when I think that there is a performance problem during my DB2速 Content Manager queries and searches? 

CAUSE
When your DB2 Content Manager queries execute more slowly than you expect, the first thing to do is to identify which component is causing the performance degradation. It could be the application program, the DB2 Content Manager query engine, the document retrieval, the database SQL execution, or the network communication. 
This technical note provides a C++ tool, TSearchICM.cpp and associated header and makefiles, that you can run to see the execution timings of your queries. This tool complements the DB2 Content Manager logs to analyze the problem.

Important: This tool requires the installation of the DB2 Content Manager C++ samples, also referred to as DB2 Information Integrator for Content connector toolkit samples.

The tool accepts many common query options to allow you to simulate the options used by your application, such as the query method, the maximum number of results, document retrieval options, and so on. 


DISCLAIMER: This tool is not officially part of the DB2 Content Manager product. It is a sample that is provided as a convenience to the DB2 Content Manager application developer. This version of TSearchICM was developed specifically for DB2 Content Manager 8.3. The options can change at any time.

TSearchICM:


 * -d/database <DB2 Content Manager database name> 
   default = <SConnectDisconnectICM.DEFAULT_DATABASE> 
 * -u/user <DB2 Content Manager user ID> 
   default = <SConnectDisconnectICM.DEFAULT_USERNAME> 
 * -p/password <DB2 Content Manager user password> 
   default = <SConnectDisconnectICM.DEFAULT_PASSWORD> 
 * -co/connectOptions <Connection options> 
   default = "" 
 * -i/iterations <Number of times to run the query> 
   default = 1 
 * -max/maxResults <Maximum number of results to return>
   default = <DB2 Content Manager default> 
 * -prefetch/prefetchSize <Prefetch block size>
   default = <DB2 Content Manager default> 
 * -prepare/prepareQuery 
   Prepares the query without executing
   default = false (prepares and executes the query)
   Specifying means set to 'true' 
 * -print/printResults 
   Prints the results details
   default = false (prints number of results only)
   Specifying means set to 'true' 
 * -qm/qmethod <Query method> 
   default = execute
   Valid methods: execute evaluate executeCount executeWithCallback 
 * -qs/qstring <XQPE query string in quotes> 
   default = "/NOINDEX" 
 * -qt/qtimeout <Query timeout in milliseconds> 
   default = 0 (no timeout specified)
   Important: qtimeout requires DB2 Content Manager 8.4 or later. 
 * -ro/retrieveOptions <Retrieve options> 
   default = 2
   Common retrieve options (See DKConstant for details)  *  Attributes only: 2 
    *  ID only: 4 
    *  Children: 16 
    *  Item tree: 128 
    *  Latest Version: 256
   
   
 * -h/?/help 
   Displays input parameters and defaults

ANSWER
Steps: 

 1. Download the TSearchICM files to your DB2 Content Manager C++ samples directory: 
    Windows速: %IBMCMROOT%\samples\cpp\icm
    UNIX速: $IBMCMROOT/samples/cpp/icm 
 2. Windows: Open a Windows command prompt window and change to the samples\cpp\icm directory.
    UNIX: Change to the samples/cpp/icm directory. 
 3. If you have not run any of the C++ sample programs in this directory, you should set up your environment at this time. Read the README_SAMPLES_CPP_ICM.txt file for detailed instructions. 
 4. Set up the paths and classpaths by running the following command (use the quotation marks as indicated):
    Windows: "%IBMCMROOT%\bin\cmbenv81.bat" 
    UNIX: ". $IBMCMROOT/bin/cmbenv81.sh" 
 5. Compile the C++ program and its dependencies:
    Windows: nmake -f TSearchICM.mak.nt 
    UNIX: tmk TSearchICM.mak.aix 
 6. Change the directory to the /bin subdirectory to run the C++ program with the help parameter first to see the syntax: 
    bin\TSearchICM -help 
 7. Run the C++ program with your XPATH query string and any other parameters to overwrite the defaults. See the "Hints" section below for suggested parameter values and other important debugging hints.


The C++ program runs the query then displays the results and the execution timings to the console. 
You might want to review the logs and the tool output.with IBM速 Software Support. 


Hints:  * Turn on the connectors DEBUG logging level in %IBMCMROOT%\cmgmt\connectors\cmblogconfig.properties (Windows) and in /home/ibmcmadm/cmgmt/connectors/cmblogconfig.properties (default location for UNIX). Check the DB2 Content Manager Information Center for information about activating connector logging. With the potential for a lot of logging, you should consider increasing your log file size settings. Instead of the default size of 5 MB, increase to 20 MB, for example. 
 * Turn on the library server tracing (at a tracelevel of -15) to see the library server and database processing. 
 * When you are running Client for Windows or your custom C++ application, you might not know the XPATH query string that is generated. Look in the DEBUG level of your connectors dklog.log, and search for "Query String". 
 * To separate the query time from the document (item) retrieval time, specify the ID-only retrieval option, "-retrieveOptions 4". 
 * To get an average query time, specify at least 10 iterations by adding "-iterations 10". 
 * When you specify a retrieve option other than ID-only, you can print out the retrieved information of the item by adding "-printResults". 
 * You can redirect the console output of the C++ program to a file, by appending " > TSearchICM.log".



Examples:  * TSearchICM -qstring "/Journal" -iterations 10 -retrieveOptions 4 > TSearchICM.log 
 * TSearchICM -qstring "/Journal" -retrieveOptions 2 -printResults > TSearchICM.log
   

RELATED INFORMATION
 TSearchICM for Java [http://www.ibm.com/support/docview.wss?rs=86&context=SSRS7Z&context=SSJGN5&context=SSAHQR&q1=tsearchicm&uid=swg21245279&loc=en_US&cs=utf-8&lang=en]


TSearchICM_launch.cpp [/support/docview.wss?uid=swg21266820&aid=2] [/support/docview.wss?uid=swg21266820&aid=1]TSearchICM.mak.nt [/support/docview.wss?uid=swg21266820&aid=4] [/support/docview.wss?uid=swg21266820&aid=3]TSearchICM.mak.aix [/support/docview.wss?uid=swg21266820&aid=6] [/support/docview.wss?uid=swg21266820&aid=5]TSearchICM.cpp [/support/docview.wss?uid=swg21266820&aid=8] [/support/docview.wss?uid=swg21266820&aid=7]TSearchICM.hpp [/support/docview.wss?uid=swg21266820&aid=10] [/support/docview.wss?uid=swg21266820&aid=9]

Cross reference information Segment Product Component Platform Version Edition Enterprise Content Management Content Manager DB2 Information Integrator for Content AIX, Windows 8.3