Title: IBM Understanding and Tuning the Event Manager - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Understanding and Tuning the Event Manager 

RESOLVING THE PROBLEM
With Teamworks 5.0.2, Lombardi introduced a new Event Manager. This document will describe the configuration file and give tips how to configure the Event Manager. Much of this information is still applicable for Teamworks 6.x and WebSphere Lombardi Edition as well. 

The primary function of the Event Manager is to guarantee scheduled execution of code. Note that the Event Manager is not executing the code, but scheduling it with the corresponding Process Server. Any work scheduled by a specific Event Manager is run on the local Process Server. The Event Manager scheduler is used anytime an undercover agent (UCA) is invoked, but is also used for processing business process definitions (BPD) notifications, executing business process definition system lane activities, and executing business process definition timer events - it is not specific to TWEvents or to undercover agents.


All date times in the process database are written by the database and use the database servers time clock. All timer based executions (BPD timers, scheduled UCAs, task due dates are all triggered and alerted by the process server. The time clocks of the Teamworks server and the database need to be in sync or events will not be processed properly. 


To understand the Event Manager, you must first understand queues. Teamworks has two types of queues: Asynchronous (async) and Synchronous (sync). Async queues are executed as soon as possible with no guaranteed order. Sync queues are executed serially. If you have multiple tasks set to run on one sync queue, they will execute one after the other in the order that they were put into the sync queue. The Event Manager treats sync and async queues differently. 

Synch Queues

Each task in a sync queue must be executed in serial. To prevent problems in a cluster, an Event Manager claims ownership of one or more sync queues when it starts up. The ownership is stored in the LSW_UCA_SYNC_QUEUE where QUEUE_OWNER is linked to OWNER_ID in LSW_EM_INSTANCE.This is not a permanent assignment. The LSW_EM_INSTANCE table keeps track of status of all of the event managers. The status is checked every 15 seconds. If the owner of a sync queue is no longer available, another Event Manager takes ownership of that sync queue. 

Asynch Queues

Async tasks are picked up by each Event Manager when there is room in their async queue for more tasks.

Each process server has its own running Event Manager. The Event Manager is configured by each process server's copy of the 80EventManager.xml file: 

process-server\resources\config\system\80EventManager.xml 

Explanation of Event Manager Settings 
All time settings are in milliseconds. 


<enable>true</enable> 

 * 
 * 
 * 


<start-paused>false</start-paused>  * 
 * 
 * Resume All
 * 
 * 
 * 
 * Note:
 * 


<name>machine name</name>  * 
 * 
 * 


<heartbeat-period>15000</heartbeat-period> <heartbeat-expiration>60000</heartbeat-expiration> 

 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * Note
 * 


<loader-long-period>15000</loader-long-period>  * 
 * 


<loader-short-period>2000</loader-short-period>  * 
 * 


<loader-advance-window>60000</loader-advance-window>  * 
 * 


<sync-queue-capacity>10</sync-queue-capacity>  * 
 * 


<async-queue-capacity>10</async-queue-capacity>  * 
 * 


<bpd-queue-capacity>20</bpd-queue-capacity>  * 
 * 


<system-queue-capacity>10</system-queue-capacity>  * 
 * 


<min-thread-pool-size>5</min-thread-pool-size>  * 
 * 


<max-thread-pool-size>50</max-thread-pool-size>  * 
 * 
 * 
 * 
 * 
 * 
 * 
 * Note
 * 


<re-execute-limit>5</re-execute-limit>  * 
 * 


<kick-on-schedule>true</kick-on-schedule>  * 
 * 


<event-retry-interval>5000</event-retry-interval>  * 
 * 


<task-execution-listener>com.lombardisoftware.server.scheduler.DbTaskExecutionListener</task-execution-listener>  * 
 * 
 * Note
 * 


<sync-queue-controller-interval>5000</sync-queue-controller-interval>  * 
 * 


-Removing a stuck task: Because sync queues only advance when a task completes, a poorly designed task can cause a sync queue to stop. If you do need to stop one, you can delete the task from the lsw_em_task table. You can then stop and start the Event Manager from the console to get things moving again. 

General tips: 

 *  The Event Manager is quick and efficient. Usually it is the tasks it is executing that slows it down; not the Event Manager itself. If you want to throttle the Event Manager, do not decrease the thread pool. Instead, decrease the queue capacity. A sync queue can get stuck because it will not advance until the task completes. To help make this less of a problem, create multiple sync queues. You can manage sync queues in the Teamworks console. 

Other notes: All the time stamps used by the Event Manager scheduler - the heartbeat expirations and the task scheduled times - are interpreted relative to the system clock for the database machine. Thus, the scheduler does not require keeping the process server system clocks in sync. Keeping system clocks in sync is a good idea, however, for date-based tracking data, log analysis, and so on.

 



Cross reference information Segment Product Component Platform Version Edition Business Integration WebSphere Lombardi Edition Event Manager Linux, Windows 7.2, 7.1 
HISTORICAL NUMBER
 65 

PRODUCT ALIAS/SYNONYM
 Teamworks TW Lombardi