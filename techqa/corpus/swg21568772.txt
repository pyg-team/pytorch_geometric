Title: IBM Profile creation for a new installation of WebSphere Application Server V6.1 or V7.0 fails during "collectNodeMetadata" task and may result in "partial success" during install - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 This article describes a specific issue where the profile creation process for a new installation of WebSphere Application Server V7.0 fails. In this scenario, the profile creation fails while running the collectNodeMetadata task. If the profile is being created while the product is installed, then the installation will display a "partial success" result. 

SYMPTOM
In this scenario, the profile creation process for WebSphere Application Server V6.1 or V7.0 takes place as part of the product's installation process. The installation log.txt indicates this failure near the bottom of the log:

Running configuration command: bootStrapWCCMFiles, percent complete: 8%
Running configuration command: convertCodepageForProfileBatchFiles, percent complete: 11%
Running configuration command: collectNodeMetadata, percent complete: 13%
Config action failed: collectNodeMetadata - WAS_HOME/profileTemplates/default/actions/collectNodeMetadata.ant
Config action failed: 97SInstallInvokeWSProfile- WAS_HOME/properties/version/nif/config/install/97SInstallInvokeWSProfile.ijc
Current install/uninstall process is successful. Process type is: install
CWUPI0000I: EXITCODE=2 INSTCONFPARTIALSUCCESS


The installation log.txt shows that the installation finished with a "partial success" condition. This means that one of the configuration scripts failed. In this case, the log.txt contains several clues: The install ended with "partial success", and the configuration action that failed was "97SInstallInvokeWSProfile". This particular configuration action handles profile creation during installation of the product. Above that message, we see a clue that the last task that the profile creation ran before encountering the error was the "collectNodeMetadata" task.

A "partial success" can occur for a variety of reasons, so it is typically necessary to examine the error messages to learn more specifics about the problem. The installation log.txt indicates that an error occurred during profile creation, so we should review the profile creation log. This log is located under WAS_HOME/logs/manageprofiles, and it's file name ends in "_create.log".

The profile creation "_create.log" file is sometimes complex to read, but there are a couple key phrases which will show up in the log file in this scenario. This phrase will show up, indicating an error:

Task stopped for: exec - FAILURE

And somewhere slightly above that message, we will see this message:

WAS_HOME/profileTemplates/default/actions/collectNodeMetadata.ant:80: exec returned: 255

This indicates that we need to review the log associated with the "collectNodeMetadata" event. That log is named "createNodeMetadata.log", and it is located under WAS_HOME/logs/manageprofiles/PROFILE_NAME. In this scenario, the log file will have messages similar to the following:


WAS_HOME/profileTemplates/default/actions/scripts/collectNodeMetadata.sh entry
WAS_USER_SCRIPT: WAS_HOME/profiles/AppSrv01/bin/setupCmdLine.sh
PARAM 1: default
PARAM 2:
java.lang.NoClassDefFoundError: org.eclipse.hyades.logging.events.cbe.impl.EventFactoryContext
com.ibm.ejs.ras.Tr.<clinit>(Tr.java:276)
java.lang.J9VMInternals.initializeImpl(Native Method)
...
Caused by: java.lang.ClassNotFoundException: org.eclipse.hyades.logging.events.
cbe.impl.EventFactoryContext
... 30 more
WSVR0703W
com.ibm.ws.runtime.CollectManagedObjectMetadata


The key message is that there was a NoClassDefFoundError exception, and the missing class definition is named "EventFactoryContext".


CAUSE
This occurs when the wrong version of Java is installed onto the product. One way this can occur is in situations where the UpdateInstaller V7.0 installer is unzipped into the same directory as the WebSphere Application Server V6.1 or V7.0 product.

The UpdateInstaller V7.0 installer contains a subdirectory named "JDK". The WebSphere Application Server product also contains a subdirectory named "JDK". The structure of the data in these two "JDK" subdirectories is very similar. They are so similar that the WebSphere Application Server V6.1 installer may appear to function normally when the UpdateInstaller was unzipped on top of it. However, the product is not intended to install this particular version of the JDK, and problems such as in this scenario will occur.


DIAGNOSING THE PROBLEM
Verify that the product installer is using the correct build of Java. You can do this by navigating to the JDK/jre.pak/repository/package.java.jre/java/jre/bin directory of the product installer, and running this command: 


AIX, HP-UX, Linux, and Solaris:
./java -version

Windows:
java.exe -version

Compare the output with the version / build data available in the technote, Verify Java SDK version shipped with IBM WebSphere Application Server fix packs [http://www.ibm.com/support/docview.wss?uid=swg27005002]. Review the version data for "7.0.0.0" or "6.1.0.0", depending on which product you are installing.

Note that if the product is being installed by way of a Custom Installation Package (CIP) created by Installation Factory, then the version information may be different. You will need to know specifically which packages were included in the CIP in order to verify its version.


RESOLVING THE PROBLEM
Obtain a new, unaltered copy of the WebSphere Application Server product installer. Unzip it to an empty directory, and do not unzip other packages on top of it. 


Uninstall the existing product, then reinstall the new, clean copy of the product.

Also, as a side-note, it is usually better to not create a profile during product installation. (You can achieve this by passing the -OPT profileType="none" parameter to the installer on startup, or by modifying that option in the response file.) It is a best practice to create profiles after the product has been updated with fix packs, instead of during the initial product installation.