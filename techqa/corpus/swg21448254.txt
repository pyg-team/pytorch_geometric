Title: IBM Best Practices Guide for using the Batch Exporter and Batch Importer Components - United States

Text:
Batch Importer; Batch Exporter TECHNOTE (FAQ)

QUESTION
 What are the best practices for using the Batch Exporter and Batch Importer components? 

CAUSE
Best Practices Guide for using the Batch Exporter and Batch Importer Components

ANSWER
Introduction 

The Capture Batch Importer and Batch Exporter components can be used to move the contents of a Capture batch between a Capture Repository and a file system. The components are intended for use only within Capture Professional application and not within other Capture applications including custom Capture applications. This document focuses on the best practices when using the Batch Importer and Batch Exporter components.




Batch Exporter
This section explains the best usage for exporting a batch and its contents. The batch exporter process is fairly straightforward the following sections provide additional information to maximize the benefits of the batch exporter functionality. The following explains the general steps for configuring a batch for export. The Batch Exporter component begins with a batch that contains Capture data. The component can either export the entire batches contents or just the images. 

1. Configuring the Destination Folder 

In order to perform the export operations the user needs to configure a destination folder. The destination folder is a folder on a file system. 

2. Overwrite Existing Files 

The “Overwrite Existing Files” option will tell Batch Exporter to overwrite any of the files that exist inside the destination folder. This pertains to files that have the same name. 

3. Export Only Image Objects 

The “Export Only Image Objects” option allows a user to export only the image files to the destination folder. 

4. Delete Batch After Export 

The “Delete Batch After Export” option will delete the batch after it has been exported. This option should only be used after you have thoroughly tested your business processes, deleted batches cannot be retrieved. 

Example 

The following screen shows that the contents of Batch 3 will be exported to the folder called Export on the C drive (C:\Export). 

[/support/docview.wss?uid=swg21448254&aid=1] [/support/docview.wss?uid=swg21448254&aid=1] 

The screen shot above shows a batch named “batch 3” that contains one document called Doc1 with two images in it. The batch was configured to be exported to a folder called “export”. In the last screen, each of the files will be exported inside the subfolders named after the same document names. 

[/support/docview.wss?uid=swg21448254&aid=2] [/support/docview.wss?uid=swg21448254&aid=2] 

Best Practices 

· Do not run Batch Exporter directly on a Settings Collection when this option is enabled because the settings collection will be lost. 

· When a batch contains Event Activator attributes or Event Activator settings those attributes are not properly exported. Additionally, the Batch Importer component may not properly import those types of settings. 

· Attributes that contains certain types of index values such as choice lists may not get exported correctly. 

· Capture Logging should be used to get additional information on issues that may occur during the export process. 

· The destination folder should not be the root node on the file system this is because the Batch Importer component will not be able to import the data and the XML file back into a Capture Repository from the root node of any file system. 

· The Batch Exporter component will not verify that the destination folder exists. Instead it will attempt to create the folder. 

· From a performance perspective, it is recommended that the user should not export to a folder that is more than one or two levels deep. 

· If images inside the batch are stored within several different documents the images and the documents that the images are stored in will be created in the destination folder. This prevents images of the same name that exist within different documents from getting overridden unexpectedly.




Batch Importer
This section explains the best practices for the Batch Importer component. The Batch Importer component reads Capture data that exists on a file system folder and creates new batches on the destination Capture Repository. The Batch Importer setup is fairly easy; the following sections provide additional information to maximize the benefits of the Batch Importer functionality. In order for the Batch Importer component to perform the import operations the data must be properly formatted. The following screen shows a file system folder called Export that contains a tree of sub folders (Batch 3, Doc1). Additional, the attribute.xml file describes the batch that needs to be imported and the PressRel1.tif.xml describes the image PressRel1.tif. 

[/support/docview.wss?uid=swg21448254&aid=3] [/support/docview.wss?uid=swg21448254&aid=3][/support/docview.wss?uid=swg21448254&amp;aid=4] 

1. Selecting Destination Repository Object Node 

The “Destination Repository Object Node” specifies where the Batch Importer component will put the imported data. 

2. Specifying the Source Directory 

This option indicates where the Batch Importer component will retrieve the Capture data. 

3. Delete Files After Import 

This option will remove all the files specified by the Source Directory option. 

Best Practices 

· The Batch Importer component can only import Capture data into a folder node or the root node of a Capture repository. 

· Only data can be imported at the batch level, you cannot import a document or the pages if the import data does not exist within a batch. For example, you cannot import data that only describes a document, into a folder or batch. 

· Batch Importer options are only saved at the batch level. 

· The Batch Importer component can only be executed on a batch. Other Capture objects are not allowed. 

· Batch Importer will fail if the source file system folder does not contain correctly formatted attribute.xml or image xml files. For best results, the xml files used should be the result of running the Batch Exporter component not manually generated or modified. 

· If the attributes.xml file contains Event Activator attributes or Event Activator settings the Batch Importer component may not properly import those types of settings. 

· When batches are created on the destination repository the batches will be auto-name and will not use the name specified in the attribute.xml file 

· Do not specify a large number of batches inside the source directory. 

· Users should not select the root directory as the source directory. Doing so can cause performance issues. 

· The source file system folder should not contain multiple levels of folders and files. A source folder that contains several layers of subfolders will have a performance impact. 

· The “Delete Files After Import” option will not function if the source directory is a root folder. This prevents the Batch Importer component from deleting all files inside the root file system. 

· The Batch Importer component will verify that a settings collection exists on the destination repository before performing the import operation. This includes document class information. The restrictions are more relaxed when importing into a Local Repository. 

· Capture Logging should be used to get additional information on issues that may occur during the export process.