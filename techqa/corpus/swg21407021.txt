Title: IBM manageprofiles script might fail with ClassNotFoundException - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 The manageprofiles script might fail with ClassNotFoundException. The problem might occur while installing WebSphere® Application Server or after Application Server is installed. 

SYMPTOM
The manageprofiles script fails with java.lang.ClassNotFoundException and Application Server profiles (for example, the default Application Server profiles at install time) are not created. 

For example, an exception stack similar to the following might be found in the standard output or in the following file when the failure occurs during an install:



install_root/logs/install/createDefaultProfile.log 
Where install_root is the root directory for your WebSphere Application Server installation. 

java.lang.reflect.InvocationTargetException
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:37)
at java.lang.reflect.Method.invoke (Method.java:599)
at com.ibm.wsspi.bootstrap.WSLauncher.launchMain (WSLauncher.java:213)
at com.ibm.wsspi.bootstrap.WSLauncher.main(WSLauncher.java:93)
at com.ibm.wsspi.bootstrap.WSLauncher.run(WSLauncher.java:74)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run (PlatformActivator.java:78)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher. runApplication(EclipseAppLauncher.java:92)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher. start(EclipseAppLauncher.java:68)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run( EclipseStarter.java:400)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run (EclipseStarter.java:177)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:37)
at java.lang.reflect.Method.invoke(Method.java:599)
at org.eclipse.core.launcher.Main. invokeFramework(Main.java:340)
at org.eclipse.core.launcher.Main. basicRun(Main.java:282)
at org.eclipse.core.launcher.Main. run(Main.java:981)
at com.ibm.wsspi.bootstrap.WSPreLauncher.launchEclipse (WSPreLauncher.java:340)
at com.ibm.wsspi.bootstrap.WSPreLauncher.main (WSPreLauncher.java:110)
Caused by: java.lang.NoClassDefFoundError: org.eclipse.emf.ecore.EFactory
at java.lang.ClassLoader.defineClass (ClassLoader.java:265)
at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader. defineClass(DefaultClassLoader.java:160)
at org.eclipse.osgi.baseadaptor.loader.ClasspathManager. defineClass(ClasspathManager.java:550)
at org.eclipse.osgi.baseadaptor.loader.ClasspathManager. findClassImpl(ClasspathManager.java:520)
at org.eclipse.osgi.baseadaptor.loader.ClasspathManager. findLocalClassImpl(ClasspathManager.java:451)
at org.eclipse.osgi.baseadaptor.loader.ClasspathManager. findLocalClass_LockClassName(ClasspathManager.java:430)
at org.eclipse.osgi.baseadaptor.loader.ClasspathManager. findLocalClass(ClasspathManager.java:417)
at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader. findLocalClass(DefaultClassLoader.java:188)
at org.eclipse.osgi.framework.internal.core.BundleLoader. findLocalClass(BundleLoader.java:334)
at org.eclipse.osgi.framework.internal.core.BundleLoader. findClass(BundleLoader.java:386)
at org.eclipse.osgi.framework.internal.core.BundleLoader. findClass(BundleLoader.java:347)
at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader. loadClass(DefaultClassLoader.java:83)
at java.lang.ClassLoader.loadClass(ClassLoader.java:609)
at java.lang.J9VMInternals.verifyImpl(Native Method)
at java.lang.J9VMInternals.verify(J9VMInternals.java:72)
at java.lang.J9VMInternals.verify(J9VMInternals.java:70)
at java.lang.J9VMInternals.initialize(J9VMInternals.java:134)
at org.eclipse.hyades.logging.events.cbe.impl.EventFactoryContext. <init>(EventFactoryContext.java:82)
at org.eclipse.hyades.logging.events.cbe.impl.EventFactoryContext. getInstance(EventFactoryContext.java:122)
at com.ibm.ejs.ras.Tr.<clinit>(Tr.java:301)
at java.lang.J9VMInternals.initializeImpl(Native Method)
at java.lang.J9VMInternals.initialize(J9VMInternals.java:200)
at com.ibm.ISecurityUtilityImpl.PasswordCipherUtil.<clinit> (PasswordCipherUtil.java:65)
at java.lang.J9VMInternals.initializeImpl(Native Method)
at java.lang.J9VMInternals.initialize(J9VMInternals.java:200)
at com.ibm.ISecurityUtilityImpl.PasswordUtil.<clinit> (PasswordUtil.java:86)
at java.lang.J9VMInternals.initializeImpl(Native Method)
at java.lang.J9VMInternals.initialize (J9VMInternals.java:200)
at com.ibm.ws.profile.utils.WSProfileCryptoImpl. isEncrypted(WSProfileCryptoImpl.java:238)
at com.ibm.ws.profile.utils.WSProfileCryptoImpl. getDecryptedMap(WSProfileCryptoImpl.java:80)
at com.ibm.ws.profile.datastore.WSProfileDataStore. setIncomingArgs(WSProfileDataStore.java:137)
at com.ibm.ws.profile.datastore.WSProfileDataStore. setIncomingArgs(WSProfileDataStore.java:111)
at com.ibm.wsspi.profile.WSProfileCLI.initializeDataStore (WSProfileCLI.java:159)
at com.ibm.wsspi.profile.WSProfileCLI.invokeWSProfile (WSProfileCLI.java:182)
at com.ibm.wsspi.profile.WSProfileCLI.main (WSProfileCLI.java:61)
... 21 more
Caused by: java.lang.ClassNotFoundException: org.eclipse.emf.ecore.EFactory
at java.lang.ClassNotFoundException.<init> (ClassNotFoundException.java:76)
at org.eclipse.osgi.framework.internal.core.BundleLoader. findClass(BundleLoader.java:351)
at org.eclipse.osgi.framework.internal.core.BundleLoader. findClass(BundleLoader.java:347)
at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader. loadClass(DefaultClassLoader.java:83)
at java.lang.ClassLoader.loadClass(ClassLoader.java:609)
at java.lang.ClassLoader.defineClassImpl(Native Method)
... 56 more 

CAUSE
The user profile, QEJBSVR, does not have sufficient authority to the /temp directory or subdirectories when the manageprofiles script is invoked.



RESOLVING THE PROBLEM
To avoid the problem, grant the QEJBSVR user profile the necessary permissions prior to installing Application Server and prior to running the manageprofiles script. Invoke the IBM® i CHGAUT command from a system command line to grant the necessary permissions as follows: 

 * If /temp exists: 
   
   CHGAUT OBJ('/temp') USER(QEJBSVR) DTAAUT(*X) 
   
 * If /temp/osgi_instance_location exists:
   
   CHGAUT OBJ('/temp/osgi_instance_location') USER(QEJBSVR) DTAAUT(*RWX) OBJAUT(*ALL) SUBTREE(*ALL) 
   Note: The previous line was wrapped for display purposes 
   
 * If /temp does not already exist, then /temp and subdirectories will be created and permissions set such that QEJBSVR has adequate authorities.


To correct the problem. invoke the CHGAUT command as above to grant the necessary permissions. Next, if the failure occurred after the product was installed, rerun the manageprofiles script. Otherwise, if the failure occurred during an install, do the following to complete the install and to create the default profiles:  1. Backup the runcmt script (<APP_SERVER_ROOT>/bin/runcmt) to another file.
    
    
 2. Edit <APP_SERVER_ROOT>/bin/runcmt, and change a few variables to match the lines below. Remove the last line if it exists (the one that is commented out). The last line has been wrapped for display purposes:
    
    -DWS_CMT_LOG_HOME=${WAS_HOME}/logs/cmt \
    -DWS_CMT_LOG_NAME=installconfig1.log \ 
    .
    .
    .
    -DWS_CMT_CONF_DIR=${WAS_HOME}/properties/version/nif/config/install\
    #-DWS_CMT_ACTION_REGISTRY="${WAS_HOME}/properties/version/nif/update/config/install/actionRegistry.xml" \ 
    
 3. From QShell invoke:
    
    <APP_SERVER_ROOT>/bin/runcmt