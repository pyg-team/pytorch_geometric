Title: IBM 'Element Structure form encountered but not supported' error in SystemOut.log - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 The XSLT map throws an exception org.xml.sax.SAXException. However, it seems that the data still gets processed and mapped. 

CAUSE
Error message (SystemOut.log): 
[8/14/09 15:58:39:884 CEST] 00003ee6 DLWSCAToSMOBo E Element Structure
form encountered but not supported 
[8/14/09 15:58:39:884 CEST] 00003ee6 XSLTMediation E CWSXM3105E: 
Exception during transformation. This has been reported by the following
entity: 



The source of this problem concerns lazy parsing, which was a performance enhancement introduced in V6.0.2.0. Internally, where possible we do not parse the inbound messages into the Service Message Object (SMO) structure, as in some cases this step is unnecessary as many Mediation Flow Component primitives do not need to operate on the SMO to correctly process the inbound messages. 

However, the XSLT primitive requires an XML representation of the SMO in order to operate upon. In this case, some wrappers are used to parse the Service Data Object (SDO) into an XML form suitable for XSL transformation, and these wrappers are called by the XSLTC engine. 

It turns out that in some cases, it is not possible to for the wrappers to convert the SDOs into a XML form, due to missing datatype information. When this occurs, the mediation flow component falls back to the non-lazy-parsed mode of operation, where the SMO object is created at the module level, where all the interface data is available. This is the problem which exists here, they are using an operation which uses a simpleType type, that is a string. 

If we look at the interface being used in the module "BOCreator", we see that it makes use of an interface called "FlatInterface", which contains the operation "convertToXXX" which is of the string simpleType. 

<xsd:element name="convertToXXX"> 
<xsd:complexType> 
<xsd:sequence> 
<xsd:element name="flatRecord" nillable="true" type="xsd:string"/> 
</xsd:sequence> 
</xsd:complexType> 
</xsd:element> 

When the XSLT lazy-parsing wrappers first attempt to convert the SDO which contains this data type into the XML representation, they fail, and the XSLTC engine writes the error message to systemErr: 

ERROR: 'Element Structure form encountered but not supported' 

The mediation flow component then falls back to the non-lazy-parsed approach, which processes correctly.


RESOLVING THE PROBLEM
The good news is that there is a simple solution which can be used to suppress this error message, and that is to force the lazy parsing to be initially off for this mediation flow component. This is very simply done by selecting the "Validate input" tickbox on the XSLT primitive. The procedure to do this is as follows: 

(1) Open the "BOCreator" module 

(2) Open the "BOMediation" mediation flow component (by double clicking on it in the assembly diagram) 

(3) Select the "BOXSLT" primitive, and in the Properties tab, select the Details view. 

(4) Tick the "Validate input" checkbox, rebuild and redeploy the application. 

This only needs to be done on this single mediation flow component, all of the others use Business Objects as their operation data types so do not encounter the problem. 

Alternatively (and requiring more work), the customer could wrapper their "convertToXXX" operation such that it contains a Business Object which has a single string element. This requires slightly more work, as the BPC module will need to be reworked to output the appropriate wrapper datatype. 

Unfortunately, this problem is not easy to formally resolve, primarily as the XSLTC engine is outputting the message and not WebSphere Enterprise Service Bus directly.