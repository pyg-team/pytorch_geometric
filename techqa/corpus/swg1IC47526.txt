Title: IBM IC47526: ERROR WHEN USING ATTOLCC: ./ENV_ATTOLCC.PL DID NOT RETURN A TRUE VALUE AT .../LIB/SCRIPTS/TDPBATCHCC.PL LINE 55. - United States

Text:
 SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS UNREPRODUCIBLE.
    
   
   

ERROR DESCRIPTION
 *  ERROR:
   
   npdcomp02 192 % /apps/vendor/bin/attolcc -keep -verbose -mempro
   -dumpincoming=processMessages -nostop -force_tdp_cc --
   /usr/vob/vlr_tools/tools/compilers/gcc-2.8.1/SOL/bin/g++ -c
   testprogram.cc
   /usr/vob/vlr_tools/tools/compilers/gcc-2.8.1/SOL/bin/g++
   testprogram.cc -E > /tmp/_atc_52_20089.i
   fixlines /tmp/_atc_52_20089.i /tmp/_atc_51_20089.i
   rm /tmp/_atc_52_20089.i
   cp /tmp/_atc_51_20089.i testprogram.i
   TestRT attolcc - INFO: testprogram.i is the kept preprocessed
   file of testprogram.cc
   attolccp /tmp/_atc_51_20089.i /tmp/_atc_53_20089.C atl.hpp
   atl.opp -keep -mempro -dumpincoming=processMessages
   -COMMENT=Preprocessing command:
   /usr/vob/vlr_tools/tools/compilers/gcc-2.8.1/SOL/bin/g++
   testprogram.cc -E>tmp-file
   TestRT attolccp - INFO: testprogram.cc.aug is the kept
   instrumented file of testprogram.cc
   rm /tmp/_atc_51_20089.i
   /usr/vob/vlr_tools/tools/compilers/gcc-2.8.1/SOL/bin/g++
   /tmp/_atc_53_20089.C -c -o testprogram.o
   rm /tmp/_atc_53_20089.C
   /apps/vendor/testrealtime_2003.06.13/releases/TestRealTime.2003.
   06.13/bin/sun4/sunOS5/perl
   -I/apps/vendor/testrealtime_2003.06.13/releases/TestRealTime.200
   3.06.13/lib/perl
   /apps/vendor/testrealtime_2003.06.13/releases/TestRealTime.2003.
   06.13/lib/scripts/TDPBatchCC.pl ./env_attolcc.pl
   ./env_attolcc.pl did not return a true value at
   /apps/vendor/testrealtime_2003.06.13/releases/TestRealTime.2003.
   06.13/lib/scripts/TDPBatchCC.pl line 55.
   TestRT attolcc - The preceding command-line caused an error
   TestRT attolcc csolgnu - ERROR: Error during Target Deployment
   Port library compilation
   TestRT attolcc csolgnu - INFO: Launching standard compilation
   
   
   
   FROM SIMON:
   
   I have reproduced the problem and have talked to the developer.
   The problem is two fold, but first some background on the
   pragmas being used The "#pragama interface" and "#pragma
   implementation" are used to reduce the size of the object files
   (the final executable remains the same size) by putting the out
   of line versions of inline functions in one object file instead
   of having multiple copies spread across several object files
   (the linker will eliminate duplicates hence the executable size
   is not affectd by these options). So in .h files you put a
   "#pragma interface" and the out of line versions of inline
   functions in that include files will only be generated in the
   source file that has a '#pragma implementation "<header file
   name>"' or in the file that has the same basename and has a
   "#pragma implementation" in it. Now the source file that has the
   "#pragma implementation" this pragma has to be the first
   statement (excluding comments and preprocessor macros) in the
   file being compiled. This creates problems when instrumenting
   because we insert declarations of variables at the beginning of
   the file. So we have to displace the "#pragma implementation"
   before our declarations for it to have its effect. This is done
   by putting in the TDP the pragma
   
   #pragma attol as_implementation implementation
   
   This, when it sees a "#pragma implementation" or "#pragma
   implementation <header file>" will generate at the beginning of
   the file a "#pragma implementation <header file>". NOTE that the
   header file is filled in even if the original #pragma did not
   specify a file. This is because we change the basename of the
   file (example "toto.cc" wil become "toto_aug.cc" when
   instrumented and so the pragma will apply to the file
   "toto_aug.h" which does not exist. Thus we generate "#pragma
   implementation toto.h". This leads to the first problem, their
   include files have the extension ".hh" whereas we generate a
   ".h" extension, this is because when the preprocessed file is
   parsed we can't know the extension of the include file it could
   be "toto.h", "toto.hpp", "toto.cc" or even "toto.abc", therefore
   we use the common default ".h" extension. If the user write
   '#pragma implementation "toto.hh"' then of course we generate
   the same fileneme. Now for the second problem we generate this
   displaced "#pragma implementation" like this:
   
   #define _ATL_IMPLEMENTATION #pragma implementation
   _ATL_IMPLEMENTATION "testprogram.hh"
   #undef _ATL_IMPLEMENTATION
   
   unfortunately some GNU versions, notably the 3.2 as that is the
   version I tested with, don't look at the "pragma" when it is a
   macro. Only this works:
   
   #define _ATL_IMPLEMENTATION #pragma implementation
   #pragma implementation "testprogram.hh"
   #undef _ATL_IMPLEMENTATION
   
   I suggest you open a defect for this and I'll discuss with the
   development the best way to fix this.
   
   
    
   
   

LOCAL FIX
 *  unfortunately some GNU versions, notably the 3.2 as that is the
   version I tested with, don't look at the "pragma" when it is a
   macro. Only this works:
   
   #define _ATL_IMPLEMENTATION #pragma implementation
   #pragma implementation "testprogram.hh"
   #undef _ATL_IMPLEMENTATION
   
   
    
   
   

PROBLEM SUMMARY
 *  ****************************************************************
   * USERS AFFECTED: na                                           *
   ****************************************************************
   * PROBLEM DESCRIPTION: This problem could not be reproduced    *
   ****************************************************************
   * RECOMMENDATION: NONE                                         *
   ****************************************************************
   See Problem Description
   
   
    
   
   

PROBLEM CONCLUSION

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   IC47526
   
   
 * REPORTED COMPONENT NAME
   RATL TEST AGNT
   
   
 * REPORTED COMPONENT ID
   5724F5600
   
   
 * REPORTED RELEASE
   ALL
   
   
 * STATUS
   CLOSED UR5
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2005-10-05
   
   
 * CLOSED DATE
   2006-04-25
   
   
 * LAST MODIFIED DATE
   2006-04-25
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION

APPLICABLE COMPONENT LEVELS
 * RALL PSY
   UP