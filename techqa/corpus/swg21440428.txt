Title: IBM Unable to add large documents using the FileNet Content Engine .NET API - United States

Text:
add; upload; .NET; WSE; timeout TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Several problems have been reported which prevented a .NET API client from uploading large files. This technote documents patches which resolve those problems. 

RESOLVING THE PROBLEM
The following is a summary of the fixes that should be applied before attempting to upload large files using the FileNet Content Engine .NET API.
1. To the .NET API client machine, apply the Microsoft WSE 3.0 fix described in Microsoft Knowledge Base article: http://support.microsoft.com/kb/943508 [http://support.microsoft.com/kb/943508]. 

By default, FileNet Content Engine .NET API clients such as Enterprise Manager connect to the Content Engine 4.x server using an MTOM endpoint. In previous releases of WSE, MTOM attachments were completely loaded into memory before uploading. The uploading of content was therefore limited by the amount of available memory on the machine where the client was running. The WSE 3.0 fix introduces streaming in chunks from the supplied content stream, thereby resolving the high memory issues that previously arose when attempting to add large documents. 

Example of the error encountered using Enterprise Manager:
An unexpected exception was detected. Exception of type 'System.OutOfMemoryException' was thrown.

Some users have also reported the following error:
A network error occurred when issuing a web service request.

The document size which triggered this error varied between client workstations, but was typically around 300MB and higher.

2. Apply the latest Content Engine patches to the client and server.

A .NET API timeout which existed in earlier releases of Content Engine 4.x would cause the upload of large files to fail with a network or socket error.

Example of the error encountered using Enterprise Manager:
A network error occurred when issuing a web service request.

The document size which triggered this error varied depending on upload speed at the site, but was typically around 2GB and higher. The hard-coded timeout was 5 minutes (300 seconds) in the .NET API. 

The hard-coded timeout was removed from the .NET API. As a result of this change, the behavior of the .NET API is now consistent with 3.x over DCOM and the 4.x Java API.

This change was included in the P8CE-4.0.1-002 fix pack and P8CE-4.5.0-000 and higher releases.

The fixpack must be installed on the .NET API client as well as the server. 

3. Apply the WebLogic application server patch to support the WSE 3.0 fix

A WebLogic patch is required in order for .NET API clients with the Microsoft WSE 3.0 patch connecting to a WebLogic based Content Engine to function correctly.

After applying the WSE fix to an Enterprise Manager client connecting to a WebLogic based Content Engine, the following error occurred attempting to login:
java.lang.NullPointerException: 
at weblogic.utils.http.HttpChunkInputStream.skip(HttpChunkInputStream.java:199) 
at weblogic.utils.http.HttpChunkInputStream.skipAllChunk(HttpChunkInputStream.java:371) 
at weblogic.servlet.internal.ServletInputStreamImpl.ensureChunkedConsumed(ServletInputStreamImpl.java:30) 
at weblogic.servlet.internal.ServletRequestImpl.reset(ServletRequestImpl.java:164) 
at weblogic.servlet.internal.MuxableSocketHTTP.requeue(MuxableSocketHTTP.java:193) 

The above error has also been reproduced using a .NET API custom application to add documents.

A fix was provided by Oracle BEA WebLogic support. Refer to Oracle Knowledge Base article 1055128.1 for details on obtaining and installing the fix.

This problem only applies to WebLogic application servers.