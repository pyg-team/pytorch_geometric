Title: IBM Analyzing and Detecting Performance Bottlenecks Using the Windows NT PERFMON Utility - United States

Text:
perf mon; troubleshooting; troubleshoot; Domino Server; Server; Performance PRODUCT DOCUMENTATION

ABSTRACT
 The Windows NT Performance Monitor (PerfMon) is helpful in determining bottlenecks or performance problems in memory, disk space and I/O processor, and networks. This document describes what information can be collected using the PerfMon utility to try to determine the performance bottleneck. Performance Monitor's Baseline Objects The following are PerfMon baseline objects that are useful in collecting statistics for Performance analysis: Device Object Primary Counter
CPU Processor % of process 

CONTENT
The Windows NT Performance Monitor (PerfMon) is helpful in determining bottlenecks or performance problems in memory, disk space and I/O processor, and networks. 

This document describes what information can be collected using the PerfMon utility to try to determine the performance bottleneck.

Performance Monitor's Baseline Objects

The following are PerfMon baseline objects that are useful in collecting statistics for Performance analysis:



Device Object Primary Counter CPU Processor % of processor time MEMORY Memory Page/sec DISK Logical Disk Avg. disk queue length NETWORK Network Segment % of network utilization 

What Can Cause Poor System Performance? 
 * Hardware Failure 
 * CPU-bound applications 
 * Lack of Memory 
 * Too many threads running 
 * Disk I/O at the limit 
 * Network utilization at 100 % 
 * Memory leak in application



Memory Performance 

Memory shortage is the most common cause of performance problems. Problems occur when Notes or OS memory requirements exceed physical memory. When memory is in short supply, the system begins to page. It is important to note that Virtual Memory Manager uses virtual memory, so memory performance is tied in part to disk performance. 


Typical PerfMon Indicators of a Memory Bottleneck 

Counter Nominal Danger Value Problem/Action Pages/sec 12-16 sustained (not instantaneous) Disk thrashing occurring - more memory needed # of pages/sec increases while available bytes is not Application is doing lots of disk I/O Paging out to disk, but not getting anywhere - some other process is paging out to disk
Allocate more memory to disk caching Size of the page file is > RAM + 12MB Time is spent growing the file Add more RAM; May also be an indication of a memory problem Available bytes Consistently below 4MB RAM Low on physical memory; Add more 
RAM Committed bytes Greater than physical memory More RAM may be needed Committed bytes Approaches commit limit Page file has already grown to maximum - too much paging occurring (Input pages/sec) / (page faults/sec) = % of hard page faults 
 * On chart, if lines intersect, this is an indication of a hard page fault 
 * Space between lines on chart indicate soft page faults 
 * If % of hard page faults > 50% = memory shortage or a memory leak 


Page Reads/sec 
 * Indicates how often the disk is read to satisfy page faults 
 * On Perform chart, if page reads/sec and pages input/sec intersect

One disk read per page fault indicates random processes  * If multiple pages per read, then a single process is causing excessive page faults 
 * It is hard page faults that affect performance



Identifying Memory Leaks 

Page faults indicate memory issues, not explanations. Memory shortage may require additional physical memory or may be the result of a single application or process erroneously using its memory allocations. 

A memory leak occurs when an application obtains memory and does not return it. User applications cause OS page pool leaks (not Notes Page Pools). Services and OS cause nonpage pool leaks. 

Chart page faults for all processes. If they are about the same, memory is generally lacking. If one process stands out (excessive page faults) it may have a memory leak. 


PerfMon Indicators of a Memory Bottleneck 


Counter Nominal Danger Value Problem/Action MEMORY: Pool Nonpaged Bytes  * > 10% 

 * Services, Operating System or Drivers; 
   Nonpaged bytes will slowly increase over time if there is a leak 

MEMORY: Pool Page Bytes [/support/docview.wss?uid=swg27002840&amp;aid=1]  * Application memory leaks are more aggressive and occur over time; Excessive paging will be evident 




PerfMon Indicators to Isolate CPU Problems 

Counter Nominal Danger Value Problem/Action % Processor Time At or near 100 Processor may be bottleneck Interrupts/sec > 1000 Compare to System Calls; If Interrupts/sec > System calls/sec = hardware problem System calls/sec More interrupts than system calls If Systems calls/sec > Interrupts/sec = Application problem Avg. Processor Queue Length > 2 Strong indication of a bottleneck; CPU can't process requests fast enough; Requests backing up in the queue and threads are waiting to execute 
When the Processor Queue Length is greater than 2, this is an indication of a CPU Bottleneck even when the CPU is not at 100%. The Queue Length indicates the number of threads waiting. Once this situation is indicated, the next task is to identify what process is the bottleneck. 


PerfMon Indicators to Isolate Disk Problems 

Counter Nominal Danger Value Problem/Action Percent Disk time > 67% Physical Disk may be the problem Current disk queue length > 2 (sustained-over time) Disk congestion 100*(Memory:Pages/sec * PhysicalDisk:AvgDiskSec/Transfer 12 - 16% This is an indication of excessive paging Logical Disk: Avg Disk Bytes/Read Most disk activity is reads. This counter represents the avg. # of bytes transferred from disk during READ operations. Logical Disk: Avg Disk sec/Read [/support/docview.wss?uid=swg27002840&amp;aid=1] How many seconds is takes on average to retrieve the data. Logical Disk: Disk Read Bytes/sec [/support/docview.wss?uid=swg27002840&amp;aid=1] How many bytes are read each second. This represents the rate that bytes are transferred from disk during READ operations (Disk Throughput) Disk reads/sec [/support/docview.wss?uid=swg27002840&amp;aid=1] How many reads (I/O operations) per second, or rate of read operations on disk. System: %Total Processor Time [/support/docview.wss?uid=swg27002840&amp;aid=1] Disk I/O will also affect processor performance. Monitor these counters as well. System: %Total Interrupt Time [/support/docview.wss?uid=swg27002840&amp;aid=1] " " " " Memory: Page Reads/sec / Disk Reads/sec [/support/docview.wss?uid=swg27002840&amp;aid=1] Remember that memory has a relationship to disk. Use this average to determine the percentage of reads attributed to memory paging. 
PerfMon Indicators to Isolate NETWORK Problems 


The Network Monitor can be activated from within the Windows NT Performance Monitor. You must install Network Monitor which will add extended objects for Network to the Performance Monitor database. PerfMon can be used in conjunction with Network Monitor to diagnose and troubleshoot network problems. Objects such as Total Bytes Received per Second, and Percentage of Network Utilization can be tracked. 

Using PERFMON Alert, check for % network bandwidth utilization over 60 percent. 

Counter Nominal Danger Value Problem/Action Network errors/sec >3 Broadcast storm; heavy network congestion or SMB requests are timing out-increase SessTimeout in Registry 

Related Documents: 

Domino Server Fails Using the NT Performance Monitor Tool from a Remote Workstation 
Document #: 172380