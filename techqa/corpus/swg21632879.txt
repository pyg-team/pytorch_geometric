Title: IBM Considerations using IBM i FTP - United States

Text:
 TECHNOTE (FAQ)

QUESTION
What "Ease of Use" aspects should I be aware of using IBM i's FTP when transferring data 

CAUSE
Barriers to success exist, modifying options can eliminate them.

ANSWER
Account for Firewalls: 

FTP on IBM i is a Passive mode FTP Client when transferring something directly to/from the IBM i Platform. By FTP Specification, sessions only occurs over TCP not UDP communications. 

As in all FTP protocol there is a Command Channel and a Data Channel involved to provide the file transfer process. Port 21 is the command port by Architectural definition. To start the connection to setup the characteristics of the FTP session, ie the source IP Address requests the destination IP Address to connect on its port 21. The Firewall must be configured to allow this source IP/local arbitrary port number to connect to destination IP Address/port 21. As this is passive FTP, the port for data is not port 20 (as it is in Active FTP) but an arbitrary high number port that the server returns back to the FTP Client (in response to the PASV command the client sends to the server) for the FTP Client to use in connecting and sending data over. You have to ensure the firewall is not filtering/blocking either flow. 

 An illustration of a Greenscreen will help:
File Transfer Protocol 

Previous FTP subcommands and messages: 
> bin 
200 Type set to I. 
> cd /toibm/os400 
250 CWD command successful. 
> pwd 
257 "/toibm/os400" is current directory. 
> lcd SPT 
Local working directory is SPT 
> put server12 
229 Entering Passive Mode (|||65456|) 
425 Can't open data connection. 
> put server12 
229 Entering Passive Mode (|||65457|) 
150 Opening BINARY mode data connection for server12. 
Unable to send data to server. 
No response from remote host; all connections closed. 
Enter an FTP subcommand. 
===> 

 

dissecting the parts - 

In order to sign-in to a session, port 21 must be open otherwise you would never get a response back from ftp RMTSYS(FQHN) asking for a sign-on ID and then password. The FTP Command session is now open at this point ready to accept FTP commands 

When the command to transfer data (put server12) is entered we see a response back from the server passive mode and use port 65456 which reports FTP Protocol Error 425 " Can't open data connection". This is likely Firewall packet filtering disallowing the command on the FTP Control Session. 

We then see another data transfer command attempt being placed, obtain a new port to use (65457) and an actual 
TCP Session initiation attempt to establish the data session which fails with errors:
Unable to send data to server. 
No response from remote host; all connections closed. 

This is caused by the Firewall port being blocked. 

At this point resolution can only happen by engaging the Person responsible for managing the Network/Firewall to investigate and make corrections there to now allow the sessions and not filters the packets. As most Network/Firewall appliances are sophisticated devices they have monitor/logging capability which should simplify verification as errors represent a potential network security threat. Changing the configuration here will allow the FTP sessions to be supported and go thru. 

 

Account for Time outs: 

When dealing with save files (SAVF) they can be large in size ( multi-Gigabytes) so you have to ensure you account for Data link speed and size to set your time outs to accommodate the exchange. 

The default FTP time outs are : 

 300 seconds for inactivity 

 420 seconds for a transfer to complete 

You can invoke the session override by using this command line parameter as its limited in scope to the duration of this session only 

by entering it on the FTP command line: 

 "QUOTE TIME <inactivity timeout value> <transfer timeout value>" ensuring you use a large enough value for both. As you can do this on the fly ad hoc and not have to adjust/reset the FTP Attributes its less disruptive. Suggest you use 3 hours so 10800 as its in seconds. 

EXAMPLE: 

 > QUOTE TIME 10800 10800 

 

Some context: 

Actual Transfer rate Data Size Time to Transfer 

 100 Kbytes/sec 1 Gigabyte 175 minutes 

 500 Kbytes/sec 1 Gigabyte 35 minutes 

1000 Kbytes/sec 1 Gigabyte 18 minutes 

1000 Kbytes/sec 10 Gigabyte 180 minutes (3 Hrs) 

 

 

 

 

Account for File Type Differences and Allow Overwrite: 

When pulling save files with the IBM i FTP you must first create outside of FTP a SAVF by name in the local IBM i which you will use to house the data being downloaded - CRTSAVF (library-name/file-name) so its easiest to use the same name as your going to pull. Without this step only a physical file is created and objects can not be restored from it which is the point of using a save file. 

After this is done and when in the FTP session, modify the FTP Data Command by post pending the option "(Replace" . So this would go at the end of the GET (or PUT) command allowing the overwrite of the created save file name. 

FOR EXAMPLE: 

>get source_file_name destination_save_file_name (Replace 

 

The transfer should now complete and you can proceed. 

(Note - This option works with either namefmt 0 or 1)