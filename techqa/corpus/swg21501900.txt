Title: IBM Unable to log on to FileNet WorkplaceXT receive an AE SecurityCheckFilter error - United States

Text:
AE SecurityCheckFilter; JSSE; unlimited strength TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Unable to log on to FileNet WorkplaceXT - AE SecurityCheckFilter error 

SYMPTOM
When attempting to log on to FileNet WorkplaceXT deployed on an IBM WebSphere Application Server, the following error is displayed : 

Exception Message: [Filter AE SecurityCheckFilter]: filter is unavailable. 
Filter AE SecurityCheckFilter: filter is unavailable. 


DIAGNOSING THE PROBLEM
SystemOut.log may contain the following exception : 


Problem initializing encryption/decryption with keyId abcd1234, size 256 bits. java.home=<<WAS_home>>\AppServer\java\jre. Cause: java.security.InvalidKeyException: Illegal key size or default parameters
com.filenet.wcm.api.EncryptionException: Problem initializing encryption/decryption with keyId abcd1234, size 256 bits. java.home=<<WAS_home>>\AppServer\java\jre. Cause: java.security.InvalidKeyException: Illegal key size or default parameters
at com.filenet.wcm.api.impl.CryptoHelper.getCipher(CryptoHelper.java:93)
at com.filenet.wcm.api.impl.CryptoHelper.doEncryptOrDecrypt(CryptoHelper.java:104)
at com.filenet.wcm.api.impl.SessionImpl.getTokenSymmetric(SessionImpl.java:771)
at com.filenet.wcm.api.impl.SessionImpl.getToken(SessionImpl.java:741)
at com.filenet.ae.toolkit.server.util.credentials.UserTokenUtil.getUserToken(UserTokenUtil.java:131)
at com.filenet.ae.toolkit.server.servlet.filter.SecurityCheckFilter.doFilter(SecurityCheckFilter.java:51)
....



RESOLVING THE PROBLEM
This behavior occurs if Workplace XT is configured to use Maximum strength keys (>128bit) during installation. In this case, the JRE used by the J2EE Application server, for example <<WAS_home>>\AppServer\java\jre should contain unlimited strength policy files, otherwise it will be unable to encrypt / decrypt user tokens. 

 

 * One option is to install the JSSE unlimited strength jar files for the JRE used by the J2EE Application Server. For IBM JREs, more info can be found at 
   
   https://www.ibm.com/developerworks/java/jdk/security/ [https://www.ibm.com/developerworks/java/jdk/security/] 
   
   
 * Another option is to regenerate the encryption keys using 128bit encryption which doesn't require the unlimited strength policy .jar files. Please refer to the P8 Infocenter for usage information on the com.filenet.wcm.api.util.MakeCryptoKeys utility.