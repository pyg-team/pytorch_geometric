Title: IBM Issue with updateOrganization transaction with side-table extension on the ADDRESS table - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 When creating a side-table extension to the ADDRESS table, InfoSphere Master Data Management Server might throw errors while executing the updateOrganization transaction with extension data. This issue can be solved by following the steps provided to modify some of the generated configuration snippets and source codes. 

SYMPTOM
When the Address entity is extended with a side table extension in InfoSphere MDM v10 and last_update_dt has not been synchronized between base table and extension table the following exception may happen: 

<DWLError>
<ComponentType>99</ComponentType>
<ErrorMessage>[Exception_Shared_LastUpdateDtNotMatched:] CDKCH2001E:Another transaction has updated the database record you are trying to update. Cannot update record at this time, please try again.</ErrorMessage>
<ErrorType>UPDERR</ErrorType>
<LanguageCode>100</LanguageCode>
<ReasonCode>109</ReasonCode>
<Severity>0</Severity>
<Throwable>java.lang.RuntimeException: com.dwl.base.exception.LastUpdateDateException: class com.test.address.entityObject.EObjXAddressExt | 298837398096381788</Throwable>
</DWLError> 


CAUSE
The external rule CheckAddrForUpdateRule(Rule 132:com.dwl.tcrm.externalrule.CheckAddrForUpdateRule) is not customized to consider extended fields when comparing incoming address and existing addressing for checking whether an update is needed or not. When incoming address is the same as the existing one, the address extension is not set redundant update to true.


ENVIRONMENT
Rational Software Architect + DB2 + Master Data Management Server.



DIAGNOSING THE PROBLEM
In InfoSphere MDM v10 and v10.1, a new coding pattern for side-table data extensions was introduced to improve usability. The last update date for the extension record is synchronized with the base record and there is no need to supply a last update date for the extension in an update request.
If the new coding pattern is used where there are existing extension records with last update dates that are not synchronized with the base records, then the updates will fail. 



RESOLVING THE PROBLEM
1. Customizing CheckAddrForUpdateRule. 
After comparing base fields between incoming address and existing address, if they're same, ensure to have new implementation to continue comparing extended fields.
If both base fields and extended fields are same, set redundant update to true for incoming address extension(e.g. xAddressBObj.setRedundantUpdate(true)) besides setting the returning value to true. For example:


i) if (addressResult && (addressBObj1 instanceof XAddressBObjExt) && (addressBObj2 instanceof XAddressBObjExt))

ii) add one more line (xAddressBObj1.setRedundantUpdate(true);) in the following 'if' block:

if (StringUtils.compareWithTrim(xAddressBObj1.getXAddrLineFour(), xAddressBObj2.getXAddrLineFour())
&& StringUtils.compareWithTrim(xAddressBObj1.getXAddrLineFive(), xAddressBObj2.getXAddrLineFive())
&& StringUtils.compareWithTrim(xAddressBObj1.getXZipExten(), xAddressBObj2.getXZipExten())
&& StringUtils.compareWithTrim(xAddressBObj1.getXAddrType(), xAddressBObj2.getXAddrType())) {

xaddressResult = true;
System.out.println("Extension entity Data Changed >>>"+ xaddressResult);
}

as shown below:

if (StringUtils.compareWithTrim(xAddressBObj1.getXAddrLineFour(), xAddressBObj2.getXAddrLineFour())
&& StringUtils.compareWithTrim(xAddressBObj1.getXAddrLineFive(), xAddressBObj2.getXAddrLineFive())
&& StringUtils.compareWithTrim(xAddressBObj1.getXZipExten(), xAddressBObj2.getXZipExten())
&& StringUtils.compareWithTrim(xAddressBObj1.getXAddrType(), xAddressBObj2.getXAddrType())) {

xaddressResult = true;
xAddressBObj1.setRedundantUpdate(true);
System.out.println("Extension entity Data Changed >>>"+ xaddressResult);
}

2. Update JAVAIMPL table using the customized external rule. For example:

UPDATE JAVAIMPL SET JAVA_CLASSNAME='org.package.name.mdm.extension.address.extrule.CheckAddrForUpdateRule', LAST_UPDATE_DT = CURRENT_TIMESTAMP WHERE EXT_RULE_IMPL_ID = 10132

Lastly, rebuild the project and start the server.