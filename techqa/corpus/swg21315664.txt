Title: IBM how wildcard search works and the importance of 'expansion limit' - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 Why does wildcard search not return what I expect? 

ANSWER
Here's how wildcard search works:
consider a series of 'documents', each containing a single, distinct word



Doc#
----- Content
----------------- 0001
0002
0003
0004
0005
0006
0007
0008
0009
0010
0011
0012
0013 manager
managers
managerial
unmanaged
unmanagerial
man
men
menagerie
100% unmanaged
100 % unmanaged
100h overtime
100 managers
meager 
Now we explain the different effects of using tail masking (masking character at the end of the word), middle and front masking. 

These search terms in the first column with tail masking deliver the 
documents in the second column: 
------------------------------------------- man
man%
manager
anager
men
men% 0006
0001 0002 0003 0006
0001
-
0007 

These search terms with middle masking deliver these documents: 
------------------------------------------- m%ager
m_ager 0001 0013
0013 

Single character masking can be front middle or tail: 
------------------------------------------- _anager 
m_n 
manager_ 0001
0006 0007
0002 

A single wildcard surrounded by spaces is not a wildcard at all, but the 
'%' character itself: 
------------------------------------------- 100%
100\%
100 % 0009 0010 0011
0009
0010 [but NOT 0012!] 

Some very general wildcard expressions in search terms sometimes appear 
not to return the expected set of results. Apparently random expected 
matching words are not found, even though they are clearly part of the 
indexed documents. 

This where the concept of 'expansion limit' comes in. 

what is expansion limit about? 
------------------------------ 
A search term with a wildcard character is internally transformed into 
a disjunction (a combination of terms combined with the Boolean 'OR' 
operator of match candidates. 

"man%", in the example above, would (under many simplified assumptions) 
be rewritten as 
"man | manager | managers | managerial | managed", 
i.e. into a compound search term with 5 components. 

As your index grows, and consequently also your dictionary grows, the 
list of such disjunctions can become quite large, and require large 
amounts of memory to rewrite and execute the query. 

To limit the memory requirements, a default 'expansion limit' applies, 
that limits the number of candidate matches in the expanded expression. 
Note that in the above example, the candidates were not sorted alphabe- 
tically, and in general, you cannot rely on them being in any particular 
order. 

If you have more than expansion limit many candidates in your index, 
they will never be even considered for the actual search. This can lead 
to unexpected results when the word list is very large, and the 
expansion limit relatively low. 

The default expansion limit is 2000 (match candidates). 

That sounds like a lot, but is actually a limit that gets hit if your 
wildcard expressions are very general (like, for example. a search for 
"s%". Again, alphabetical order is not guaranteed, so the 'missing 
words' in your candidate list can appear to be random. In general, in 
such a case, the recommendation is to use a more specific search term 
with more fixed characters ("st%" limits the original example already 
quite a bit). If you absolutely have to be very unspecific, the NSE 
query language allows you to specify explicitely that a higher (or lower 
...) expansion limit than the default is used. To do that, specify the 
word 'expansion limit' followed by a number as part of the query. 

For example, if the search with  * 

appears to not find results that you expect, try  * 

and compare the result sets. 

As one can easily see, the list of candidates can grow quite large. 

Due to the way the internal candidate selection process works, the 
limiting influence of specifying more definite characters is not 
effective, if front masking is used, i.e. if the search term is 
unspecific about the beginning of the word rather than its end. The 
use of front masking without specifying a large expansion limit is 
therefore discouraged; in combination with the higher cost of using 
a large expansion limit, front masking may be completely prohibitive 
in limited resource situations. 


Please Note: any combination of wildcard with 'stemmed form of' or 'fuzzy form of' is illegal.