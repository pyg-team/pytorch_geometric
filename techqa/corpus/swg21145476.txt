Title: IBM ICM: Datastore pooling can be done using the CMBConnectionPool bean.  Database connection pooling can be done using the API.  What are the differences between these two? - United States

Text:
CMBConnectionPool; connection pool; DKPoolWAS; pool; connection; JDBC; performance; tuning TECHNOTE (FAQ)

QUESTION
 What is the difference between connection pooling in the API and the pooling provided by the CMBConnectionPool bean?

Both of these pools have their uses and they can be used together. The pooling provided by the API pools database JDBC connections. The CMBConnectionPool bean pools DKDatastores. 

ANSWER
The database connection pool and the beans Connection pool do slightly different things. The beans pool will pool CMBConnection objects based on the userid that connects to the datastore. This effectively pools the datastores so that a user can reuse a connected datastore without logging on again. 
The CMBConnectionPool is only useful in situations where there is a shared userid or when a single userid logs on and off frequently. In applications where each user has their own userid and the user stays logged on between operations, the CMBConnectionPool has no value. This pool works well for situations where multiple sessions share a userid on the server. Usually this is done to provide view-only access to documents for many users.

The database connection pool, provided by the API, pools the connections to the database. This is done based on the userid used to connect to the database, not the CM userid. This pool does not keep the datastore open, only database connections are pooled and reused. Using this pool reduces the overhead of connecting to the database, but after the database connection is established, an initialization of the datastore is still required.

These pools are independent. Both can be used together. If possible, the database connection pool should always be used in mid-tier applications. Whether the CMBConnectionPool bean should be used should be determined based on how the application works.

The database connection pool could still be used when going through the Federated connector to a DB2 Content Manager Version 8 backend. The database connection pool will be used for all connections to DB2 Content Manager Version 8 that are made by the Federated connector. 

The database connection pool is configured in WebSphereÂ® Application Server. The only setting that is available in the API is whether database connection pooling is turned on. Turning this pooling on or off can be done using cmbpool.ini or programmatically. Once the pool is turned on and configured, it is transparent to the application.

For details on using database connection pooling, see Installing, Managing, and Configuring the eClient http://publibfp.boulder.ibm.com/epubs/pdf/c2713500.pdf [http://publibfp.boulder.ibm.com/epubs/pdf/c2713500.pdf].

For details on using the CMBConnectionPool, see the Application Programming Guide: http://publibfp.boulder.ibm.com/epubs/pdf/c2713472.pdf [http://publibfp.boulder.ibm.com/epubs/pdf/c2713472.pdf]




Cross reference information Segment Product Component Platform Version Edition Enterprise Content Management Content Manager Tuning Hints And Tips AIX, Linux, Solaris, UNIX, Windows 2000, Windows XP, Windows 2003 8.1, 8.2, 8.3 All Editions Enterprise Content Management Content Manager DB2 Information Integrator for Content AIX, Red Hat Linux, Solaris, Windows 2000, Windows XP, Windows 2003 8.1, 8.2, 8.3 All Editions Enterprise Content Management Content Manager DB2 Information Integrator for Content AIX, Red Hat Linux, Solaris, Windows 2000, Windows XP, Windows 2003 8.1, 8.2, 8.3 All Editions