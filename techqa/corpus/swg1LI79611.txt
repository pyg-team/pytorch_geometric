Title: IBM LI79611: USING '.JSON' IN THE SCHEMA DEFINITION NAME PREVENTS API PUBLISHING - United States

Text:
 SUBSCRIBE TO THIS APAR
By subscribing, you receive periodic emails alerting you to the status of the APAR, along with a link to the fix after it becomes available. You can track this item individually or track all items by product.

Notify me when this APAR changes.

Notify me when an APAR for this component changes.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  In your API, if you are creating a Schema Definition using
   '.json" in its name, it will prevent you from being able to
   Drafts:push or Products:publish the product (and therefore the
   API) and you will get the error:
   
   Encountered an error while dereferencing
   <project_path>\<api_name>_<api_version>.yaml.
   
   Steps to recreate
   
   - From apic edit, create an API called 'test' adding to the
   default test-product
   - Add a new definition and call it 'testdef.json' containing a
   - Add a new operation with a new response which references the
   - Save the api The API looks like:
   
   swagger: '2.0'
   info:
     x-ibm-name: test
     title: test
     version: 1.0.0
   schemes:
     - https
   host: $(catalog.host)
   basePath: /test
   consumes:
     - application/json
   produces:
     - application/json
   securityDefinitions:
     clientIdHeader:
       type: apiKey
       in: header
       name: X-IBM-Client-Id
   security:
     - clientIdHeader: []
   x-ibm-configuration:
     testable: true
     enforced: true
     cors:
       enabled: true
     assembly:
       execute:
         - invoke:
             target-url: $(target-url)$(request.path)
   paths:
     /testop:
       get:
         responses:
           '200':
             description: 200 OK
             schema:
               $ref: '#/definitions/testdef.json'
       parameters:
         - name: param1
           type: string
           required: false
           in: query
   definitions:
     testdef.json:
       properties:
         test_property:
           type: string
       additionalProperties: false
   tags: []
   
   Now execute the commands:
   
   - apic products:publish test-product_1.0.0.yaml -o <org_name>
   -c <catalog_name> -s <server_name>
   will result in the following :
   Error: Encountered an error while dereferencing
   "project_path"\test_1.0.0.yaml. Details: ENOENT: no such file
   or directory, open "project_path"\\#\definitions\test.json'
   
   - apic drafts:push test-product_1.0.0.yaml -o <org_name> -s
   <server_name
   will result in the following error:
   
   { filename: 'test-product_1.0.0.yaml',
     errors:
      [ { type: 'swagger',
          filePath: ' "project_path"\\test1.0.0.yaml',
          name: 'test',
          data: [Object],
          raw: 'swagger: \'2.0\'\ninfo:\n  x-ibm-name: test\n
   title: test\n  version: 1.0.0\nschemes:\n  - https\nhost: $(cata
   h: /testjoox\nconsumes:\n  - application/json\nproduces:\n  -
   application/json\nsecurityDefinitions:\n  clientIdHeader:\n
   type: a
   der\n    name: X-IBM-Client-Id\nsecurity:\n  - clientIdHeader:
   []\nx-ibm-configuration:\n  testable: true\n  enforced: true\n
   cors:
   e\n  assembly:\n    execute:\n      - invoke:\n
   target-url: $(target-url)$(request.path)\npaths:\n  /test:\n
   get:\n
      \'200\':\n          description: 200 OK\n          schema:\n
              $ref: \'#/definitions/test.json\'\n    parameters:\n
          type: string\n        required: false\n        in:
   query\ndefinitions:\n  test.json:\n    properties:\n
   test:\n        t
   dditionalProperties: false\ntags: []\n',
          mtime: Wed Apr 19 2017 17:41:08 GMT+0200 (W. Europe
   Daylight Time),
          version: '1.0.0',
          err: [Error: Encountered an error while dereferencing
   "project_path"\test_1.0.0.yaml. Details: ENOENT:
   Directory, open '"project_path"\\#\definitions\test.json' ] } ]
   } 0 [ { filename: 'test-product_1.0.0.yaml',
       errors: [ [Object] ] } ]
   Error: There was an error while processing
   test-product_1.0.0.yaml.
   
   
    
   
   

LOCAL FIX
 *  Do not use '.json' for the name of your schema definition(s).
   
   
    
   
   

PROBLEM SUMMARY
 *  If a name in the definition section of the api yaml file
   contained a .json extension and it was referred to using a $ref,
   toolkit would try to find and load that file, which caused the
   error since no file with that name existed.
   
   
    
   
   

PROBLEM CONCLUSION
 *  We are not going to expand / load $refs that refer to locally
   referenced artifacts.  This issue was fixed in version 5.0.7.1
   of APIManager.
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   LI79611
   
   
 * REPORTED COMPONENT NAME
   API CONNECT PRO
   
   
 * REPORTED COMPONENT ID
   5725Z2200
   
   
 * REPORTED RELEASE
   507
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt / Xsystem
   
   
 * SUBMITTED DATE
   2017-04-21
   
   
 * CLOSED DATE
   2018-02-20
   
   
 * LAST MODIFIED DATE
   2018-02-20
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   API CONNECT PRO
   
   
 * FIXED COMPONENT ID
   5725Z2200
   
   

APPLICABLE COMPONENT LEVELS