Title: IBM Using curl to do PATCH request to update an event via OMNIbus ObjectServer HTTP Interface - United States

Text:
curl PATCH OSLC URI http interface 405 method TECHNOTE (FAQ)

QUESTION
 How do I use curl to perform a PATCH request to update an event in the OMNIbus ObjectServer via the ObjectServer HTTP Interface? Any examples? 

ANSWER
Enable the HTTP Interface as follows: 

In the ObjectServer property file
* Set the NRestOS.Enable property to TRUE.
* To configure the embedded HTTP server so that the interfaces are active on an
HTTP port, specify the listening port for the connection type. For example, to
make the interfaces listen on port 8080, set the properties as follows:
NHttpd.EnableHTTP : TRUE
NHttpd.ListeningPort : 8080


When using a POST request to create a new event in the ObjectServer the response will include a uri which has the keyfield of XXXX which is the ServerSerial of the created event. 

http.//localhost:8080/objectserver/restapi/alerts/status/kf/3674%3ANCOMS 

In the example above, the keyfield or ServerSerial is 3674. 

For an existing event, locate the ServerSerial and replace 3674 in the uri. 


In this example, we will use that uri with the keyfield (ServerSerial) 3674 of the event to do a PATCH request to the ObjectServer to change some fields.

Here are the steps to use the example in the manual to update the Location, LastOccurrence, Acknowledged, OwnerUID and OwnerGID columns of the event created earlier in the alerts.status table.

Create a file called "3674tcpatch" with the following content from the manual "ObjectServer HTTP Interface Reference Guide" under section "Example table collection PATCH request" on page 42.

{
"rowset": {
"coldesc": [
{
"type": "integer",
"name": "Acknowledged"
},
{
"type": "string",
"name": "Location"
},
{
"type": "integer",
"name": "OwnerUID"
},
{
"type": "integer",
"name": "OwnerGID"
},
{
"type": "utc",
"name": "LastOccurrence"
}
],
"rows": [
{
"Location": "UPDATED",
"LastOccurrence": 1341412235,
"Acknowledged": 1,
"OwnerUID": 65534,
"OwnerGID": 1
}
]
}
}

Then, run this curl command:

curl -X PATCH -v -u root: -H "Accept: application/json" -H "Content-Type: application/json" -d @3674tcpatch http.//localhost:8080/objectserver/restapi/alerts/status/kf/3674%3ANCOMS

Here is the response/output showing that it is successful:

* About to connect() to localhost port 8080 (#0)
* Trying ::1... connected
* Connected to localhost (::1) port 8080 (#0)
* Server auth using Basic with user 'root'
> PATCH /objectserver/restapi/alerts/status/kf/3674%3ANCOMS HTTP/1.1
> Authorization: Basic cm9vdDo=
> User-Agent: curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.13.1.0 zlib/1.2.3 libidn/1.18 libssh2/1.2.2
> Host: localhost:8080
> Accept: application/json
> Content-Type: application/json
> Content-Length: 339
>
< HTTP/1.1 200 OK
< Cache-Control: no-cache
< Server: libnhttpd
< Date: Tue Jul 21 17:52:04 2015
< Connection: Keep-Alive
< Content-Type: application/json;charset=UTF-8
< Content-Length: 121
<
{
"entry": {
"affectedRows": 1,
"uri": "http.//localhost:8080/objectserver/restapi/alerts/status/kf/3674:NCOMS"
}
* Connection #0 to host localhost left intact
* Closing connection #0

Check that event and it will have the the Location, LastOccurrence, Acknowledged, OwnerUID and OwnerGID columns updated.