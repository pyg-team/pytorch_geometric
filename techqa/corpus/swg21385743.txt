Title: IBM eSignature package eSigCust_ContinuousUsageDuration script does not work - United States

Text:
1385743; RATLC01289416; PK86259; CQ; ClearQuest; Designer; package; hooks; global script; eSignature; eSigCust_ContinuousUsageDuration; no change; does not work; non-responsive; nonresponsive TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 This technote provides a workaround for an IBM Rational ClearQuest issue where optional code for the eSignature package does not work as described. 

SYMPTOM
These instructions are embedded in the code of the eSignature package: 

sub esig_login_DefaultValue {
my($fieldname) = @_;
# $fieldname as a string scalar
# record type name is Defect
# field name is esig_login


# 21 CFR 11 apparently doesn't allow us always to provide the user
# with a reasonable default value for the User Name field. However,
# the regulations do say that there may be a period of 'continuous 
# system usage' during which we can keep filling in the User Name 
# field; but when that period expires, the user must fill it in 
# again. This means that we can allow a default login name for 
# some period of time, but the user must refresh this field
# periodically.
#
# The customer supplies us with a function named 
# eSigCust_ContinuousUsageDuration(). This tells us how many seconds
# may go by before we must prompt the user for the user name again.
# If this function is not supplied, the user will always need to fill
# in the user name field.
#
# Note that the Validation hook for this field is responsible for
# keeping the stored login name current. If we clear the name in
# the course of this hook, the Validation hook will reset the stored
# name, as well re-setting the time that it was last entered by the
# user.

$entity->SetFieldValue($fieldname, "");
my $timeoutPeriod = 0;

# Call a customer-supplied function to get the timeout period.
# If the function doesn't exist, $timeoutPeriod will still be 0,
# meaning 'always ask for user name'.
# A simple example of this function:
## sub eSigCust_ContinuousUsageDuration {
## my ($session, $entity) = @_; # Ignored in this example
##
## return 600; # Re-enter user name every 10 minutes (
## 600 seconds)
## }


 

Creating the global script does not work as described.

CAUSE
This issue has been identified as a product defect under APAR PK86259. 


The eSigCust_ContinuousUsageDuration customization script does not work because the script is not called at the right time. It is only called when a new record is submitted, not when any other action is performed on the record.


RESOLVING THE PROBLEM
A workaround for the problem is available. It requires making a small change to the eSignature package code. 


Procedure
1. Use the packageutil enablepackageediting command to enable package editing.

2. Check out the schema.

3. For each record type that is using the eSignature package, perform the following steps:


 * 
 * 
 * 
 * esig_login 
 * 
 * 
 * 
 * return $result;
 * 
 * 
 * 
 * 
   if ($result) {
   esig_login_DefaultValue("esig_login");
   }
   
 * 

4. Test the schema. After the first action in a session that requires a signature, make sure that the eSignature User Name field is automatically filled in when performing any additional actions during the time period specified by the eSigCust_ContinuousUsageDuration script. 

5. Check in the schema. 

6. Disable package editing. 





Cross Reference information Segment Product Component Platform Version Edition Software Development Rational ClearQuest Designer - Hooks