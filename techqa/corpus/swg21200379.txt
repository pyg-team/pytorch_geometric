Title: IBM Defined two datasources to use two different JDBC drivers, but both datasources are using the same JDBC driver - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 If the different versions JDBC driver have the same classnames, then whichever classes are loaded first are used. Since JDBC provider classes are loaded by a WebSphere Application Server classloader, if you define JDBC providers that use different JDBC drivers of the same family (for example, both Oracle 10g and Oracle 11g thin driver), then which JDBC driver gets loaded is determined by which JDBC provider is processed first by the WebSphere Javaâ„¢ Virtual Machine (JVM). 

For example, if you define one JDBC provider to use driver for Oracle 10g and another JDBC provider to use Oracle 11g, and define two datasource's, one using each JDBC provider. The SystemOut.log file will show that both datasources are using the same driver. 

CAUSE
 When classes get loaded into the JVM, only one set of the JDBC provider's classes is loaded. When the datasource is created, it uses whichever JDBC driver is already loaded in the JVM. This is working as designed.

RESOLVING THE PROBLEM
Since most drivers are backward compatible, the later driver should be used. In addition, you have the ability in WebSphere Application Server v7.0 and later to isolate the resource provider. Selecting isolate this resource provider specifies that this resource provider will be loaded in its own class loader. This allows different versions or implementations of the same resource provider to be loaded in the same Java Virtual Machine. Give each version of the resource provider a unique class path that is appropriate for that version or implementation. Please note all JDBC resource providers for the database vendor must be isolated. 

To view this property and other JDBC provider settings: Open the administrative console page, click Resources > JDBC > JDBC providers > JDBC_provider 

 



Cross reference information Segment Product Component Platform Version Edition Application Servers Runtimes for Java Technology Java SDK Application Servers WebSphere Application Server for z/OS z/OS 7.0, 6.1, 6.0 
HISTORICAL NUMBER
 55997
660
706