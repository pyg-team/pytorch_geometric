Title: IBM IV79820: healthcheck checkDBIndexes module reports "extra" indexes that correspond to recycle bin "BIN$*" indexes in Oracle - United States

Text:
 SUBSCRIBE TO THIS APAR
By subscribing, you receive periodic emails alerting you to the status of the APAR, along with a link to the fix after it becomes available. You can track this item individually or track all items by product.

Notify me when this APAR changes.

Notify me when an APAR for this component changes.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  TADDM 7.3.0.0 with Oracle back-end
   
   The healthcheck checkDBIndexes module reports "extra" indexes
   that correspond to recycle bin "BIN$*" indexes in Oracle. The
   report output will look like this:
   
   ****************************************************************
   ********
   ****************************
   **                                      Begin
   checkDBIndexes                                      **
   **
   --------------------                                      **
   **
                             **
   **         This section validates the indexes on the primary
   database
   schema.                     **
   **         It uses several sources
   (create-indexes.sql/create-meta.sql
   from                       **
   **         oal-topomgr.jar and create-tables.sql from
   etc/schema) and
   compares                    **
   **         them to the indexes in the
   database.                                                   **
   **
                             **
   **         Note:  "Nothing to do" means that your indexes
   validated
   OK.                           **
   **
                             **
   **         If indexes are missing, you should reset them. If
   there are
   Extra                      **
   **         indexes, you should confirm why they
   exist.                                            **
   **
                             **
   ****************************************************************
   ********
   ****************************
   Label                            Source
   Table
   Value
   BIN$EULbbre9epTgU94JFqwYQQ==$0 Database
   BIN$EULbbre+epTgU94JFqwYQQ==$0
   Extra
   
   BIN$EULbbre8epTgU94JFqwYQQ==$0 Database
   BIN$EULbbre+epTgU94JFqwYQQ==$0
   Extra
   
   BIN$EULbbrSZepTgU94JFqwYQQ==$0 Database
   BIN$EULbbrSaepTgU94JFqwYQQ==$0
   Extra
   
   BIN$EULbbrZ4epTgU94JFqwYQQ==$0 Database
   BIN$EULbbrZ5epTgU94JFqwYQQ==$0
   Extra
   
   The fix is to update lib/healthcheck/checkDBIndexes.py so check
   if the
   table name starts with 'BIN$' before including it.
   
       query = "select
   index_name,column_name,table_name,table_owner from
   dba_ind_columns where table_owner='%s'" % table_owner.upper()
       log.info("Running query:" + str(query))
       sql_list=self.runSql_2(query)
       for row in sql_list:
           if not str(row['TABLE_NAME']).startswith('BIN$'):
               self.applied_indexes[str(row['INDEX_NAME'])] = {}
   
   self.applied_indexes[str(row['INDEX_NAME'])]['table'] = row
   ['TABLE_NAME']
   
   self.applied_indexes[str(row['INDEX_NAME'])]['source'] =
   "Database"
   
   self.applied_indexes[str(row['INDEX_NAME'])]['columns'] =
   row['COLUMN_NAME']
   
   
    
   
   

LOCAL FIX
 *  The fix is to update lib/healthcheck/checkDBIndexes.py so chec
   if the
   table name starts with 'BIN$' before including it.
   
       query = "select
   index_name,column_name,table_name,table_owner from
   dba_ind_columns where table_owner='%s'" % table_owner.upper()
       log.info("Running query:" + str(query))
       sql_list=self.runSql_2(query)
       for row in sql_list:
           if not str(row['TABLE_NAME']).startswith('BIN$'):
               self.applied_indexes[str(row['INDEX_NAME'])] = {}
   
   self.applied_indexes[str(row['INDEX_NAME'])]['table'] = row
   ['TABLE_NAME']
   
   self.applied_indexes[str(row['INDEX_NAME'])]['source'] =
   "Database"
   
   self.applied_indexes[str(row['INDEX_NAME'])]['columns'] =
   row['COLUMN_NAME']
   
   I have tested this and it works.
   
   
    
   
   

PROBLEM SUMMARY
 *  Problem description
   TADDM 7.3.0.0 with Oracle back-end
   
   The healthcheck checkDBIndexes module reports "extra" indexes
   that
   correspond to recycle bin "BIN$*" indexes in Oracle. The report
   output
   will look like this:
   
   ****************************************************************
   ********
   ****************************
   **                                      Begin
   checkDBIndexes                                      **
   **
   --------------------                                      **
   **
                             **
   **         This section validates the indexes on the primary
   database
   schema.                     **
   **         It uses several sources
   (create-indexes.sql/create-meta.sql
   from                       **
   **         oal-topomgr.jar and create-tables.sql from
   etc/schema) and
   compares                    **
   **         them to the indexes in the
   database.                                                   **
   **
                             **
   **         Note:  "Nothing to do" means that your indexes
   validated
   OK.                           **
   **
                             **
   **         If indexes are missing, you should reset them. If
   there are
   Extra                      **
   **         indexes, you should confirm why they
   exist.                                            **
   **
                             **
   ****************************************************************
   ********
   ****************************
   Label                            Source
   Table
   Value
   BIN$EULbbre9epTgU94JFqwYQQ==$0 Database
   BIN$EULbbre+epTgU94JFqwYQQ==$0
   Extra
   
   BIN$EULbbre8epTgU94JFqwYQQ==$0 Database
   BIN$EULbbre+epTgU94JFqwYQQ==$0
   Extra
   
   BIN$EULbbrSZepTgU94JFqwYQQ==$0 Database
   BIN$EULbbrSaepTgU94JFqwYQQ==$0
   Extra
   
   BIN$EULbbrZ4epTgU94JFqwYQQ==$0 Database
   BIN$EULbbrZ5epTgU94JFqwYQQ==$0
   Extra
   
   The fix is to update lib/healthcheck/checkDBIndexes.py so check
   if the
   table name starts with 'BIN$' before including it.
   
       query = "select
   index_name,column_name,table_name,table_owner from
   dba_ind_columns where table_owner='%s'" % table_owner.upper()
       log.info("Running query:" + str(query))
       sql_list=self.runSql_2(query)
       for row in sql_list:
           if not str(rowÝ'TABLE_NAME'¨).startswith('BIN$'):
               self.applied_indexesÝstr(rowÝ'INDEX_NAME'¨)¨ = {}
   
   self.applied_indexesÝstr(rowÝ'INDEX_NAME'¨)¨Ý'table'¨ = row
   Ý'TABLE_NAME'
   
   self.applied_indexesÝstr(rowÝ'INDEX_NAME'¨)¨Ý'source'¨ =
   "Database"
   
   self.applied_indexesÝstr(rowÝ'INDEX_NAME'¨)¨Ý'columns'¨ =
   rowÝ'COLUMN_NAME'
   
   I have tested this and it works.
   
   This is Mat Davis that is in IBM lab services. After verifying
   that
   there was no code fix previously done for this, please send to
   L3 to
   fix. Thank you.
   
   
    
   
   

PROBLEM CONCLUSION
 *  The fix for this APAR is contained in the following maintenance
   packages:
   | Fix Pack | 7.3.0-TIV-ITADDM-FP0003
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   IV79820
   
   
 * REPORTED COMPONENT NAME
   APP DEPENDENCY
   
   
 * REPORTED COMPONENT ID
   5724N5500
   
   
 * REPORTED RELEASE
   730
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt / Xsystem
   
   
 * SUBMITTED DATE
   2015-12-16
   
   
 * CLOSED DATE
   2016-02-11
   
   
 * LAST MODIFIED DATE
   2016-02-11
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   APP DEPENDENCY
   
   
 * FIXED COMPONENT ID
   5724N5500
   
   

APPLICABLE COMPONENT LEVELS
 * R730 PSY
   UP