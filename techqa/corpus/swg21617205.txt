Title: IBM JPA entities may cause a java.lang.VerifyError when Code Coverage is enabled - United States

Text:
RN8.0; RN8.5 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Due to incompatibilities between the JPA bytecode enhancement implementation (of WebSphere Application Server) and the Code Coverage instrumentation implementation (of Rational Application Developer), classes may fail to load when both are active. 

SYMPTOM
Due to incompatibilities between the JPA bytecode enhancement implementation of WebSphere Application Server and the Code Coverage instrumentation implementation (of Rational Application Developer), classes may fail to load when both are active.


DIAGNOSING THE PROBLEM
In the application console or applications server console error log, you may see exceptions such as this:

CNTR0020E: EJB threw an unexpected (non-declared) exception during invocation of method "startup" on bean "BeanId(UserPkgApp#usrpkg.jar#PersistentTimerStatsBean, null)". Exception data: java.lang.VerifyError: JVMVRFY036 stack underflow; class=usrpkg/PersistentStatsJPA, 

The specific exception is a java.lang.VerifyError for an instrumented class, with a stack underflow reported in the class. However, if this exception is seen while code coverage is not enabled, the exception is not caused by this issue.

RESOLVING THE PROBLEM
To work around the problem, add the affected classes to the Code Coverage filter set. Addin the classes to the filter set prevents them from being instrumented by Code Coverage, but still allow them to be processed by JPA. 


Affected classes are those that are reported as failing to load on the console or application server logs. If problems persist, it might be necessary to filter out all JPA entity classes.

For each of the affected classes: 

 1. Open the project that contains the class, and open the project properties. Select the Code Coverage page. 
 2. Under Code Coverage Filters, a filter can be created to exclude the failing class. Select "New...", enter the fully qualified name of the failing class, and ensure that "Exclude from code coverage" is selected. 
 3. Click Ok.
    
    This issue could affect web applications running on WebSphere Application Server v85 and v8501.