Title: IBM Coding errors in server side Javascript in xPages may hang HTTP threads - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM
If server-side JavaScript (SSJS) is run from an xPage application, a developer should be careful to assure that there are no coding errors that can result in infinite loops. There is no way to cleanly stop such a thread if it gets into such a state. That HTTP thread can be considered "hung", and will not be accessible until the entire Domino server is restarted. 

SYMPTOM
You can see that a thread is hung through repeated use of the console command "tell http show thread state", and noting if a thread is never released. If you attempt to shut down the HTTP task, the task cannot be ended and the server console will repeatedly display an error like the following: 

HTTP Server: Waiting for session to finish: Session State [Processing Request] Session ID [1] Thread ID [1764 (0x6e4)] GET /my_database.nsf/my_xpage.xsp HTTP/1.1



CAUSE
There is currently no way to limit the execution time of an HTTP thread run by a Domino web server, and there is no way to cleanly stop such a thread. 



RESOLVING THE PROBLEM
Developers should carefully test all server-side JavaScript before deploying an xPage application. If a coding error causes an HTTP thread to hang, it would be necessary to kill the HTTP task and restart the Domino server in order to free the thread. A server has multiple HTTP threads available (the default is 40 threads), so a web server can continue to operate normally even if one of its HTTP threads is hung. In order to restart the server with the least impact on other databases, attempt to stop all other Domino tasks that are running, and then run "nsd -kill" from a command prompt to terminate those that cannot be stopped by normal means. 





 * 
 *