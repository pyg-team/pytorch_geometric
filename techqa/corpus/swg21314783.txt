Title: IBM WSVR0605W thread may be hung error and WebSphere Commerce server hangs during startup - United States

Text:
hang hanging hangs hung startup initialization TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Your system appears to hang while the WebSphere Commerce server is starting up. You see the following error in the SystemOut.log file:

ThreadMonitor W WSVR0605W: Thread "server.startup : 4" (00000017) has been active for 696812 milliseconds and may be hung. There is/are 1 thread(s) in total in the server that may be hung.
TimeoutManage I WTRN0006W: Transaction D00000001 has timed out after 1200 seconds. 

CAUSE
The database connection is locked up.

DIAGNOSING THE PROBLEM
Generate Javaâ„¢ core threaddumps to find out what the thread mentioned in the SystemOut.log is doing. 
For instructions on generating Java core files, please see the following technote:


MustGather: Generating Javacores and Userdumps Manually For Performance, Hang or High CPU Issues on Windows [http://www-01.ibm.com/support/docview.wss?uid=swg21138203]


From the Java core files that are generated, locate the thread identified as hung, in the SystemOut.log file. Based on the example log above, search for the string server.startup : 4, as this was the thread mentioned in the SystemOut.log. Below is an example of the threadstack for that thread: 

3XMTHREADINFO "server.startup : 4" (TID:0x107EA790, 
sys_thread_t:0x5FDD1F0, state:R, native ID:0x146C) prio=5
4XESTACKTRACE at COM.ibm.db2.jdbc.app.
DB2PreparedStatement.SQLExecute(Native Method)
4XESTACKTRACE at COM.ibm.db2.jdbc.
app.DB2PreparedStatement.execute2(Unknown Source)
4XESTACKTRACE at COM.ibm.db2.jdbc.app.DB2PreparedStatement.
executeQuery(Unknown Source)
4XESTACKTRACE at com.ibm.ws.rsadapter.jdbc.
WSJdbcPreparedStatement.
pmiExecuteQuery(WSJdbcPreparedStatement.java:690)
4XESTACKTRACE at com.ibm.ws.rsadapter.jdbc.
WSJdbcPreparedStatement.
executeQuery(WSJdbcPreparedStatement.java:488)
4XESTACKTRACE at com.ibm.commerce.base.helpers.
BaseJDBCHelper.executeQuery(BaseJDBCHelper.java:345)
4XESTACKTRACE at com.ibm.commerce.base.objects.
ServerJDBCHelperBean.findAllKeys(ServerJDBCHelperBean.java:495)
4XESTACKTRACE at com.ibm.commerce.base.objects.
EJSRemoteStatelessServerJDBCHelper_1e86a748.
findAllKeys(EJSRemoteStatelessServerJDBCHelper_1e86a748.java:677)
4XESTACKTRACE at com.ibm.commerce.base.objects.
_ServerJDBCHelper_Stub.
findAllKeys(_ServerJDBCHelper_Stub.java:503)
4XESTACKTRACE at com.ibm.commerce.
base.objects.ServerJDBCHelperAccessBean.
findAllKeys(ServerJDBCHelperAccessBean.java:209)
4XESTACKTRACE at com.ibm.commerce.
key.ECKeyManager.initializeKeys(ECKeyManager.java:130)
4XESTACKTRACE at com.ibm.commerce.key.ECKeyManager.
<init>(ECKeyManager.java:35) 

In the above case, the Commerce Key Manager is performing a search for all the keys from the KEYS table in the database during initialization.


RESOLVING THE PROBLEM
Restart the entire environment and more specifically, restart the database to remove any locks.


If the problem persists, or if the stack does not show DB2, continue to gather all the information in the MustGather (noted above) and contact WebSphere support for further investigation. 

If the problem appears to be an issue with the database, follow the MustGather link below to further diagnose the database issue:
MustGather: WebSphere Commerce performance problems with DB2 databases [http://www-01.ibm.com/support/docview.wss?uid=swg21961381]

 


Cross reference information Segment Product Component Platform Version Edition Commerce WebSphere Commerce - Express Runtime i5/OS, Linux, Windows 6.0 Express Commerce WebSphere Commerce Professional Runtime AIX, i5/OS, Linux, Solaris, Windows 6.0 Professional Edition