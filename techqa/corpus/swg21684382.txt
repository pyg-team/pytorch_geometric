Title: IBM Purescale CF cannot be started on Linux AMD64 platform if CF_MEM_SZ is defined to larger than 256 GB - United States

Text:
CF; CF_MEM_SZ; 256 GB TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Customer wants to use more than 256 GB memory for purescale CF on Linux AMD64 platform, but CF cannot be started if CF_MEM_SZ is defined to larger than 256 GB. 

SYMPTOM
db2diag.log prints:

2014-08-08-16.45.41.774177+480 I132020E514 LEVEL: Error
PID : 64247 TID : 46912853183040 PROC : ca-wdog 128 [db2sdin1]
INSTANCE: db2sdin1 NODE : 128
HOSTNAME: test1
FUNCTION: DB2 UDB, RAS/PD component, pdLogCaPrintf, probe:876
DATA #1 : <preformatted>
CA Configure command failed: mrb rc = (-2147090354)
DATA #1 : <preformatted>
If a CF return code is displayed above and you wish to get
more information then please run the following command:

db2diag -cfrc <CF_errcode>

2014-08-08-16.45.41.774482+480 E132535E418 LEVEL: Severe
PID : 64247 TID : 46912853183040 PROC : ca-wdog 128 [db2sdin1]
INSTANCE: db2sdin1 NODE : 128
HOSTNAME: test1
FUNCTION: DB2 UDB, Shared Data Structure Abstraction Layer for CF, sqleSendCFServerConfig, probe:2687
MESSAGE : ECF=0x94C6004E=-1798963122
DATA #1 : String, 43 bytes
Unable to configure and start the CF server


From the output of 'db2diag -cfrc -2147090354', rc = (-2147090354) means CF_MGMNT_SHMEM_CREATE_FAILURE.

cfdiag.log prints:

2014-08-08-16.44.18.0740598305+480 E123456789A328 LEVEL : Error
PID : 59532 TID : 2863404512
NODE : 000
HOSTNAME : test1
FUNCTION : CA trace, log_error
MESSAGE : CA server has encountered an error.
DATA #1 :
mgmnt_castart() shmget failed trying to alllocate Shared Memory for the Coupling Memory. errno: 22


CAUSE
The 256 GB maximum size restriction for a single shared memory segment is a hard architectural limit in the Linux implementation on AMD64 (x86_64).


ENVIRONMENT
OS: Linux AMD64 platform



DIAGNOSING THE PROBLEM
The following simple program can reveal this limit:

[root@IM002_redhat ~]# cat test.c
#include <sys/ipc.h>
#include <sys/types.h>
#include <sys/shm.h>
#include <errno.h>

#include <stdio.h>
#include <stdlib.h>

int main ( int argc, char ** argv )
{
void *attachAddress = NULL;
int shmid = 0;

size_t shmSize = 362041049088 ;
int shmFlag = 0x000007C1;
int rc = 0 ;
struct shmid_ds buf;
int sizeInGB = 0 ;

if( argc != 2 )
{
fprintf(stderr, "One argument , the segment size in GB is required \n" );
exit(-1);
}

sizeInGB = atoi(argv[1]) ;
shmSize = (size_t)( sizeInGB * 0x40000000L) ;
fprintf( stdout , " Going to allocate %d GB , or %lld bytes \n", sizeInGB, shmSize);

shmid = shmget ( IPC_PRIVATE, shmSize, shmFlag ) ;
if( shmid == -1 )
{
fprintf(stderr, "Error received in shmget, errno = %d\n", errno );
exit( -1 );
}

fprintf(stdout, "Memory segment is created\n" );
attachAddress = shmat( shmid, NULL, 0 );
if ( ( void * )-1 == attachAddress )
{
fprintf(stderr, "Error received in shmat, errno = %d\n", errno );
}
fprintf(stdout, "Memory attached at address 0x%llx\n", attachAddress );

shmdt(attachAddress);


rc = shmctl( shmid ,IPC_RMID,&buf);
if( -1 == rc )
{
fprintf(stderr, "Error received in shmctl, errno = %d\n", errno );
}
return 0;

}

Compile:
gcc test.c -o test

Make sure SHMMAX is set to larger than the memory you want to allocate by shmget().

Run:
./test 256
./test 257

The first one will succeed, the second one will fail with errno 22.



RESOLVING THE PROBLEM
Do not set CF_MEM_SZ to larger than 256 GB on Linux AMD64 platform.