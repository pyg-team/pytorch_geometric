Title: IBM Memory growing, diskspace used up - United States

Text:
netcool; impact; netcool/impact; nci; failed; event; failedevent; data; type; item; datatype; dataitem; memory; disk; space; diskspace; file; files; system; filesystem; fill; filling; filled; outofmemory; error; outofmemoryerror; default; exception; handler; policy; defaultexceptionhandler; defaulterrorhandler TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 The ImpactServer memory footprint is steadily increasing over time and the amount of diskspace it occupies is increasing too. 

SYMPTOM
Reduction in processing speed, memory issue error messages: 

 * 
 * 


CAUSE
The FailedEvent DataType is filling up. 



ENVIRONMENT
Installation upgraded from Impact 4.x (and/or potentially 3.x). 





DIAGNOSING THE PROBLEM
Examine the output from running: 




 * 



RESOLVING THE PROBLEM
In an upgraded installation, where the export of the Impact 4.x (or even 3.x) configuration is imported into a vanilla Impact 5.x configuration. 


In Impact 5.x the DefaultExceptionHandler Policy has finally been tamed into a gentle beast that just logs the failure in the PolicyLogger output, with a bit too little detail for my taste - but that's covered in the TechNote "Variables reporting error and Policy name in ExceptionHandler" [link below].

The trouble starts when one imports the Impact 4.x configuration and the genteel Impact 5.x DefaultExceptionHandler Policy is overwritten with the older, nastier version. Here's the history:

"The Impact 4.x misnomered DefaultExceptionHandler Policy was set by default in Impact as the PolicyLogger Exception Handler, but was little advertised/described. Customers took it on trust that this little beast was the best way to handle exceptions. My contention for many years was that this should have been named ExampleExceptionHandler as all it did was bung Context details into the FailedEvent DataType, which also writes to disk ($NCHOME/impact/db/[ImpactServerName]/28) and the filling of this bucket generally went unnoticed - the unwritten expectation was that customers would be aware of this filling bucket and would then handle the events as desired (e.g. ReprocessFailedEvents)."

Please note that in Impact 5.x the FailedEvent DataType records its file system records in a different directory to Impact 4.x and is now:



 * 
 * 54


The immediate resolution to this issue is to edit the PolicyLogger to set the Exception Handler to NONE, log into the ImpactServer via the Command Line Interface and issue the command: 

 * 


then exit & cd to $NCHOME/impact/db/[ImpactServerName]/54 and remove all except the roots file. 

There is no effect in setting the PolicyLogger default error handler from DefaultExceptionHandler to NONE other than stopping the creation of FailedEvent DataItems. 

The purpose of these DataItems is for a recoverable record to replay through the Policy that failed via the ReprocessFailedEvent Policy. There is no other “intelligence” to this action other than to simply “try again”. One can use this as an example for the development of a default Policy that reacts in a way that fulfils the corporate requirements and desired procedure to a failed Policy process. 

If one wishes to revert to the "correct" Impact 5.x style DefaultExceptionHandler Policy then it can be edited to read: 

 * 


One could enhance this by taking advantage of the information reported in the TechNote "Variables reporting error and Policy name in ExceptionHandler" [ link below]. 

If the upgrade is of an Impact 4.x installation that was previously Impact 3.x then there is a possibility that the import action also brought across a legacy property that is dealt with in the TechNote "PolicyLogger legacy properties" [ link below]. 
RELATED INFORMATION
 PolicyLogger legacy properties [http://www-01.ibm.com/support/docview.wss?uid=swg21639440]
Variables reporting error and Policy name in ExceptionH [http://www-01.ibm.com/support/docview.wss?uid=swg21515394]