Title: IBM MustGather: Native OutOfMemoryErrors on Solaris - United States

Text:
MustGather; MustGather; MustGather; outofmemory; OOM; leak; memory; sun; solaris; outofmemoryerror; autopd; auto pd; MustGatherDocument; ProblemDeterminationTool; MustGatherEnablementTool; wasrun TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Processes on Solaris are a bit more adaptive when it comes to memory segment allocation. This reduces the likihood of any native memory problems. However like any 32bit process, or even 64bit processes, leaks can occur. This MustGather will provide instructions to collect data for Native OutOfMemoryErrors on the Solaris platform to be submitted to IBM Support. 

CAUSE
Native memory problems can occur when: 

 * JVM is unable to allocate memory to create or execute threads or JNI code 
 * Physical resource exhaustion

RESOLVING THE PROBLEM
The following steps outline how to troubleshoot java.lang.OutOfMemoryError errors on an Solaris platform when you suspect that there is a native memory leak 


1. Enable verbosegc. For details, see How to enable verbosegc on WebSphere Application Server [http://www.ibm.com/support/docview.wss?uid=swg21114927]. 

2. Stop the application server and clear the logs. 


NOTE: If requested by IBM Support, you will want to enable libumem at this time.

See "Using libumem to diagnose Native OutOfMemoryErrors or leaks on Solaris [http://www.ibm.com/support/docview.wss?rs=180&uid=swg21504345]" for information:


3. Start the application server.

4. Run the Solaris_ps.sh andSolaris_pmap.sh scripts (see attached scripts). 

These scripts will collect data at specified intervals. The frequency of these intervals are determined by the number you pass to the scripts. This number is the number of seconds for each interval.

For example, if the problem can be reproduced in 1 hour, pass the script 300 so that the documentation is collected every 5 minutes. For a problem that takes 2 days to reproduce, 1200 is a good sample period.


5. Wait for problem to re-occur.

6. Execute the following script (see attached) where PID is the process ID of the Java process.



./wsasprocess.shPID 

7. Stop the Application Server and the script. 

8. Obtain the kernel message logs, normally located as /var/adm/messages. (Older message logs often have '.0', '.1', '.2', ... etc. appended to the name of the log file should additional log files be needed.) 

9. Collect the following:  * 
 * -All files in install_root /profiles/ profile_name /logs/ server_name directory. 
   -A copy of server.xml located in install_root /profiles/ profile_name /config/cells/ cell_name /nodes
   -/ node_name /servers/ server_name directory 
   -All jtc*.log files created from running the scripts in Step 4 
   -All of the *.out files created by the wascpu.sh script in Step 6 
   
   
 * 
 * -Include all of the files from the install_root /logs/ server_name directory. 
   -A copy of server.xml located at install_root /config/cells/ cell_name 
   /nodes/ node_name /servers/ server_name directory 
   -All jtc*.log files created from running the scripts in Step 4 
   -All of the *.out files created by the wascpu.sh script in Step 6 
   

Follow instructions to send diagnostic information to IBM support [http://www.ibm.com/support/docview.wss?uid=swg21153852]. 

For a listing of all technotes, downloads, and educational materials specific to the Out of Memory component, search the WebSphere Application Server support site [http://www.ibm.com/software/webservers/appserv/was/support/] . RELATED INFORMATION
 Recording your screen to share with IBM Support [https://www.ibm.com/developerworks/community/blogs/IBMElectronicSupport/entry/recording_your_screen_to_share_with_support?lang=en]


Solaris_ps.sh [/support/docview.wss?uid=swg21104470&aid=2] [/support/docview.wss?uid=swg21104470&aid=1]Solaris_pmap.sh [/support/docview.wss?uid=swg21104470&aid=4] [/support/docview.wss?uid=swg21104470&aid=3]wsasprocess.sh [/support/docview.wss?uid=swg21104470&aid=6] [/support/docview.wss?uid=swg21104470&aid=5] 


Cross reference information Segment Product Component Platform Version Edition Application Servers Runtimes for Java Technology Java SDK