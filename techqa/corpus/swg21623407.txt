Title: IBM Using WMQ line commands to define a local queue, to put, browse and get a message - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 You want to know how to use line commands in WebSphere MQ (WMQ) to define a local queue, to put, browse and get a message, and to clear a queue.


CAUSE
This technote is a companion to the following set of IBM SupportTV videos on YouTube:



 * How do I create a queue in MQ Explorer? [http://www.youtube.com/watch?v=cXeeGxM4occ]
 * How do I put a message into a queue using the MQ Explorer? [http://www.youtube.com/watch?v=OJJ7mAOrzUU]
 * How do I browse a message using the MQ Explorer? [http://www.youtube.com/watch?v=mp2Uts62T18]
 * How do I delete the messages in a queue using the MQ Explorer? [http://www.youtube.com/watch?v=cDTqwGb_pak]
 *  
   
   

ANSWER
+ To create a local queue 

Login as an MQ Administrator

runmqsc QM_TEST
DEFINE QLOCAL(Q1)
or you can use the first 2 characters QL (for QLocal) that make the command unique:
DEFINE QL(Q1)
end


+ To ensure that non-Administrator users have the proper authority

The MQ Administrator does not need additional authority to access queues.

But if a non-Administrator tries to use the above queue, that user receives the following return code:
2035 MQRC_NOT_AUTHORIZED
To avoid the above return code, the MQ Administrator must provide the following authorities for this user, assuming that the user is "fulano" and belongs to the group "mqusers".

Allow the user to connect to the queue manager, to inquire about objects and to display information
Specify the user name (flag -p):
setmqaut -m QM_TEST -t qmgr -p fulano +connect +inq +dsp 

Or specify the group name (flag -g):
setmqaut -m QM_TEST -t qmgr -g mqusers +connect +inq +dsp 


Allow the user to access a queue to inquire, browse, get, put and display messages and information.
Specify the user name (flag -p):
setmqaut -m QM_TEST -t q -n Q1 -p fulano +inq +browse +get +put +dsp

Or specify the group name (flag -g):
setmqaut -m QM_TEST -t q -n Q1 -g mqusers +inq +browse +get +put +dsp


+ To put a message

You can use these two samples.
To end the sample, press ENTER without typing any characters.

1) amqsput (for binding mode: using interprocess communications in the local machine)
Example: Using annotation between parenthesis - do NOT enter the text in the annotation
amqsput Q1 QM_TEST
Sample AMQSPUT0 start
target queue is Q1
TEST-PUT-1 (then press ENTER)
(no characters, just press ENTER)
Sample AMQSPUT0 end

2) amqsputc (for client mode: using TCP connection)
Example: Not using annotations between parenthesis.
You need to specify how the MQ client reaches the host. Using MQSERVER for this example:
Unix: export MQSERVER=SYSTEM.DEF.SVRCONN/TCP/'hostname.com(1414)'
Windows: set MQSERVER=SYSTEM.DEF.SVRCONN/TCP/hostname.com(1414)
amqsputc Q1 QM_TEST
Sample AMQSPUT0 start
target queue is Q1
TEST-PUT-2

Sample AMQSPUT0 end


+ To browse all the messages in a queue

You can use these two samples to do a non-destructive get of all the messages in a queue.
The messages remain in the queue after they are displayed.

1) amqsbcg (for binding mode: using interprocess communications in the local machine)
Example: For brevity, showing only the first message in the queue.
amqsbcg Q1 QM_TEST

AMQSBCG0 - starts here
**********************
MQOPEN - 'Q1'

MQGET of message number 1
****Message descriptor****

StrucId : 'MD ' Version : 2
Report : 0 MsgType : 8
Expiry : -1 Feedback : 0
Encoding : 546 CodedCharSetId : 1208
Format : 'MQSTR '
Priority : 0 Persistence : 0
MsgId : X'414D5120514D5F37303120202020202080A1F950043E0020'
CorrelId : X'000000000000000000000000000000000000000000000000'
BackoutCount : 0
ReplyToQ : ' '
ReplyToQMgr : 'QM_701 '
** Identity Context
UserIdentifier : 'rivera '
AccountingToken :
X'0431303033000000000000000000000000000000000000000000000000000006'
ApplIdentityData : ' '
** Origin Context
PutApplType : '6'
PutApplName : 'amqsput '
PutDate : '20130125' PutTime : '15422875'
ApplOriginData : ' '

GroupId : X'000000000000000000000000000000000000000000000000'
MsgSeqNumber : '1'
Offset : '0'
MsgFlags : '0'
OriginalLength : '-1'

**** Message ****

length - 10 bytes

00000000: 5445 5354 2D50 5554 2D31 'TEST-PUT-1 '

2) amqsbcgc (for client mode: using TCP connection)
You need to specify how the MQ client will reach the host. 
See the example about using MQSERVER in the section about "To put a message".

amqsbcgc Q1 QM_TEST
Results: Same as in item 1 above.


+ To get all the messages in a queue

You can use these two samples to do a destructive get of all the messages in a queue.
The messages are deleted from the queue after they are displayed.
These commands wait for 30 seconds for new messages to arrive. If no messages arrive during that period, the command ends.

1) amqsget (for binding mode: using interprocess communications in the local machine)
Example:
amqsget Q1 QM_701
Sample AMQSGET0 start
message <TEST-PUT-1>
message <TEST-PUT-2>
no more messages
Sample AMQSGET0 end

2) amqsgetc (for client mode: using TCP connection)
You need to specify how the MQ client will reach the host. 
See the example about using MQSERVER in the section about "To put a message".
Example:
amqsgetc Q1 QM_TEST
Results: Same as in item 1 above.


+ To clear all the messages in a queue

The amqsget or amqsgetc commands can be used to clear all the messages in a queue: each message is deleted after it is read.
There is another way to delete all the messages in the queue. Actually, it is faster because the messages are not read.
However, only an MQ Administrator can use this method because it is done under the runmqsc command. 

runmqsc QM_TEST

CLEAR QLOCAL(Q10)
or using the short form:
CLEAR QL(Q10)
end



 

PRODUCT ALIAS/SYNONYM
 WMQ WebSphere MQ