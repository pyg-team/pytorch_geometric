Title: IBM Performance improvements and fixes in ILMT and TAD4D - United States

Text:
ilmt; tad4d; performance; improvements; fixes TECHNOTE (FAQ)

QUESTION
 What are the most recent performance improvements and fixes in IBM License Metric Tool and Tivoli Asset Discovery for Distributed 7.2.2? How to implement them? 

ANSWER
These features are available starting from ILMT/TAD4D 7.2.2.22.
---

1. Caching values for the ‘Download Parameters‘process and collection of the total time spent on handling various requests.

Values requested by agents via the ‘Download Parameters‘service do not change often however the requests are performed very frequently in large environments. This fix introduces a cache which is used to hold the values and prevent querying the database every time.

It should result in 200-500 fewer database connections every minute. The cache takes approximately 10 MB (for an environment with 20 000 agents using the default settings) and is synchronized with the database once per hour.

A new server property called 'agentCacheRefreshInterval' is introduced - this parameter determines the cache refresh period. Its default value is set to 60 minutes. It can be changed using the 'setserverconf' CLI command.

---

2. Performance boost for the VM manager connector task (cached UUIDs and changes in the logic of the 'Update Topology' process).

Another cache is used when processing information coming from VM Managers. Additionally, unnecessary updates are removed from the database.

Primary gain: much lower possibility of database locks during agents’ data uploads.

A new server property called 'storeHwDataForAllVMManagerNodes' is introduced- this parameter determines whether data from all hosts (ESX(i) / Hyper-V servers) is to be stored in our database or only from the ones on which there is at least one virtual machine with our agent installed.

The default value is set to FALSE, so from now on there will be NO data kept about hosts without guests with LMT/TAD4D agents in our database unless the configuration is changed. This parameter value can be changed using the 'setserverconf' command.

---

3. Events framework - a new table to store events reported by the server and a number of events.

A new table in the database ADM.EVENT

ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
ETIME TIMESTAMP NOT NULL DEFAULT CURRENT TIMESTAMP,
CATEGORY SMALLINT NOT NULL, -- 0-info,2-warning,3-error
SOURCE SMALLINT NOT NULL, -- 0-admin,1-msgHandler,2-vmmanager 
SOURCE_ID BIGINT, -- reference to other table (adm.agents or virt.host)
MSG_ID SMALLINT NOT NULL, -- known message id (for future use - message id for globalization purposes)
SUMMARY VARCHAR(1024) NOT NULL, -- short description
STACK_TRACE VARCHAR(2048) -- in case of caught exception

The events are stored in the database for a number of days specified by the parameter 'KEEP_EVENTS_DAYS' in table ADM.CONTROL 

We will be adding new events in the future. Currently we store the number of 'INTERNAL ERRORS' reported by agents, start and stop of a few background processes (in the future it will be used to measure the impact of background tasks on the server<->agents communication)