Title: IBM WebSEAL sends RST instead of FIN when persistent-con-timeout occurs after applying TAM 6.1.1 FP12 - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 Is this expected behavior change ? 

CAUSE

APAR: IV47280
Abstract: FOR FIRST READ IF TIMED OUT OR ERROR, FLAG THE SOCKET TO PREVENT WRITING A RESPONSE

1) Worker thread performance improvement
Flags socket error which prevents the delays when writing the error page on a socket that already failed
Minimizing the unnecessary worker thread delay seen by customers

2) All non-first read/write already had this exact same behavior, the first read/write had a different behavior
After this change all first and non-first read/write timeout or error behaves exactly the same way.

This "the same way" is the changed behavior. After applying this APAR, WebSEAL sends RST instead of FIN for both timeout and error situation.

Here is the original problem which APAR IV47280 intend to solve.
1. A backend server hung or disappeared, and all threads need to wait for the response from the backend server until http(s)-timeout.
2. Incoming requests are stored in backlog until http(s)-timeout. But since http(s)-timeout is long, clients closed the session before exceeding http(s)-timeout.
3. After exceeding http(s)-timeout, worker threads start to take requests from the backlog, but there are no clients.
Before this APAR, WebSEAL need to wait for exceeding client-connect-timeout to discard such sessions. By applying this APAR, WebSEAL threads can discard such sessions quickly (which caused RST), and can start taking new incoming requests.




ANSWER
 

Yes. This is the intentional changed behavior by APAR IV47280.

See also below URL, especially the picture at the bottom section "Front-end Persistent Connection Timeout in seconds" to understand the affect of active worker threads on the Persistent Connection Timeout.

RELATED INFORMATION
 The effect of load on front-end persistent-con-timeout [http://www-01.ibm.com/support/docview.wss?uid=swg21682266]