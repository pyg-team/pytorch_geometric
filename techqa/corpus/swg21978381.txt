Title: IBM Modeler stream execution against Analytic Server engine is slow or never completes due to local execution. - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Modeler streams when executed against Analytic Server are regularly broken into smaller tasks (jobs). When the input data for one of these tasks is under a certain threshold (default 128MB) the execution of the task will be performed locally by Analytic Server. Depending on the task at hand and the host hardware this may cause poor performance. 

SYMPTOM
Modeler stream execution times are much longer than expected.


DIAGNOSING THE PROBLEM
You can verify that local tasks are being executed by examining the Analytic Server log file (specifically messages.log) for entries showing the spawning of local execution threads. These will look like the following: 

2016-03-03 06:34:07,316 | : | | | | | INFO | com.spss.ae.transform.sql.reader.SqlLocInfo | X10 worker thread-7 => SELECT * FROM "nzhou_jTDDDSTERADATA" 
Specifically search for the part in bold (X10 worker thread). 

RESOLVING THE PROBLEM
You can control the local execution with the following two settings: 


Ambari AS configuration :

mmr.upper.bound.threshold=10485760
mmr.threads=4 

mmr.upper.bound.threshold controls the data size needed to trigger local execution. The example above will only process input data of 10MB or less in local threads. 

mmr.thread=4 setting controls how many cores Analytic Server will use to execute local tasks. Each task require its own memory allocation (how much depends on the task) so setting this too high can consume resources and slow overall performance. Setting it too low can cause tasks to queue and also affect total performance. Setting it to 4 should be a safe setting, but likely not optimal. This should ideally be set to maximize the cores used so long as memory resources are available and the execution does not cause contention for CPU resources. For instance if I had a dedicated machine for Analytic Server with 8 cores setting this to 6 or 7 might be a good choice (or perhaps even 8 as the main AS server thread likely would not need a dedicated core for itself, depending on various load factors).

These settings may not resolve the problem but can tried if you see that local execution threads are being spawned in conjunction with a stream that is taking very long (perhaps long enough to seem like it never ends).

RELATED INFORMATION
 Need more help? Our Analytic Server forum is Live! [https://developer.ibm.com/answers/search.html?f=&type=question&redirect=search%2Fsearch&sort=relevance&q=%2B[spss]%2B[modeler]%2B[bigdata]]