Title: IBM How to test a IBM Transformation Extender Advanced Transform Service outside of the hosting application with SPESample - United States

Text:
transform SPESample map TECHNOTE (FAQ)

QUESTION
 How to test a IBM Transformation Extender Advanced Transform Service outside of the hosting application with SPESample. 

ANSWER
Testing the Transform Service with SPESample using a IBM Transformation Extender (ITX) map. 

When attempting to troubleshoot ITXA Transform issues you can also try using the SPESample code supplied with ITXA in an effort to determine if the issue is isolated to ITXA itself or the integration with the hosting/invoking application. If you can reproduce an issue using the SPESample code it will help the ITXA support team when investigating your case. 

 

To use the SPESample code to test your Transformation, take the following steps and let the ITXA L2 support group know the results of this test as well. 

 

 * Start the SPE Console: Windows 
   
    * Open the Standards Processing Engine Console window (Start - All Programs - IBM Standards Processing Engine 9.0.0 - SPE Console Window 9.0.0). The version label, i.e. 9.0.0, of SPE will vary based on what you have installed.
   
   
   UNIX 
   
    * Open a terminal session to the UNIX server. 
    * Change directory to the bin subdirectory of the ITXA installation and start the SPE console by typing: . ./spesetup.sh
   
   
   
 * Ensure the ITXA database has been started. If your environment uses the Derby database, from the SPE Console window, type:  * Windows: spederbystart.bat 
    * UNIX: spederbystart.sh 
   
   

 * From this same SPE Console window, change directory to a directory of your choosing and run the transform with syntax of: Windows
   java com.ibm.spe.sample.SPESample api=transform option=MapName:<ITX Map Name> option=in1:"<input card 1 path>\<input card 1 file name>" option=in2:"<input card 2 path>\<input card 2 file name>" output="<output path>" option=out1:"<output card 1 file name>" option=out2:<output card 2 file name>" 
   
    
   
   UNIX
   java com.ibm.spe.sample.SPESample api=transform option=MapName:<ITX Map Name> option=in1:"<input card 1 path>/<input card 1 file name>" option=in2:"<input card 2 path>/<input card 2 file name>" output="<output path>" option=out1:"<output card 1 file name>" option=out2:<output card 2 file name>"
   
   


Using the UNIX syntax as an example, if you have the following:  * A ITX map named, My_ITX_Map 
 * Input card 1 is: /home/mydata/input/Input_1.txt 
 * Input card 2 is: /home/otherdata/input/Input_2.txt 
 * Output path: /home/output/data/goes_here 
 * Output card 1: Output_from_card_1.dat 
 * Output card 2: Output_from_card_2.txt 

then the transform api syntax would be: 
 *  

java com.ibm.spe.sample.SPESample api=transform option=MapName:My_ITX_Map option=in1:"/home/mydata/input/Input_1.txt" option=in2:"/home/otherdata/input/Input_2.txt" output="/home/output/data/goes_here" option=out1:"Output_from_card_1.dat" option=out2:"Output_from_card_2.txt" 

Note:  * The ITX map must be compiled for the associated runtime platform 
 * The ITX Maps extension must be renamed to have be mmc 
 * The ITX map must be deployed/imported to the ITXA repository 
 * All output files will be saved to the directory defined by the value following the output= entry. 
 * If you have more (or fewer) input / output cards, add / delete the option=inX or option=outY value pairs 
 * If you envelopes invoke a Sterling B2B Integrator Business Process defined with the SPE Driver entry, temporarily remove this Business Process from your envelope configuration to be able to use the SPESample



PRODUCT ALIAS/SYNONYM
 ITX ITXA SPE