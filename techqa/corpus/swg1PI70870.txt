Title: IBM PI70870: ConcurrentModificationException in AppClassLoader when using the global library - United States

Text:
  FIXES ARE AVAILABLE
16.0.0.4: WebSphere Application Server Liberty 16.0.0.4 [http://www-01.ibm.com/support/docview.wss?uid=swg24042990]
17.0.0.1: WebSphere Application Server Liberty 17.0.0.1 [http://www-01.ibm.com/support/docview.wss?uid=swg24043339]


SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  When using global shared libraries, this creates a parent
   classloader for all application classloaders.  When class
   transformers (such as JPA entity enhancers) are registered
   with application classloaders, they are inadvertently added
   to the global shared library loader too. This registration
   can occur on one thread for one application, while another
   application on another thread could be loading a class which
   iterates over the registered class transformers.  This would
   result in a ConcurrentModificationException.
   
   
    
   
   

LOCAL FIX

PROBLEM SUMMARY
 *  ****************************************************************
   * USERS AFFECTED:  All users of IBM WebSphere Application      *
   *                  Server Liberty                              *
   ****************************************************************
   * PROBLEM DESCRIPTION: ConcurrentModificationException in      *
   *                      AppClassLoader when using the global    *
   *                      library                                 *
   ****************************************************************
   * RECOMMENDATION:                                              *
   ****************************************************************
   When using a global shared library it is possible that a user
   may see a ConcurrentModificationException during application
   startup - particularly if the user is registering class file
   transformers (class file transformers are registered when using
   certain features, such as jpa-2.1, or other third party
   software, such as Spring).  By default the server will use the
   global library if any files exist in the
   ${shared.config.dir}/lib/global or
   ${server.config.dir}/lib/global directories - otherwise, the
   global library must be defined in the server configuration.
   
   The ConcurrentModificationException will look something like
   this:
   java.util.ConcurrentModificationException
   at
   java.util.ArrayList$Itr.checkForComodification(ArrayList.java:90
   1)
   at java.util.ArrayList$Itr.next(ArrayList.java:851)
   at
   com.ibm.ws.classloading.internal.AppClassLoader.findClass(AppCla
   ssLoader.java:290)
   at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
   at
   com.ibm.ws.classloading.internal.AppClassLoader.findOrDelegateLo
   adClass(AppClassLoader.java:469)
   at
   com.ibm.ws.classloading.internal.AppClassLoader.loadClass(AppCla
   ssLoader.java:441)
   at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
   at
   com.ibm.ws.cdi.interfaces.CDIUtils.loadClasses(CDIUtils.java:155
   )
   at
   com.ibm.ws.cdi.impl.weld.BeanDeploymentArchiveImpl.scan(BeanDepl
   oymentArchiveImpl.java:243)
   at
   com.ibm.ws.cdi.impl.weld.WebSphereCDIDeploymentImpl.scan(WebSphe
   reCDIDeploymentImpl.java:523)
   at
   com.ibm.ws.cdi.impl.CDIContainerImpl.applicationStarting(CDICont
   ainerImpl.java:117)
   at
   com.ibm.ws.cdi.liberty.CDIRuntimeImpl.applicationStarting(CDIRun
   timeImpl.java:349)
   at
   com.ibm.ws.container.service.state.internal.ApplicationStateMana
   ger.fireStarting(ApplicationStateManager.java:29)
   at
   com.ibm.ws.container.service.state.internal.StateChangeServiceIm
   pl.fireApplicationStarting(StateChangeServiceImpl.java:51)
   at
   com.ibm.ws.app.manager.module.internal.DeployedAppInfoBase.preDe
   ployApp(DeployedAppInfoBase.java:788)
   at
   com.ibm.ws.app.manager.module.internal.DeployedAppInfoBase.deplo
   yApp(DeployedAppInfoBase.java:815)
   at
   com.ibm.ws.app.manager.war.internal.WARApplicationHandlerImpl.in
   stall(WARApplicationHandlerImpl.java:66)
   at
   com.ibm.ws.app.manager.internal.statemachine.StartAction.execute
   (StartAction.java:141)
   at
   com.ibm.ws.app.manager.internal.statemachine.ApplicationStateMac
   hineImpl.enterState(ApplicationStateMachineImpl.java:1192)
   at
   com.ibm.ws.app.manager.internal.statemachine.ApplicationStateMac
   hineImpl.run(ApplicationStateMachineImpl.java:805)
   at
   java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExec
   utor.java:1142)
   at
   java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExe
   cutor.java:617)
   at java.lang.Thread.run(Thread.java:745)
   
   This occurs because there are two applications that share the
   global library classloader as a parent.  One application has
   finished registering class file transformers and proceeds to
   load classes as part of it's startup processing.  The second
   application is still configuring the classloaders and attempts
   to register class file transformers with the global shared
   library - this adds a transformer to the global library loader
   while the other loader is iterating over them, resulting in the
   ConcurrentModificationException.
   
   The server really should not be registering class file
   transformers in the global shared library loader, since this
   loader is shared amongst all applications in the server.
   
   
    
   
   

PROBLEM CONCLUSION
 *  The fix for this APAR is to ensure that the server does not
   register class file transformers in the global shared library
   classloader.
   
   The fix for this APAR is currently targeted for inclusion in fix
   pack 16.0.0.4.  Please refer to the Recommended Updates page for
   delivery information:
   http://www.ibm.com/support/docview.wss?rs=180&uid=swg27004980 [http://www.ibm.com/support/docview.wss?rs=180&uid=swg27004980]
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   PI70870
   
   
 * REPORTED COMPONENT NAME
   WAS LIBERTY COR
   
   
 * REPORTED COMPONENT ID
   5725L2900
   
   
 * REPORTED RELEASE
   855
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt / Xsystem
   
   
 * SUBMITTED DATE
   2016-10-18
   
   
 * CLOSED DATE
   2016-11-03
   
   
 * LAST MODIFIED DATE
   2016-11-03
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   WAS LIBERTY COR
   
   
 * FIXED COMPONENT ID
   5725L2900
   
   

APPLICABLE COMPONENT LEVELS
 * R855 PSY
   UP