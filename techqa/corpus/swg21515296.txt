Title: IBM Limiting update scope via GetByKey result set none unique key DataType - United States

Text:
netcool/impact; netcool; impact; nci; get; look; up; lookup; look-up; by; getbykey; unique; key; puk; primary; field; datatype; data; type; item; dataitem TECHNOTE (FAQ)

QUESTION
 When updating a single row of a result set acquired via GetByKey from a DataType configured with key fields that contain none unique values 

CAUSE
One finds in attempting to update a single row of the result set or ones result set is supposed to be limited to a single row - for example:


 * 
 * 
 * 
 * 1
 * 


the SQL update then updates the entire result set or not just the single row in the result set. 

This is because the outgoing SQL is just limited to the key fields of the DataType, not a unique field of the particular row. In this example the DataType against the alerts.status table of the ObjectServer uses the key fields of Node and Class (and an "order by" of Class desc). The outgoing select SQL reads: 

 * 


This acquires a single row, but there are multiple rows in alerts.status table of the ObjectServer that also have these values for Node and Class. The outgoing SQL update statement from the Policy section: 

 * 
 * 
 * 


then reads: 

 * 


There is no limitation in the scope of this update to keep it focused on the single event in the result set. 


ANSWER
One can include an additional unique field in the DataType key fields, but one does not need to use this additional field in the GetByKey select statement. 


Using the above example one can include the Identifier field in the DataType key fields, but keep the same value for the MyKeyValue variable - so it remains:



 * 
 * 
 * 


and the field update section still reads: 

 * 
 * 
 * 


The outgoing SQL select statement still reads: 

 * 


but the update SQL then reads: 

 * 


So, it includes the unique Identifier field value of the target row in the update statement and prevents the update from updating all events that happen to have the same Node and Class.