Title: IBM Secondary node fails to start after being added to the cluster with javax.jcr.RepositoryException exception - United States

Text:
cluster; jcr exception; secondary node; database-transfer TECHNOTE (TROUBLESHOOTING)

PROBLEM
After successfully federating and clustering a secondary IBM® WebSphere® Portal node with the cluster-node-config-post-federation and cluster-node-config-cluster-setup tasks, the node may fail to start during the initialization of the JCR repository.

SYMPTOM
The <wp_profile>/logs/<Portal_server_name>/SystemOut.log will contain the following error:
[8/12/08 16:43:13:040 EDT] 00000022 ServletWrappe E Uncaught init() exception thrown by servlet InitServlet
[8/12/08 16:43:13:045 EDT] 00000022 ServletWrappe E Deregister the mbean because of uncaught init() exception thrown by servlet InitServlet: javax.servlet.ServletException: Unable to initialize RepositoryFactory due to exception of type: javax.jcr.RepositoryException with message: Unable to initialize Repository: Default..
at com.ibm.icm.jcr.init.InitServlet.init(InitServlet.java:57)
at javax.servlet.GenericServlet.init(GenericServlet.java:256)

---- Begin backtrace for Nested Throwables
javax.jcr.RepositoryException: Unable to initialize RepositoryFactory due to exception of type: javax.jcr.RepositoryException with message: Unable to initialize Repository: Default..
at com.ibm.icm.jcr.RepositoryFactory.init(RepositoryFactory.java:313)

Caused by: javax.jcr.RepositoryException: Unable to initialize Repository: Default.
at com.ibm.icm.jcr.RepositoryImpl.getRepository(RepositoryImpl.java:401)


CAUSE
The problem will occur if the primary node was clustered while the Portal was still using Derby as the database repository and then subsequently, after clustering, the Portal database was transferred to an external database, such as IBM DB2®, Oracle®, or Microsoft® SQLServer™ 2005. 

This results in the secondary node extracting Derby values from DMGR when it is added to the cluster instead of the new database repository values.


RESOLVING THE PROBLEM
To prevent this problem, transfer the Portal database to an external database before clustering the primary node. 

If the problem has already occurred, it can be resolved by performing the following steps: 

For Portal version 6.1: 

1. Stop Portal on the secondary node. 

2. Copy the <wp_profile>/PortalServer/jcr/lib/com/ibm/icm/icm.properties file from the primary node and replace the icm.properties file on the secondary node with this file(make sure you backup the original icm.properties file). 

3. Start Portal on the secondary node. 

For Portal version 7.0: 

1. Stop Portal on the secondary node. 

2. Copy the <wp_profile>/PortalServer/jcr/lib/com/ibm/icm/icm.properties file from the primary node and replace the icm.properties file on the secondary node with this file (make sure you backup the original icm.properties file). 

3. Open the icm.properties file on the secondary node and edit the jcr.binaryValueFileDir and jcr.textsearch.indexdirectory paths:
ie. 

 Primary Node -> jcr.binaryValueFileDir=opt/IBM/WebSphere/<primary_profile>/PortalServer/jcr/bina
ryValue
Second Node -> jcr.binaryValueFileDir=opt/IBM/WebSphere7/<secondary_profile>/PortalServer/jcr
/binaryValues

Primary Node -> jcr.textsearch.indexdirectory=opt/IBM/WebSphere/<primary_profile>/PortalServer/j
cr/searchIndexes
Second Node -> jcr.textsearch.indexdirectory=opt/IBM/WebSphere7/<secondary_profile>/PortalSer
ver/jcr/searchIndexes

4. Start Portal on the secondary node.