Title: IBM Java VerifyError when profiling Java classes with certain constructors using Rational Application Developer or Rational Agent Controller - United States

Text:
java.lang.VerifyError; JVMVRFY017 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 You may get Java VerifyError when profiling Java classes with certain constructors using IBM Rational Application Developer for WebSphere Software or Rational Agent Controller. 

SYMPTOM
When running a Java application in profiling mode, you may get an error similar to the following:

java.lang.VerifyError: JVMVRFY017 <init>does not call this <init>or super <init>; class=test/PerformanceExample, method=<init>()V, 

This may cause the Java application to run improperly. 

This could happen on a stand-alone Java application or a web application running on WebSphere Application Server. 

This symptom only shows up when profiling with Execution Time Analysis using the JVMTI Java profiler. 

It does not show up with the other JVMTI Java Profiler analysis types (Memory Analysis and Thread Analysis), or profiling using the Health Center agent. 

This problem only shows up when profiling with a JDK that's published in July 2014. 

It affects Java 6 and 7 JDKs.


CAUSE
The JDK is indicating that the constructor of the instrumented class does not meet some Java requirement.


DIAGNOSING THE PROBLEM
To find out if this could be the problem for the VerifyError, check the JDK level that is used for profiling the application. 

 * The JDK level can be obtained from a command such as java -fullversion run in the bin directory of the JDK/JRE. If the Java version shows a date of July 2014, this JDK is likely affected by this problem.


The JDK used for profiling depends on the user scenario: 

 1. Local profiling of Java application uses the JDK specified in Window > Preferences > Agent Controller > Integrated Agent Controller, which by default is the JDK in the Rational Application Developer's install directory under the jdk subdirectory. 
 2. Remote profiling of a Java application uses the JRE in the Rational Agent Controller install, in the AgentController/jre subdirectory. 
 3. Local or remote profile on WebSphere Application Server uses the JDK that the server is running with.

RESOLVING THE PROBLEM
WORKAROUND: 

Use a newer version of Rational Application Developer or Rational Agent Controller which include a newer version of the JDK that does not have this problem. 


If you still want to continue using the version of Rational Application Developer or Rational Agent Controller which has this problem, you can use one of the following workarounds: 

Select Health Center Agent when launching profiling in Rational Application Developer or pick up and use a JDK/JRE that is released on or after October 2014 which does not have this problem. 

 

To change the JRE used by the profiler: 

For local Java application profiling scenarios, change the JRE used by the Integrated Agent Controller (IAC): 

 1. Click Window > Preferences > Agent Controller > Integrated Agent Controller. 
 2. Click the Modify link beside the Java executable that will be used by IAC field and add the new JRE. 
 3. Click Agent Controller > Integrated Agent Controller, select Disable, and then click Apply. 
 4. Select Enable, click Apply, and then click OK. The new JRE will take effect.


 

For local or remote profiling on server: 

 1. Change to the WebSphere Application Server install bin directory. 
 2. Open the file managesdk.bat and change the JDK to the new JDK. 
 3. Restart the server.


 

For remote Java profiling: 

 1. Change to the AgentController/bin subdirectory in the Rational Agent Controller install directory. 
 2. Run the acserver stop command to stop the Agent Controller. 
 3. Run the SetConfig command and enter the new JRE location when asked to specify the fully qualified path of javaw.exe. Hit Enter for the other two options to keep the original values. 
 4. Run the acserver start command to start the Agent Controller with the new JRE.