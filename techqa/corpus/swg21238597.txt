Title: IBM Deletion of a Web Service or of Web Services from a project and regeneration - United States

Text:
RAD; RSA; WSAD; v5; v6; web service; gen; generate; generation; delete; generated; deploy; regenerate; webservice; SDP; Web Service Definition Language; 62552082000; PMR 62552 082 000; 1238597 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Sometimes it is not possible to regenerate a web service, when an existing generated web service exists in IBM® Rational® Application Developer (RAD) version 6.x. This technote explains how to delete a generated web service or its associated files or how to delete such a web service along with its associated files. 

RESOLVING THE PROBLEM
 

It should always be possible to regenerate a web service either from a WSDL (top-down) or from some Bean (bottom-up) that is JAX-RPC 1.x specification compliant. This is especially the case for top-down.

You might encounter problems in regenerating a web service as noted about the limitation documented in this RAD 6.0.x Help item (See Related Information item): Limitations of Web services > Problems encountered when using the Web Services wizards 

 * 

In general, it should not be necessary to delete these files. If you encounter problems regenerating the web service, especially for bottom-up mappings, it might be necessary to first remove these files. 
 * Note:
 * 
 * 
 * WebSphere Version 6 Web Services Handbook Development and Deployment
 * 
 * Develop Web services with Application Developer V6.0
 * -> Creating a Web Service from a JavaBean™ 
   -> Generated Files: 
   -> Figure 16-10 Wizard-generated files in the Project Explorer 
 * 
 * 
 * 
 * 
 * 
 * 
 * WebSphere Version 5.1 Application Developer 5.1.1 Web Services Handbook
 * 
 * Web services development overview
 * -> Figure 13-8 J2EE Navigator view after the generation of the Web service, for WebSphere Studio Application Developer (WSAD) version 5.1.x 



Here is some generally useful related information on deleting web services from a project: 

J2EE Web Service Deletion 

To delete a J2EE JavaBean (servlet) Web service, the webservice-description must be removed from webservices.xml and the servlet referenced by the servlet-link element must be removed from web.xml. To delete a J2EE™ EJB Web service, the webservice-description must be removed from webservices.xml. At the user’s option, the following may also be deleted:  1. Relevant elements in container-specific descriptors, if any (for example, the WebSphere ibm-webservices-ext.xmi and ibm-webservices-bnd.xmi) 
 2. The corresponding JAX-RPC mapping file, if any 
 3. The service element in the WSDL or the whole WSDL document 
 4. The Java deployment code 
 5. The Java development code (SI, SEI, Beans, Holders, and so on) 
 6. The Java or EJB implementation class 
 7. For EJB implementations, the ejb element in ejb-jar.xml 
 8. Any local Web service clients that were using the service


Sometimes it is easier to start over by deleting all of the above web services descriptors, including webservices.xml, and all of the files listed. 

J2EE Web Service Client Deletion 

To delete a J2EE Web service client, the Web service reference must be removed from webservicesclient.xml (J2EE 1.3), web.xml, ejb-jar.xml or application-client.xml (J2EE 1.4). J2SE JAX-RPC Web service clients, WebSphere or Axis, are not captured in a deployment descriptor, and are not shown in the Project Explorer, although a requirement for exactly that might be raised in a future release. Until then, deleting a J2SE Web service client amounts to simply deleting Java resources. 

At the user’s option, the following can also be deleted: 
 1. Relevant elements in container-specific descriptors, if any (for example, the 
    WebSphere ibm-webservicesclient-ext.xmi and ibm-webservicesclient-bnd.xmi) 
 2. The corresponding JAX-RPC mapping file, if any 
 3. The Java deployment code 
 4. The Java development code (SI, SEI, Beans, Holders, and so on)
    

 * Sometimes it iseasier to start over by deleting all of the above web services descriptors, including 
 * webservices.xml
 * , and all of the files listed.
 * 
 * 
 * Notes:
 * Remove the EAR from the server before doing any of this. If there is any doubt that the EAR had not been removed, you can bring up the admin console for a started WAS v6 and remove the installed Enterprise Application (EAR) containing this web service . You will need to do at least two "Save(s)" in the admin console after any change. 
 * The web app client (or J2EE application client) should be in a separate EAR from the one containing the actual generated web service. 
 * Its a good practice to have the target WebSphere server started when generating the web service.



Updating a Web Services Description Language (WSDL) 

If you are just updating your WSDL/existing web service, you can regenerate web services as many times as needed. You might want to save any java implementation if they are still to be used. More on this later. As a precaution you might want first to delete the web services generated items mentioned earlier. 

If you remove some types from the WSDL, those java classes, ser, dser generated by the wizard are still there. This is dead code and should be deleted manually. If you are not sure of what to delete, the quickest way is just to do everything from scratch: create a new dynamic web project and regenerate the web services from the new WSDL. 

Again, if you are adding new types or extend existing ones in a WSDL, you should be able to generate web services as many times as needed. Make sure to save your existing implementation code for those operation/methods that will still be present for the previous unchanged types. 
 * Note:
 * 
 * 
 * 


If you still have problems, contact the IBM Rational Customer Support team for Rational Application Developer and send a self-contained testcase (including server and client web services client projects). 

RELATED INFORMATION
 RAD v6 Help: Limitations of Web services [http://publib.boulder.ibm.com/infocenter/rtnlhelp/v6r0m0/index.jsp?topic=/com.ibm.etools.webservice.doc/ref/rlimit.html]
WebSphere Version 6 Web Services Handbook Development a [http://www.redbooks.ibm.com/abstracts/sg246461.html?Open]


 



Cross reference information Segment Product Component Platform Version Edition Software Development Rational Software Architect Web Services Development Linux, Windows 6.0, 6.0.0.1, 6.0.1.1, 7.0, 7.0.0.1, 7.0.0.2 Software Development WebSphere Studio Application Developer Web Service Linux, Windows 5.1.2