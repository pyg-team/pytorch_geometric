Title: IBM Passing the input to an output queue without mapping. - United States

Text:
WDI WMQ MQ Advanced adapter passthrough passthru pass through thru mapswitch switch TECHNOTE (FAQ)

QUESTION
 Depending on the content of an EDIFACT segment. The input message should be passed without any modifications to an output queue. For example: A COPRAR message should be mapped to an in-house format, except when the content of the LOC segment is K1742, the input message should be passed to the output queue without any modifications. 

ANSWER
While there is no direct WDI feature or mapping command in support of a conditional pass-through as such, one option is to do a MapSwitch when the LOC segment has K1742 to a one-to-one EDI to EDI DT mapping of every EDIFACT loop, segment and element. However, this would not really be a "copy" as such because a mapping could be missed, the EDI control numbers would be newly assigned, interchange date/time stamps different, etc. There is an alternative solution of conditionally directing/sending the input as received by the WDI MQ adapter to another MQ queue. It has a known caveat as will be discussed later.

The alternative solution involves using MapSwitch as well, but also utilizes WDI command chaining feature to chain to a 2nd Service profile so as to do a PERFORM SENDFILE on the original input EDI message. For example, say your input queue is named EDI_IN, which would also be the name of your existing Service profile which starts the PERFORM TRANSFORM on your original EDIFACT to ADF map. This invokes the current map and also has the conditional MapSwitch when the LOC segment has K1742. The switched-to map would then be used to generate any output in any format (ADF, XML, EDI) to a file with a logical name of say, SWITCH. What is actually output to this new file is unimportant for the purposes of the pass-through context. The important thing is that something, if even just one element, is output such that the file is created. Then, assuming you have a Service profile matching your logical file name, e.g. SWITCH, this will be invoked as the next in the command chain. Then, in the SWITCH service profile, you would have something like: 

PERFORM SENDFILE WHERE REQID(EDI_OUT) FILEID(EDI_IN) ONEMSG(Y);

Notes: the REQID would point to a Mailbox profile, hence Network profile and MQ profile, for the destination queue of the passed-though EDIFACT message. The FILEID here would refer back to the original input (FILEID) from the original Service profile, e.g. FILEID(EDI_IN).

The caveat is that, if present, OUTFILE and OUTTYPE on the original EDI_IN PERFORM TRANSFORM command would take precedence over the mapping special variables DIOutFile and DIOutType. 

And, optionally, you could SENDFILE the data contained in the SWITCH file to a queue of your choice. Theoretically, this could be used to convey information about the message or event indicating why the message is being passed-through. In which case, you would have two SENDFILE commands in the SWITCH service profile, e.g. 
PERFORM SENDFILE WHERE REQID(EDI_OUT) FILEID(EDI_IN) ONEMSG(Y); 
PERFORM SENDFILE WHERE REQID(ADF_OUT) FILEID(SWITCH) ONEMSG(Y);

Lastly, I suggest using Associated Data References for the new SWITCH file and other outputs so as to prevent Windows temp files from being generated for every execution. For example, on the EDI_IN service profile add an associated data reference for SWITCH file name that points to a physical file location, such as ..\adf\SWITCH.txt. 

And, if you will not be sending SWITCH anywhere, then you would want to specify a "File Disposition" for "Exit" as "Delete" such that it will be deleted after each execution. The SWITCH service profile would also have a data reference for the same SWITCH location and file name and specify a "File Disposition" for "Exit" as "Delete".