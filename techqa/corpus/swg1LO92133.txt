Title: IBM LO92133: [MAC] A LINE IS TRUNCATED WHEN REPLY A SPECIC HTML MESSAGE WITH HISTORY - United States

Text:
 SUBSCRIBE TO THIS APAR
By subscribing, you receive periodic emails alerting you to the status of the APAR, along with a link to the fix after it becomes available. You can track this item individually or track all items by product.

Notify me when this APAR changes.

Notify me when an APAR for this component changes.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  Domino 9.0.1
   Notes 9.0.1 64 bit (Mac), Notes 9.0.1 IF8 64 bit (Mac)
   
   1. Open a mail database in which a problematic html mail is
   encoded as quoted-printable.
   
   2. Open the problematic document.
   
   Note: You will find three lines with three bullet points under
   a section title as follows:
   
   ex)
   
   (Section Number). Section Title
   (bullet point) Sentence 1
   (bullet point) Sentence 2
   (bullet point) Sentence 3
   
   3. Hit on "Reply with history only" button.
   
   
   You will find only the sentence 1 is truncated.
   
   ex)
   (Section Number). Section Title
   (bullet point) Sentence 2
   (bullet point) Sentence 3
   
   
    
   
   

LOCAL FIX
 *  -Reply with Internet-Style History.
   -Use IBM notes on windows platform.
   
   
    
   
   

PROBLEM SUMMARY
 *  This regression was introduced by ICU upgrade from 3.4.1  to
    49.1.  In ICU_ccSTRnNextExt, we first translate the string
    from LMBCS to Unicode, there is no problem in this step, after
    that, we call ICU RuleBasedBreakIterator (abbr. rbbi) to get
    the next break of the string, but here has a bug, when the
    hard return (i.e. 0x00) is behind some specific characters, it
    will be skipped by mistake in Japan locale.
   
   My solution is:
    In the logic of searching break when rbbi goes through each
    unicode character,  I added a check, if current one is hard
    return (i.e. 0x00), then I deem it as a break.
   
   This fix is
    in ICU code, the mechanism of checking break is a little
    complicated, it may cost us much time if we want to understand
    the details of why the hard return does not work behind these
    special characters in Janpan locale. My solution is simple and
    straighforward.
   
   ICAA Notes client team has tested my fix on
    both Mac and Window for SPR #TITHAGFAXH and #TITHAFJ8DR. The
    root cause of this SPR is the same as these 2 SPRs.
   
   
    
   
   

PROBLEM CONCLUSION
 *  This regression was introduced by ICU upgrade from 3.4.1  to
    49.1.  In ICU_ccSTRnNextExt, we first translate the string
    from LMBCS to Unicode, there is no problem in this step, after
    that, we call ICU RuleBasedBreakIterator (abbr. rbbi) to get
    the next break of the string, but here has a bug, when the
    hard return (i.e. 0x00) is behind some specific characters, it
    will be skipped by mistake in Japan locale.
   
   My solution is:
    In the logic of searching break when rbbi goes through each
    unicode character,  I added a check, if current one is hard
    return (i.e. 0x00), then I deem it as a break.
   
   This fix is
    in ICU code, the mechanism of checking break is a little
    complicated, it may cost us much time if we want to understand
    the details of why the hard return does not work behind these
    special characters in Janpan locale. My solution is simple and
    straighforward.
   
   ICAA Notes client team has tested my fix on
    both Mac and Window for SPR #TITHAGFAXH and #TITHAFJ8DR. The
    root cause of this SPR is the same as these 2 SPRs.
   
   
    
   
   

TEMPORARY FIX

COMMENTS
 *  This APAR is associated with SPR# HHIEALLGQ3.
   This regression was introduced by ICU upgrade from 3.4.1  to
    49.1.  In ICU_ccSTRnNextExt, we first translate the string
    from LMBCS to Unicode, there is no problem in this step, after
    that, we call ICU RuleBasedBreakIterator (abbr. rbbi) to get
    the next break of the string, but here has a bug, when the
    hard return (i.e. 0x00) is behind some specific characters, it
    will be skipped by mistake in Japan locale.
   
   My solution is:
    In the logic of searching break when rbbi goes through each
    unicode character,  I added a check, if current one is hard
    return (i.e. 0x00), then I deem it as a break.
   
   This fix is
    in ICU code, the mechanism of checking break is a little
    complicated, it may cost us much time if we want to understand
    the details of why the hard return does not work behind these
    special characters in Janpan locale. My solution is simple and
    straighforward.
   
   ICAA Notes client team has tested my fix on
    both Mac and Window for SPR #TITHAGFAXH and #TITHAFJ8DR. The
    root cause of this SPR is the same as these 2 SPRs.
   
   
    
   
   

APAR INFORMATION
 * APAR NUMBER
   LO92133
   
   
 * REPORTED COMPONENT NAME
   NOTES CLIENT
   
   
 * REPORTED COMPONENT ID
   5724E6255
   
   
 * REPORTED RELEASE
   901
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt / Xsystem
   
   
 * SUBMITTED DATE
   2017-04-20
   
   
 * CLOSED DATE
   2017-06-02
   
   
 * LAST MODIFIED DATE
   2017-06-02
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   NOTES CLIENT
   
   
 * FIXED COMPONENT ID
   5724E6255
   
   

APPLICABLE COMPONENT LEVELS
 * R901 PSN
   UP