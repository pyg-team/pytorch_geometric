Title: IBM WebSphere logs for a TWS instance are consuming space - United States

Text:
trace.log; native_stderr.log; WebSphere; space; size; trace TECHNOTE (FAQ)

QUESTION
 How can Tivoli Workload Scheduler's (TWS) WebSphere logs be managed to prevent a space issue? 

ANSWER
If you have changed the trace level for WebSphere logging using <TWAHome>/wastools/changeTraceProperties.sh, the resultant file should be a single file named trace.log in <TWAHome>/eWAS/profiles/twaprofile/logs/twaserver. This file will roll at 20MB by default and a maximum of one file is backed up. So, this file only has the potential of consuming approximately 40MB of space. 

If you need to reset the trace level back to the default, then use the changeTraceProperties.sh script again and pass the word "reset" as the argument for -mode. For example:

As root:
cd <TWAHome>/wastools
./changeTraceProperties.sh -user <twsuser> -password <password> -mode reset 

Alternatively, you can restart WebSphere to get the default trace levels set.

If there is an issue with too much space being consumed by trace.log, SystemOut.log, or SystemErr.log then the number of backup files and size of each file can be controlled in WebSphere's server.xml file. 

NOTE: Any modification to the server.xml file should follow a backup of the WebSphere profile configuration 'wastools/backupConfig.sh -nostop' and a restart of WebSphere is needed for the changes to take effect.

server.xml location:

TWS v8.3 and v8.4: <TWSHome>/appserver/profiles/twsprofile/config/cells/DefaultNode/nodes/DefaultNode/servers/server1/server.xml

TWS 8.5x:
<TWAHome>/eWAS/profiles/twaprofile/config/cells/DefaultNode/nodes/DefaultNode/servers/<servername>/server.xml

TWS 8.6:
<TWAHome>/eWAS/profiles/TIPProfile/config/cells/TIPCell/nodes/TIPNode/servers/server1/server.xml

TWS 9.x:
<TWAHome>/WAS/TWSProfile/config/cells/TWSNodeCell/nodes/TWSNode/servers/server1/server.xml

DWC 9.x:
<JazzSMHome>/profile/config/cells/JazzSMNode01Cell/nodes/JazzSMNode01/servers/server1/server.xml

These are the default settings at installatioin time for trace.log, SystemOut.log, and SystemErr.log:

<traceLog xmi:id="TraceLog_1264707245724" fileName="${SERVER_LOG_ROOT}/trace.log" rolloverSize="20" maxNumberOfBackupFiles="1"/>
....
<errorStreamRedirect xmi:id="StreamRedirect_1264707245733" fileName="${SERVER_LOG_ROOT}/SystemErr.log" rolloverType="SIZE" maxNumberOfBackupFiles="1" rolloverSize="1" baseHour="24" rolloverPeriod="24" formatWrites="true" messageFormatKind="BASIC" suppressWrites="false" suppressStackTrace="false"/>
....
<outputStreamRedirect xmi:id="StreamRedirect_1264707245734" fileName="${SERVER_LOG_ROOT}/SystemOut.log" rolloverType="SIZE" maxNumberOfBackupFiles="1" rolloverSize="1" baseHour="24" rolloverPeriod="24" formatWrites="true" messageFormatKind="BASIC" suppressWrites="false" suppressStackTrace="false"/>

If you have a file like native_stdout.log or native_stderr.log that is growing without bounds. then there is no mechanism to manage the size of those files within WebSphere. You can disable verbose garbage collection if it is enabled. If verbose garbage collection was enabled. the file server.xml will have an entry like this:

<jvmEntries xmi:id="JavaVirtualMachine_1264707245738" verboseModeClass="false" verboseModeGarbageCollection="true" verboseModeJNI="true" initialHeapSize="16" maximumHeapSize="512" runHProf="false" hprofArguments="" debugMode="true" debugArgs="-Djava.compiler=NONE -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=7777" genericJvmArguments="-Dibm.dst.compatibility=true" disableJIT="false"> 

The entries above that are showing as "true" are normally set to "false" by default. If they are "true" then change those values back to "false" and restart WebSphere. If no extra tracing is set then you should manage these files manually as needed.

 

PRODUCT ALIAS/SYNONYM
 Maestro
TWS
IWS
TWA