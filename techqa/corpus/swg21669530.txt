Title: IBM How to get activity trace only for selected applications - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 How can I receive WebSphere MQ (WMQ) activity trace only for selected applications? For example, only for the samples amqsput (to put messages) and amqsget (to get messages).


CAUSE
The default behavior for the Activity Trace is to get the "medium" trace for all applications with the exception of amqsact (the sample activity trace program).

This is stated in the mqat.ini file for the queue manager.


ANSWER
You can build a wall to prevent the activity traces for all applications, and then "open" the spaces in the wall to let certain trace through. 


The sequence of the stanzas in the mqat.ini file is important in order to accomplish the objective.

++ Step 1: build a "wall"

At the end of the file, add a new entry to disable all the applications from generating the activity trace.
Notice the following 2 key attributes:
ApplName=*
Trace=OFF

##################################################################
# Prevent all applications from generating data #
##################################################################
ApplicationTrace: # Application specific settings stanza
ApplClass=ALL # Application type
# Values: (USER | MCA | ALL)
# Default: USER
ApplName=* # Application name (may be wildcarded)
# (matched to app name without path)
# Default: *
Trace=OFF # Activity trace switch for application
# Values: ( ON | OFF )
# Default: OFF
ActivityInterval=0 # Time interval between trace messages
# Values: 0-99999999 (0=off) Page 19 of 22 
# Default: 0
ActivityCount=0 # Number of operations between trace msgs
# Values: 0-99999999 (0=off)
# Default: 0
TraceLevel=MEDIUM # Amount of data traced for each operation
# Values: LOW | MEDIUM | HIGH
# Default: MEDIUM
TraceMessageData=0 # Amount of message data traced
# Values: 0-104857600
# Default: 0

++ Step 2: open "holes" on the "wall" 

After the stanza added in Step 1, you will need to add at the end of the file, the stanzas that specify the desired spaces in the wall.

For example, add a stanza for:
ApplName=amqsput*
and another for:
ApplName=amqsget*

In both stanzas specify that tracing is enabled:
Trace=ON

##################################################################
# Allow the sample amqsput program to generate data #
##################################################################
ApplicationTrace: # Application specific settings stanza
ApplClass=ALL # Application type
# Values: (USER | MCA | ALL)
# Default: USER
ApplName=amqsput* # Application name (may be wildcarded)
# (matched to app name without path)
# Default: *
Trace=ON # Activity trace switch for application
# Values: ( ON | OFF )
# Default: OFF
ActivityInterval=0 # Time interval between trace messages
# Values: 0-99999999 (0=off)
# Default: 0
ActivityCount=0 # Number of operations between trace msgs
# Values: 0-99999999 (0=off)
# Default: 0
TraceLevel=MEDIUM # Amount of data traced for each operation
# Values: LOW | MEDIUM | HIGH
# Default: MEDIUM
TraceMessageData=110 # Amount of message data traced
# Values: 0-104857600
# Default: 0
##################################################################
# Allow the sample amqsget program to generate data #
##################################################################
ApplicationTrace: # Application specific settings stanza
ApplClass=ALL # Application type
# Values: (USER | MCA | ALL) 
# Default: USER
ApplName=amqsget* # Application name (may be wildcarded)
# (matched to app name without path)
# Default: *
Trace=ON # Activity trace switch for application
# Values: ( ON | OFF )
# Default: OFF 
ActivityInterval=0 # Time interval between trace messages
# Values: 0-99999999 (0=off)
# Default: 0
ActivityCount=0 # Number of operations between trace msgs
# Values: 0-99999999 (0=off) 
# Default: 0 
TraceLevel=MEDIUM # Amount of data traced for each operation
# Values: LOW | MEDIUM | HIGH 
# Default: MEDIUM 
TraceMessageData=110 # Amount of message data traced
# Values: 0-104857600
# Default: 0 


++ Step 3:

a) You will need to restart the queue manager in order for the new contents of the mqat.ini file to take effect,

or

b) You will need to disable and then enable the queue manager attribute ACTVTRC:
. 
runmqsc QMGRNAME 
ALTER QMGR ACTVTRC(OFF) 
ALTER QMGR ACTVTRC(ON) 
end 

++ Testing notes

Before doing the update to the file mqat.ini, there were many entries for MQExplorer.exe when using the MS0P plugin in the MQ Explorer to see the activity trace, as mentioned in the following article:

Increasing the visibility of messages using WebSphere MQ Application Activity Trace [http://www.ibm.com/developerworks/websphere/library/techarticles/1306_bushby/1306_bushby.html]

This article describes the WebSphere MQ Application Activity Trace, a new feature in WebSphere MQ V7.1 on all distributed platforms. Until now it has been difficult for WebSphere MQ administrators to see what the applications connecting to queue managers are actually doing. Application Activity Trace provides a detailed view of application behaviour and application interaction with a WebSphere MQ queue manager and its resources.
Author: Emma Bushby 

However, after making the change to the mqat.ini and refreshing the queue manager cache for the activity trace attribute, there were no entries anymore for MQ Explorer.

Then the following 3 samples were issued:
amqsput 
amqsget 
amqsbcg (to browse messages - but not added to mqat.ini). 

When using the MS0P plugin in MQ Explorer, as expected, there were ONLY 2 applications that were traced: 
amqsput 
amqsget 
The application "amqsbcg" was NOT traced.