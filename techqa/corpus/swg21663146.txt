Title: IBM Server starts in configuration-only mode with GLPCTL120I message - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 This technote describes a problem that can happen on Linux when auto-starting ibmslapd after a reboot 

SYMPTOM
After rebooting the server and with ibmslapd set to restart via a script in /etc/init.d, the server starts in configuration only mode with the following error: 

GLPCTL120I Maximum <ulimit> soft ulimit for the process is 1024; the attempt to modify to the prescribed minimum <value> failed.

This happens even though the specific ulimit for root and the instance owner have already been set to a higher value in /etc/security/limits.conf.


CAUSE
The customer had updated their ibmslapd.conf file to set:

ibm-slapdUlimitNofile: 4000

in the cn=Ulimits, cn=Configuration stanza of the ibmslapd.conf for the server instance so that ulimit -n would be guaranteed to be increased at server startup time. However, a process can not update it's ulimit value beyond the current hard ulimit setting. They had also updated the 'nofile' ulimit setting in /etc/security/limits.conf for their root user and their instance owner user to 4096.

But, the limits set in /etc/security/limits.conf are apparently not guaranteed to be set before scripts in /etc/init.d are executed. As a result, ibmslapd picked up the default ulimit -n value, which was 1024, and wasn't permitted to increase the value beyond this, causing the error during startup.


ENVIRONMENT
This problem was discovered and recreated on RHEL 5.x and 6.x, although it may also occur on SuSE.



DIAGNOSING THE PROBLEM
We added the following lines to the customer's script that started ibmslapd: 


id > /path/to/output_file.out
ulimit -a >> /path/to/output_file.out

and we could see that root was running the script and that at the time that the script was run the specific ulimit (ulimit -n in this specific case) was still set to 1024, despite the settings in /etc/security/limits.conf


RESOLVING THE PROBLEM
Add a line in the startup script in /etc/init.d to explicitly set the hard limit that was causing the failure, in this case, we added: 


ulimit -n 4096

to the beginning of the startup script and then the server startup fine.