Title: IBM Increased memory usage of Discovery process running on RedHat6 - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Discovery process using more memory when running on RedHat6.x Operating System and eventually fails with Out-Of-Memory error - how to fix it? 

SYMPTOM
$NCHOME/log/precision/ncp_disco.DOMAIN.log & trace file contains following: 

2014-07-25T13:14:33: Fatal: F-RIV-002-014: [17628016t] CRivHashStore.cc(729) Out-of-memory - This process has run out of memory or exceeded the operating system memory limit for a 32 bit application - You must take action to reduce the amount of data this application is having to process


CAUSE
RedHat6 new feature of dynamic memory allocation(malloc)



RESOLVING THE PROBLEM
Disable Red Hat 6.x OS new dynamic memory allocation behavior for ITNM. 


If you look at the release notes for Red Hat 6 - it says:

https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html-single/6.0_Release_Notes/ [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html-single/6.0_Release_Notes/]

An enhanced dynamic memory allocation (malloc) behavior enabling higher scalability across many sockets and cores. This is achieved by assigning threads their own memory pools and by avoiding locking in some situations. The amount of additional memory used for the memory pools (if any) can be controlled using the environment variables MALLOC_ARENA_TEST and MALLOC_ARENA_MAX. MALLOC_ARENA_TEST specifies that a test for the number of cores is performed once the number of memory pools reaches this value. MALLOC_ARENA_MAX sets the maximum number of memory pools used, regardless of the number of cores.

So what can mean for a highly multi threaded application like ITNM is that, each thread is given its own memory pool instead of sharing just one as would have happened in earlier releases of Red Hat. By setting an environment variable MALLOC_ARENA_MAX variable to 1, we default back to the original behavior of having a single memory pool shared by all threads.

Its best to define the variable under $NCHOME/precision/bin/ncp_common which gets called by every binary of ITNM. You can add below line at the bottom of ncp_common and restart ITNM to be effective:
MALLOC_ARENA_MAX=1 ; export MALLOC_ARENA_MAX

 

PRODUCT ALIAS/SYNONYM
 RedHat6
Discovery Out-of-Memory