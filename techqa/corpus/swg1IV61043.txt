Title: IBM IV61043: WEBSPHERE MQ CLIENT RECEIVED AMQ9204 AMQ9213 WITH TCPIP RST AFTER A FIVE SECOND DELAY ON THE SERVER IN THE SECURITY EXIT. - United States

Text:
 SUBSCRIBE TO THIS APAR
By subscribing, you receive periodic emails alerting you to the status of the APAR, along with a link to the fix after it becomes available. You can track this item individually or track all items by product.

Notify me when this APAR changes.

Notify me when an APAR for this component changes.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  A WebSphere MQ classes for JMS is unable to establish a
   connection to a WebSphere MQ queue manager when a channel
   security exit takes longer than five (5) seconds to verify the
   user identifier flowed by the client in the connection attempt.
   The WebSphere MQ classes for JMS, after five seconds, fails the
   connection attempt and throws the following exception:
   
   com.ibm.msg.client.jms.DetailedJMSException: JMSWMQ0018: Failed
   to connect to queue manager '' with connection mode 'Client' and
   host name '()'. Check the queue manager is started and if
   running in client mode, check there is a listener running.
   Please see the linked exception for more information.
   ...
   Caused by: com.ibm.mq.MQException: JMSCMQ0001: WebSphere MQ call
   failed with compcode '2' ('MQCC_FAILED') reason '2009'
   ('MQRC_CONNECTION_BROKEN').
   ...
   Caused by: com.ibm.mq.jmqi.JmqiException: CC=2;RC=2009;AMQ9213:
   A communications error for occurred.
    at
   com.ibm.mq.jmqi.remote.internal.system.RemoteConnection.receiveA
   syncTsh(RemoteConnection.java:3199)
    at
   com.ibm.mq.jmqi.remote.internal.system.RemoteConnection.receiveT
   SH(RemoteConnection.java:2789)
    at
   com.ibm.mq.jmqi.remote.internal.system.RemoteConnection.sendUidF
   low(RemoteConnection.java:1937)
    at
   com.ibm.mq.jmqi.remote.internal.system.RemoteConnection.initSess
   (RemoteConnection.java:1874)
    at
   com.ibm.mq.jmqi.remote.internal.system.RemoteConnection.connect(
   RemoteConnection.java:1157)
    at
   com.ibm.mq.jmqi.remote.internal.system.RemoteConnectionPool.getC
   onnection(RemoteConnectionPool.java:353)
    at
   com.ibm.mq.jmqi.remote.internal.RemoteFAP.jmqiConnect(RemoteFAP.
   java:1607)
    at
   com.ibm.mq.jmqi.remote.internal.RemoteFAP.jmqiConnect(RemoteFAP.
   java:123
    at
   com.ibm.msg.client.wmq.internal.WMQConnection.(WMQConnection.jav
   a:366)
    at
   com.ibm.msg.client.wmq.factories.WMQConnectionFactory.createV7Pr
   oviderConnection(WMQConnectionFactory.java:7188)
    at
   com.ibm.msg.client.wmq.factories.WMQConnectionFactory.createProv
   iderConnection(WMQConnectionFactory.java:6579)
    at
   com.ibm.msg.client.jms.admin.JmsConnectionFactoryImpl.createConn
   ection(JmsConnectionFactoryImpl.java:295)
    at
   com.ibm.mq.jms.MQConnectionFactory.createCommonConnection(MQConn
   ectionFactory.java:6232)
    at
   com.ibm.mq.jms.MQQueueConnectionFactory.createQueueConnection(MQ
   QueueConnectionFactory.java:144)
    at
   com.ibm.mq.jms.MQQueueConnectionFactory.createConnection(MQQueue
   ConnectionFactory.java:224)
   
   
    
   
   

LOCAL FIX

PROBLEM SUMMARY
 *  ****************************************************************
   USERS AFFECTED:
   This issue affects users of:
   
   - The WebSphere MQ v7.0.1 classes for JMS
   - The WebSphere MQ v7.0.1 classes for Java
   - The WebSphere MQ v7.0.1 JCA resource adapter
   - The WebSphere Application Server V7 WebSphere MQ messaging
   provider.
   - The WebSphere Application Server V8.0 WebSphere MQ messaging
   provider.
   
   who have applications that connect to a WebSphere MQ queue
   manager using the CLIENT transport mode.
   
   This issue does not affect users of the WebSphere MQ classes for
   Java/JMS at a later version than v7.0.1.
   
   
   Platforms affected:
   MultiPlatform
   
   ****************************************************************
   PROBLEM DESCRIPTION:
   When communicating with the queue manager, the WebSphere MQ Java
   client utilised a five (5) second wait time (as introduced by
   APAR IZ65557 [http://www-01.ibm.com/support/docview.wss?uid=swg1IZ65557] in WebSphere MQ classes for Java/JMS in v7.0.1.2),
   with the intention that if no data was returned on the TCP/IP
   socket connected to the queue manager a check would be made to
   see if the client was still connected to the queue manager,
   followed by the client repeating the five second wait for data.
   This design was intended to resolve an issue that caused a
   thread to hang indefinitely when the TCP/IP socket was no longer
   connected to the queue manager.
   
   However, when the WebSphere MQ Java/JMS client was establishing
   a new connection to the queue manager, and this five second wait
   time expired without receiving a response, the check to
   determine if the client was connected to the queue manager
   returned a false value, because the connection to the queue
   manager had not at that point in time successfully finished
   initialising.
   
   If a situation arose where a five second delay occurred during
   the initial connection negotiation, for example when using a
   channel security exit with took a number of seconds to complete
   its processing, then the check performed by the WebSphere MQ
   Java/JMS client to determine whether the connection to the queue
   manager was active, failed. As a result, the WebSphere MQ
   Java/JMS client closed the physical TCP/IP connection to the
   queue manager, aborted the connection attempt and threw a 2009
   (MQRC_CONNECTION_BROKEN) exception to the application.
   
   Analysing a network TCP/IP trace of the connection attempt
   between the client and server showed that some initial packets
   were successfully exchanged in quick succession before a five
   second wait occurred following a further packet from the client.
   This was then followed afterwards by a FIN packet sent from the
   WebSphere MQ Java client. When the queue manager responded to
   the previous packet that caused the five second delay, the
   client then sent a RST packet that indicated the socket at the
   client was closed.
   
   
    
   
   

PROBLEM CONCLUSION
 *  The WebSphere MQ classes for Java/JMS have been updated such
   that when a new connection is being established and no response
   is received from the queue manager during the connection
   negotiation, the Java client continues to wait for a response
   and does not throw a 2009 (MQRC_CONNECTION_BROKEN) exception.
   
   ---------------------------------------------------------------
   The fix is targeted for delivery in the following PTFs:
   
   Version    Maintenance Level
   v7.0       7.0.1.13
   
   The latest available maintenance can be obtained from
   'WebSphere MQ Recommended Fixes'
   http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006037 [http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006037]
   
   If the maintenance level is not yet available information on
   its planned availability can be found in 'WebSphere MQ
   Planned Maintenance Release Dates'
   http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006309 [http://www-1.ibm.com/support/docview.wss?rs=171&uid=swg27006309]
   ---------------------------------------------------------------
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   IV61043
   
   
 * REPORTED COMPONENT NAME
   WMQ LIN X86-64
   
   
 * REPORTED COMPONENT ID
   5724H7230
   
   
 * REPORTED RELEASE
   701
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2014-05-29
   
   
 * CLOSED DATE
   2014-10-10
   
   
 * LAST MODIFIED DATE
   2014-10-10
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   WMQ LIN X86-64
   
   
 * FIXED COMPONENT ID
   5724H7230
   
   

APPLICABLE COMPONENT LEVELS
 * R701 PSY
   UP