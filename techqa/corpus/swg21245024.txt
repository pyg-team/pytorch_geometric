Title: IBM Setting up Oracle datasource access in a web application using Rational速 Application Developer version 6.x - United States

Text:
oracle datasources; setting up a datasource; creating datasources; accessing data in a web app; RSA; RAD; RWD; jdbc driver; connecting to a datasource; database connection; sample datasource; testing a datasource; DataSources; Datasources; Data Sources; data sources ; 1245024 TECHNOTE (FAQ)

QUESTION
 How do you set up an Oracle速 datasource in IBM速 Rational速 Application Developer version 6.x for use with Web projects? 

ANSWER
The following steps can be used as an example for creating and using an Oracle datasource in your Web projects in Rational Application Developer version 6.x: 

 1. Start Rational Application Developer in a new workspace.
    
    
 2. Create a new Dynamic Web project (with EAR project) named SampleWeb, with the EAR named SampleEAR.
    
    
 3. Open your SampleEAR's deployment descriptor and navigate to the Deployment tab.
    
    
 4. To create an Oracle datasource you must first create a JDBC driver in the JDBC provider list. Follow these steps:
     1. In the JDBC provider list, click Add...>. For the database type: select Oracle > JDBC provider type: select Oracle JDBC Driver > click Next 
     2. In the Create a JDBC Provider wizard > Name: OracleJdbcDriver 
     3. Ensure that your classpath is set up correctly. If you are connecting to a remote Oracle database you will need to add the classpath to the local JDBC driver classes12.zip
        
        . To do this:  1. Select ${ORACLE_JDBC_DRIVER_PATH}/classes12.zip 
         2. Click Remove. 
         3. Select Add External JARs...> and navigate to the local copy of classes12.zip > Open > Finish
            
            
        
        
    
    
 5. Next, create the datasource:
     1. With the OracleJdbcDriver JDBC provider that you created above selected, click Add button located beside the datasource table...> select Oracle JDBC Thin Driver, then select Version 5.0 data source > Next 
     2. Provide the following values in the Modify Data Source dialog box  1. Name: OracleDatasource 
         2. JNDI Name: jdbc/OracleDatasource > Next
        
        
     3. On the Create Resource Properties dialog box, create 4 resource properties by entering the appropriate values for each variable, as shown below:
         1. Name: databaseName
            Type: java.lang.String
            Value: sample (This is the actual database name. In this example, the datasource will point to a database named "sample".) 
         2. Name: URL
            Type: java.lang.String
            Value: jdbc:oracle:thin:@servername.domain.com:1521:sample (Note: sample is the databaseName) 
         3. Name: portNumber
            Type: java.lang.Integer
            Value: 1521 
         4. Name: serverName
            Type:java.lang.String
            Value: servername.domain.com 
            
        
        
     4. Click Finish 
     5. Save the changes to the server using File > Save and then close the Application Deployment Descriptor editor.
        ------------------------------------------------------------------
    
    


Now you are ready to test the datasource you just created. 
Follow these steps: 
 1.  Create a Web project:  1.  File > New > Project > Web > Dynamic Web Project > Next 
      2. Project Name: TestDataSource > Finish
         
         
     
     
 2.  Download these two attachement files into the TestDataSource Web project:
     
     Disclaimer All source code and/or binaries attached to this document are referred to here as "the Program". IBM is not providing program services of any kind for the Program. IBM is providing the Program on an "AS IS" basis without warranty of any kind. IBM WILL NOT BE LIABLE FOR ANY ACTUAL, DIRECT, SPECIAL, INCIDENTAL, OR INDIRECT DAMAGES OR FOR ANY ECONOMIC CONSEQUENTIAL DAMAGES (INCLUDING LOST PROFITS OR SAVINGS), EVEN IF IBM, OR ITS RESELLER, HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
     
     
     
     
     [http://www-1.ibm.com/support/docview.wss?uid=swg21113202&aid=1] [http://www-1.ibm.com/support/docview.wss?uid=swg21113202&aid=3]DataSourceTestServlet.java [/support/docview.wss?uid=swg21245024&aid=2] [/support/docview.wss?uid=swg21245024&aid=1]DataSourceTest.java [/support/docview.wss?uid=swg21245024&aid=4] [/support/docview.wss?uid=swg21245024&aid=3]
     
     
 3.  Go to the Web perspective, highlight the project TestDataSource and select File > Import > File System > Next.
     
     
 4.  Browse to the directory where you have placed a local copy of the two files and click OK
     
     
 5.  Select the files: DataSourceTestServlet.java] and [DataSourceTest.java 
 6.  Select the folder:TestDataSource/JavaSource. Click Finish
     
     
 7.  In the file, DataSourceTest.java, find this line of code: 
     
     Connection conn = ds.getConnection("userid","password");
     
     and replace userid and password with the user ID and password to the Oracle database, leaving the quote marks in place.
     TIP: Verify that the userid has the correct database permission to connect and execute queries on the tables you will be accessing.
     
     
 8.  In the file, DataSourceTest.java[</code>], find this line of code:
     
     ResultSet rs = stmt.executeQuery("Select * from TABLE");
     
     and replace TABLE with the relational table name that you are connecting to.
     
     
 9.  Ctrl-S to save the changes to DataSourceTest.java
     
     
 10. Deploy your project on a WebSphere Application Server version 6.0:
      1. Right click on WebSphere Application Server version 6.0 server in the Servers view > add/remove projects > Add your SampleWeb
     
     
 11. 
 12. In the Project Explorer view of the Web perspective, right click DataSourceTestServlet.java > Run on Server > select Websphere Application Server version 6.0 in the list of available servers > click Finish.



RELATED INFORMATION
#Oracle datasource in WSAD [http://www.ibm.com/support/docview.wss?uid=swg21113202]






Cross Reference information Segment Product Component Platform Version Edition Software Development Rational Software Architect Data Access Applications Windows, Linux 6.0, 6.0.0.1, 6.0.1.0, 6.0.1.1