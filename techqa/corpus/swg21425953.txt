Title: IBM On Memory Analysis profiling, after attach, there is a long pause between attach and application availability - United States

Text:
memory analysis; profiling TECHNOTE (FAQ)

QUESTION
After I attach to my application in profiling mode, with the Memory Analysis profiling option, the application becomes unresponsive for a period of time; why does this happen? 

ANSWER
When profiling a Java application with Memory Analysis on Websphere Application Server (or any large Java application) there is a long pause between the point at which the user attaches, and when the profiling agent becomes available and the JVM execution resumes.
This issue has been seen with Websphere Application Server (WAS) v6.1 and v7.0, but is not specific to these scenarios and could occur with any large application that uses a large number of classes. Likewise this issue is not specific to a particular platform.

From the user perspective, once attached, the workbench will show the agent as 'attached' in the Profiling Monitor perspective of Rational Application Developer (RAD). However, no data will be received, and the grey 'No data is available for display' view will be shown for that process.

On the profiling side, the profiler is processing the classes that have been loaded by the JVM, and then re-instrumenting them as needed. At present, classes that are not filtered by the specified filters will be fully instrumented, while the remaining classes that are loaded by the JVM will be partially instrumented.

During this time, you will see the Java process on the target machine using 100% of the available CPU / core (so 100% of total on a single core CPU, or 50% of total on a dual-core system, for instance). When this process has ended, the CPU usage will drop back to normal.

This time can be expected to last between 1-10 minutes, depending on the size of the application, and the speed of the underlying hardware.

The user can determine when this process has completed by: 

 * Examining CPU usage for the java application on the target machine 
 * If the application is a web application on an application server, then periodically querying the server from the browser will work as well 
 * Looking for the 'monitoring.... collected' status for the process in the workbench, indicating data is being received 
 * Any other behaviour that would indicate that the JVM had returned to executing normally (this behaviour would be specific to the target application)