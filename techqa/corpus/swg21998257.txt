Title: IBM Known issue:  SearchScope.fetchObjects returns incorrect results for a multivalue property, if the property is listed twice in the query. - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 IBM FileNet Content Platform Engine Java API SearchScope.fetchObjects returns incorrect results for a multivalue property if the property is listed twice in the query. 

SYMPTOM
For example: 

SearchScope.fetchObjects("Select [MultiValueStringProp], [MultiValueStringProp] From Document Where Id = '{00000000-0000-0000-0000-000000000000}'",....) will return 0 results if MultiValueStringProp contains 2 list items.

SearchScope.fetchRows("Select [MultiValueStringProp], [MultiValueStringProp] From Document Where Id = '{00000000-0000-0000-0000-000000000000}'",....) returns the correct result of 2.

Steps to reproduce.
1. In FileNet Content Engine Administrative Console for Content Engine (ACCE), create a multi value string property (MultiValueStringProp) and a document class (MultiValueDC) with the property added to the document class.
2. In WorkplaceXT, add a document as MultiValueDC and add 2 values to MultiValueStringProp. Note the Object ID of the document added.
3. Modify the variables below to fit your environment, compile and run the sample code below and note the incorrect results.

import java.util.Iterator;
import javax.security.auth.Subject;
import com.filenet.api.collection.IndependentObjectSet;
import com.filenet.api.collection.RepositoryRowSet;
import com.filenet.api.collection.StringList;
import com.filenet.api.constants.FilteredPropertyType;
import com.filenet.api.core.Domain;
import com.filenet.api.core.Factory;
import com.filenet.api.core.IndependentObject;
import com.filenet.api.core.ObjectStore;
import com.filenet.api.property.FilterElement;
import com.filenet.api.property.PropertyFilter;
import com.filenet.api.query.RepositoryRow;
import com.filenet.api.query.SearchSQL;
import com.filenet.api.query.SearchScope;
import com.filenet.api.util.UserContext;

public class Tester {

public static void main(String[] args) {

ObjectStore os = getObjectStore();
String testQuery1 = "Select [MultivalueTest] From Document Where Id = '{00000000-0000-0000-0000-000000000000}'";
String testQuery2 = "Select [MultivalueTest], [MultivalueTest] From Document Where Id = '{00000000-0000-0000-0000-000000000000}'";
IndependentObjectSet resultSet = fnTest(testQuery2, os); //change query variable here
RepositoryRowSet rowSet = fnTest2(testQuery2, os); //change query variable here
Iterator<?> indObjItr = resultSet.iterator();
Iterator<?> rowSetItr = rowSet.iterator();
while (indObjItr.hasNext()) {
IndependentObject indObj = (IndependentObject)indObjItr.next();
RepositoryRow searchRow = (RepositoryRow)rowSetItr.next();
StringList objList = indObj.getProperties().getStringListValue("MultivalueTest");
System.out.println("fetchObjects method - property String size: " + objList.size());
for (int i = 0; i < objList.size(); i++) {
System.out.println("value at index " + i + ":" + objList.get(i));
}
StringList rowList = searchRow.getProperties().getStringListValue("MultivalueTest");
System.out.println("fetchRows method - property String size: " + rowList.size());
for (int i = 0; i < rowList.size(); i++) {
System.out.println("value at index " + i + ":" + rowList.get(i));
}
}
}

public static IndependentObjectSet fnTest(String query, ObjectStore os) {
PropertyFilter pf = new PropertyFilter();
FilterElement fe = new FilterElement(0, null, null, FilteredPropertyType.ANY_SINGLETON, null);
pf.addIncludeType(fe);

SearchScope search = new SearchScope(os);
SearchSQL sql = new SearchSQL(query);
return search.fetchObjects(sql, Integer.valueOf(100) , pf, Boolean.valueOf(true));
}

public static RepositoryRowSet fnTest2(String query, ObjectStore os) {
PropertyFilter pf = new PropertyFilter();
FilterElement fe = new FilterElement(0, null, null, FilteredPropertyType.ANY_SINGLETON, null);
pf.addIncludeType(fe);

SearchScope search = new SearchScope(os);
SearchSQL sql = new SearchSQL(query);
return search.fetchRows(sql, Integer.valueOf(100) , pf, Boolean.valueOf(true));
}

public static ObjectStore getObjectStore() {

String osName = "ObjectStoreName"; /*removed local server info*/
String user = "adminuser"; /*removed local server info*/
String password = "password"; /*removed local server info*/
String ceUri = "http://localhost:9080/wsi/FNCEWS40MTOM [http://localhost:9080/wsi/FNCEWS40MTOM]"; /*removed local server info*/


com.filenet.api.core.Connection ce_conn = null;
ce_conn = Factory.Connection.getConnection(ceUri);

UserContext uc = UserContext.get();
Subject subject = UserContext.createSubject(ce_conn, user, password, null);
uc.pushSubject(subject);
Domain domain = Factory.Domain.fetchInstance(ce_conn, null, null);
return Factory.ObjectStore.fetchInstance(domain, osName, null);
}
}


CAUSE
Bug in IBM FileNet Content Platform Engine Java API with no immediate fix. 


RESOLVING THE PROBLEM
Do not list a multivalue property more than once in a query for SearchScope.fetchObjects. There is no reason to list a property more than once.