Title: IBM ICM query: Troubleshooting ClassCastException casting search results to subclass DKLobICM or other - United States

Text:
ClassCastException; ClassCast; class cast; class cast exception; cast exception TECHNOTE (FAQ)

QUESTION
 I get a ClassCastException when I cast my search results to a DKLobICM, DKImageICM, DKTextICM, DKStreamICM, or DKVideoStreamICM. I am searching for resource items, but I cannot cast my results to DKLobICM. 

CAUSE
If you perform a search for items that are all allegedly one classification such as resource items with XDO classification Lob, Image, Text, Stream, or Video Stream. You will get a ClassCastException if you simply cast all results to DKLobICM, DKImageICM, DKTextICM,DKStreamICM, or DKVideoStreamICM if any of the items in your search result s are in fact not of the item type classification or XDO classification that you expected. 

 * 
 * XXXXXXXXXXXXXXXXXXXXXXXXXXXX
 * 
 * X !!! Exception !!! X
 * 
 * XXXXXXXXXXXXXXXXXXXXXXXXXXXX
 * 
 * Name: java.lang.ClassCastException
 * 
 * Message: com.ibm.mm.sdk.common.DKDDO
 * 
 * java.lang.ClassCastException: com.ibm.mm.sdk.common.DKDDO


For another example, an application performs a search for what it believes are all image resource items. It casts all returned DKDDOs to subclass DKImageICM. One of the following two errors occur because one or more of the results are not a resource item at all ( DKLobICM) or is a resource item but not image XDO classification ( DKImageICM). 
 * XXXXXXXXXXXXXXXXXXXXXXXXXXXX
 * 
 * X !!! Exception !!! X
 * 
 * XXXXXXXXXXXXXXXXXXXXXXXXXXXX
 * 
 * Name: java.lang.ClassCastException
 * 
 * Message: com.ibm.mm.sdk.common.DKDDO
 * 
 * java.lang.ClassCastException: com.ibm.mm.sdk.common.DKDDO
 * 
 * 
 * XXXXXXXXXXXXXXXXXXXXXXXXXXXX
 * 
 * X !!! Exception !!! X
 * 
 * XXXXXXXXXXXXXXXXXXXXXXXXXXXX
 * 
 * Name: java.lang.ClassCastException
 * 
 * Message: com.ibm.mm.sdk.common.DKLobICM
 * 
 * java.lang.ClassCastException: com.ibm.mm.sdk.common.DKLobICM


These errors occur because the application expected all results to be of the exact item type classification and XDO classification and did not programmatically detect if the results are the objects expected. A search was issued by the application that did in fact yield results different than the application expected. This is typically caused by the application issuing a query that does not adequately limit the search results. 

The bottom line is that the item failing the class cast is in fact not the correct subclass. 
ANSWER
Re-examine your search string. It is clear that your results include items that you did not expect. Add more conditions to the search string such as listing only item types that are of the desired classifications. Refer to the SSearchICM sample for more information on conditions you can use. 

Programmatically detect the item type classification and XDO classification of each DKDDO object in the search results prior to casting to ensure the results are as intended. 

 1. First, get your results as a DKDDO object. 
 2. Get the object type using the PID of the DDO. 
 3. Retrieve the item type definition based on that object type. 
 4. Detect the item type classification and XDO classification. 
 5. Cast to the subclass accordingly.


Refer to the C++ sample method, SItemRetrievalICM::printDDO(), for an example detecting this information using the definitions. For a quick solution, refer to the Java sample method, SItemRetrievalICM::printDDO(), for an example using the instance of operator. However, you should use the definition solution when your application is in production.




Cross reference information Segment Product Component Platform Version Edition Enterprise Content Management Content Manager Usage AIX, Linux, Solaris, UNIX, Windows 2000, Windows NT, Windows XP 8.1, 8.2