Title: IBM ReturnEvent() function not updating ObjectServer events - United States

Text:
nci; netcool; impact; netcool/impact; event; reader; eventreader; policy; launch; trigger; run; error TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 When tested the Impact Policy correctly gathers data and applies the values to the EventContainer but it fails to update the ObjectServer through the ReturnEvent(EventContainer) function.



SYMPTOM
Error message received: "Could not retrieve a reference to the EventReaderIfc for: DefaultEventReader"


CAUSE
Attempting to launch the Policy by using the Trigger Policy > Execute button on the Policy Editor GUI while employing the ReturnEvent(EventContainer) function.

DIAGNOSING THE PROBLEM
Examine the PolicyLogger log file for entries like:




"Caused by: java.lang.Exception: Could not retrieve a reference to the EventReaderIfc for: DefaultEventReader"




RESOLVING THE PROBLEM
Testing the Policy by using the Trigger Policy > Execute button on the Policy Editor GUI. 


Please be aware that the use of ReturnEvent() with EventContainer expects there to be a defined EventSource (for example: OMNIbusEventReader). In the IBM Tivoli Netcool/Impact Policy Reference Guide the ReturnEvent documentation states:



 * 
 * 
 * 
 * 


So, if you want to run this from an EventReader then there should be no problem using ReturnEvent(EventContainer). However, in the meantime, if you wish to test this via the Trigger Policy > Execute button on the Policy Editor GUI you will have to supply the EventSource as a member variable. This can be achieved by setting a Policy Runtime Parameter under the Configure User Parameters or Configure Policy Settings (Impact 7) button on the Policy Editor pane: 
 * 
 * [/support/docview.wss?uid=swg21978599&amp;aid=1]
 * 

In here you add a New Runtime Parameter: 

 * [/support/docview.wss?uid=swg21978599&amp;aid=2]


giving it values like @EventReader and a default value of "OMNIbusEventReader". 

This will give you a Runtime Parameter that is applied when the Policy is launched via the Trigger Policy > Execute button on the Policy Editor GUI and the Policy will be able to access this variable value and apply it in the ReturnEvent(EventContainer) function. As an alternative one can apply the variable at the start of the Policy as a hard coded value: 

 * 


and, when the Policy is eventually being launched by an EventReader, this variable setting can be commented out to allow the EventReader to apply the variable value directly. 

This also raises the question of launching a Policy via a PolicyActivator Service and this is discussed further in the TechNote "@JournalEntry does not work with Policy launched by PolicyActivator Service" [link to be added].