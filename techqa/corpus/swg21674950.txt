Title: IBM Deploy ODM Application to Decision Optimization Center without source files - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 How do you deploy ODM Application to Decision Optimization Center (ODM Enterprise server) without source files? 

ANSWER
Since ODM Enterprise 3.7, the odmdeploy tool has been enhanced with features devised to facilitate the deployment to production systems that are isolated from development environment, and have only server package installed, and no IDE. 

The documentation of odmdeploy tool has been greatly enhanced in Decision Optimization Center 3.8 (Note that the old obsolete topic content is still there). [http://www-01.ibm.com/support/knowledgecenter/SSQVNT_3.8.0/ilog.odms.ide.odm.enterprise.help/ODME/Deployment/topics/DepCommandLine.html?lang=en] 

http://www.ibm.com/support/knowledgecenter/SSQVNT_3.8.0/ilog.odms.ide.odm.enterprise.help/ODME/Deployment/topics/DepCommandLine.html?lang=en [http://www-01.ibm.com/support/knowledgecenter/SSQVNT_3.8.0/ilog.odms.ide.odm.enterprise.help/ODME/Deployment/topics/DepCommandLine.html?lang=en] 

Since ODM Enterprise 3.7, with minor enhancements in 3.7.0.1, deploying an ODM Application to a production system does not require the IDE on the target machine, and does not require the ODM Enterprise project either. Deployment can now be performed from a 'vanilla'.odmapp directly: 

 1. Deploy a "blank" ODM Application from the IDE (typically, with the single-user local _dev.odmds used by developers) and produce a 'vanilla' .odmapp file and its dependant jars. 
 2. Copy these files (.odmapp and jars) onto the production system where ODM Enterprise server is installed, and where the odmdeploy.exe/sh is available under the bin/<platform>/ directory. 
 3. Generate and deploy a production ODM Application using odmdeploy on the vanilla ODM Application, adding the server deployment parameters such as serverURL, dbType/Host/Port/..., userids, e.g.:
    odmdeploy -odmapp vanilla.odmapp -outputodmapp production.odmapp -serverURL https://somehost:port/odme-optimserver -dbtype DB2 -dbhost someHost -dbport 50000
    Note that starting with v3.8, the security model requires that security settings are provided, which include the -odmeAdminUser, -odmeAdminPassword, -autoAcceptCertificate and -odmeSystemUser, -odmeSystemPassword options.
    To find the options that are available on your installation (which depend on the fixpack level), run odmdeploy -h.
    This will result in a production.odmapp file to be produced and deployed on the server. 
 4. To run this production ODMApp, you can either copy it back from the server to the clients running ODMStudio (for v 3.7.0.x), or even download the ODM Application's zippped archive from Decision Optimization Center console (available since v3.8, requires a userid with administrator rights).


Note: 
A current limitation is that .odmapp using 'Custom' URL cannot be deployed in the above way with version 3.8. We have publish a technote that can workaround this issue: 
http://www.ibm.com/support/docview.wss?uid=swg21691687 [http://www-01.ibm.com/support/docview.wss?uid=swg21691687] In Decision Optimization Center 3.8, besides changes to accommodate the https and new security scheme, some new features have been added vs 3.7.0.x: 

First, odmdeploy -h will show help, with full names of all the options and their aliases/shortcuts in [ ].
When running an odmdeploy command, in general, when an option is missing, odmdeploy will report it by name. Running with -h should provide enough guidance to find out what to put in.
Options are case-insensitive. 

Second, odmdeploy now accepts options from a file, with the odmdeploy @myopts.opt syntax
There can be more than one @file.opt on the command line
The options taken from the file.opt will be inserted in the command line as if they had been typed on the command line
The format of the file.opt is one line per option with its argument if there is one, e.g.:
-admuser tim
-admpw manager
-serverURL https://somehost:port/odme 

Also note that option files can include other option files with the @ syntax, so you could factor out common settings such as odme admin usid/pw for example. 

For example, using the attached nurse_WAS-CE_DB2.opts file to deploy Nurse on WAS-CE with DB2: (note that the source odmapp is the default _dev local one, produced from IDE, and a new .odmapp is created for multi-user DB2). Syntax to run it is just odmdeploy @nurse_WAS_DB2.opts. 

 

 nurse_WAS-CE_DB2.opts [/support/docview.wss?uid=swg21674950&aid=2]nurse_WAS-CE_DB2.opts [/support/docview.wss?uid=swg21674950&aid=1] 

 

Then, to try this newly generated multi-user DB2 Nurse ODM Application's default scenario, use the attached nurse_WASCE_DB2_IVT.opts, invoked with odmdeploy @nurse_WAS_DB2_IVT.opts. 

 

nurse_WASCE_DB2_IVT.opts [/support/docview.wss?uid=swg21674950&aid=4]nurse_WASCE_DB2_IVT.opts [/support/docview.wss?uid=swg21674950&aid=3] 

 

Third, odmdeploy has extended options (listed by odmdeploy -xHelp) to: 

 * list the content of a ODM Application's (-xAppInfo) deployment descriptor, 
 * list ODMapps deployed on a server (-xlistServerApps), 
 * run installverificationTest (-xIVT) on an odmapp by creating default scenario and starting solve on it.