Title: IBM Conversion of 32 bit to 64 bit WebSphere Application Server on
the same machine - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 What are the steps to convert WebSphere Application Server from 32 bit to 64 bit? 

CAUSE
This document deals with converting WebSphere Application Server from 32 bit to 64 bit installation on the same machine. There is no direct approach for this conversion. The 32 bit WebSphere installation has to be uninstalled and new 64 bit installation has to be installed. This document explains how this can be done without losing any data during conversion. The best practice is that the deployment manager as well as the nodes is converted to 64 bit at the same time. If this is not possible, first upgrade the deployment manager and then the nodes.

ANSWER
Requirements for conversion: 

. 
1. Confirm you have administration privileges or root privileges. 
2. Check whether you have both 64 bit and 32 bit (in case of roll back) WebSphere installation CD or dump. 
3. Check whether this system / kernel (in case of Unix) supports 64 bit. This can be checked using prtconf command in case of AIX. Check with the Administrator for other environments. 
. 
Conversion steps: 
. 
1. Note the deployment manager name, node name and cell name using admin console of the existing WebSphere installation. This can be found by clicking on System Administration -> Nodes, System Administration -> Deployment Manager, and System Administration -> Cell. Note all the node names (including deployment manager). 
. 
2. Logout of admin console and go to <WAS_HOME>/profiles/<dmgr_profile>/bin. 
Run backupConfig command. This will stop the deployment manager. 
. 
C:\<WAS_HOME>\profiles\<dmgr>\bin\backupConfig.bat dmgr.zip 
$<WAS_HOME>/profiles/<dmgr>/bin/backupConfig.sh dmgr.zip 
. 
If global security is enabled, add the following parameters -username <username> and -password <password> 
. 
Go to each node and run the following command. This will stop all the JVM. . 
C:\<WAS_HOME>\profiles\<nodename>\bin\backupConfig.bat node.zip 
$<WAS_HOME>/profiles/<nodename>/bin/backupConfig.sh node.zip 
. 
3. Stop any other Java process that are running in the deployment manager and node machines (eg : mercator) 
. 
4. Backup security, classes, jdbc, cloudscape and other folders that you have created under <WAS_HOME>. 

Take a backup of certificates also (if it is stored under <WAS_HOME>). Do this in the deployment manager and all the nodes. 
. 
Take full backup of <WAS_HOME> folder (just in case) [optional] 
. 
It is recommended to create a separate backup folder (say /tmp/backup or C:\temp\backup) and copy all backup into it. Also copy the dmgr.zip and node.zip created in the previous step into this folder. 
. 
5. This step is required only if node is being upgraded to 64 bit but not the deployment manager. Otherwise proceed to next step. 
. 
Start the deployment manager and the node agent: 
. 
C:\<WAS_HOME>\profiles\<dmgr>\bin\startManager.bat 
$<WAS_HOME>/profiles/<dmgr>/bin/startManager.sh 
. 
C:\<WAS_HOME>\profiles\<nodename>\bin\startNode.bat 
$<WAS_HOME>/profiles/<nodename>/bin/startNode.sh 

. 
Remove the node from the cell: 
. 
C:\<WAS_HOME>\profiles\<nodename>\bin\removeNode.bat 
$<WAS_HOME>/profiles/<nodename>/bin/removeNode.sh 
.
If global security is enabled, add the following parameters -username <username> and -password <password> 
. 
Stop the node agent once it is removed from the cell. You may have to kill the java process. 
. 
6. Delete all the profile folders and uninstall websphere 32 bit installation. Uninstall can be done by 
C:\<WAS_HOME>\_uninst\uninstall.exe 
$<WAS_HOME>/_uininst/uninstall -silent 
.
Delete <WAS_HOME> folder 
. 
7. Install 64 bit WebSphere and any fixpack that is required. Install WebSphere 64 bit to the same <WAS_HOME> folder. 
. 
8. Create deployment manager profile and also other node profiles. 
. 
Note: Use the same node name for the profiles and deployment manager. After this is done, we will have an empty cell similar to 32 bit WebSphere. 
. 
Note: If only nodes are migrated from 32 bit to 64 bit, then create a custom profile and federate it to the existing deployment manager. In the following steps, do the ones specified for nodes only. 

9. Stop the deployment manager and all the node agent processes that would have started in previous step. 
. 
10. Restore all the backups. This is a very crucial step. 
Copy dmgr.zip and node.zip from the backup folder created in step 4. 
Run the restoreConfig command as follows in the deployment manager and also in node profiles. . 
C:\<WAS_HOME>\profiles\<dmgr>\bin\restoreConfig.bat dmgr.zip 
$<WAS_HOME>/profiles/<dmgr>/bin/restoreConfig.sh dmgr.zip 
. 
C:\<WAS_HOME>\profiles\<nodename>\bin\restoreConfig.bat node.zip 
$<WAS_HOME>/profiles/<nodename>/bin/restoreConfig.sh node.zip 
. 
11. Copy other required folders (for eg : certificates, etc folder) to the new <WAS_HOME> folder. . 
12. Modify metadata.properties files on dmgr and node 

 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 

. 
13. Start the deployment manager and check the logs for any errors. 
. 
14. Do a manual sync of all nodes before starting the nodeagent. Sync can be done by: . 
C:\<WAS_HOME>\profiles\<nodename>\bin\syncNode.bat <dmgrhost> <soap-port> 
$<WAS_HOME>/profiles/<nodename>/bin/syncNode.bat.sh <dmgrhost> <soap-port> 
. 
15. Start node agent and the servers and check the logs. 

You will have a 64 bit WebSphere installation up and running. 
. 
--------------------- 
Rollback: 
. 
In case of any errors during 64 bit installation in step 7 and you want to rollback the changes to 32 bit, follow step 7 to 14 but Instead of installing 64 bit in step 7, install 32 bit WebSphere installation.