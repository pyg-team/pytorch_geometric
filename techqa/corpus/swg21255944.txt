Title: IBM ICM Query: Avoid wildcards at the beginning of the string with the LIKE operator - United States

Text:
performance TECHNOTE (FAQ)

QUESTION
 A query that uses the LIKE operator with wildcards performs poorly. For example, this query returns all Journals with a Title about Javaâ„¢:

"/Journal [@Title LIKE \"%Java%\"]" 

CAUSE
When a wildcard (the percent sign (%) for multiple characters or the underscore (_) for a single character) is used at the beginning of the string literal, the underlying database system creates a query that is inefficient. Even if a database index has been defined on the Title attribute in the Journal item type, the database system would likely not be able to use such an index and would instead resort to a generally more expensive table scan.

ANSWER
If possible, avoid placing the wildcard character at the beginning of the literal that is used with the LIKE operator. Whether this is possible would depend on the actual data that is present in the system. However, if you know that the word you are searching for (for example, Java) is the first word of the title, then avoiding the initial wildcard would likely lead to higher performance. An example of a rewritten query would be: 

"/Journal [@Title LIKE \"Java%\"]"

Note that the rewritten query might not return the same set of results as the original query, depending on the actual data present in the system.

Alternatively, you can define a text index on the Title attribute and use text search to perform the original query as follows:

"/Journal [contains-text-basic (@Title,\"Java\")=1]"




Cross reference information Segment Product Component Platform Version Edition Enterprise Content Management Content Manager DB2 Information Integrator for Content AIX, Red Hat Linux, Solaris, Windows 8.1, 8.2, 8.3 All Editions