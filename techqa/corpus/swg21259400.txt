Title: IBM ICM Query: Wildcard characters with attributes of character and variable character types - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 When using wildcard characters with the LIKE operator in IBM® DB2® Content Manager queries, remember the differences in behavior between the queries on attributes of character type and attributes of variable character type. To make the queries less error-prone due to this difference, you can use the multi-character wildcard to represent all trailing characters after the search term.

For example, if in the component type view Journal the PublisherName attribute is defined to be of type variable character (or varchar) and one of the components has the value "IBM" in this attribute, then the following query returns the result containing this attribute value:

/Journal [@PublisherName LIKE "IB_"]

However, if in the component type Journal_Editor the Affiliation attribute is defined to be of type character (or char) and one of the components has the same value "IBM" in this attribute, then the following similar query does not return the result containing the value:

//Journal_Editor [@Affiliation LIKE "IB_"] 

CAUSE
The difference in behavior between the attributes of character type and attributes of variable character type is because attributes of character type are defined to be of fixed length. For example, in the case of the Affiliation attribute, the length is 64. When the value "IBM" is stored in the attribute of fixed character type, the three characters of the word IBM are followed by 61 blanks (64 - 3 = 61). These blanks are padding characters, where the exact type of character used depends upon the database settings.
Because the wildcard underscore character (_), when used with the LIKE operator, matches any single character, only values starting with two letters "I" and "B," followed by any third letter, would be returned in the example query on the Affiliation attribute in the previous section. Because all values in the Affiliation attribute contain 64 characters (not 3 characters), the following query does not return any results:

//Journal_Editor [@Affiliation LIKE "IB_"]

However, because the PublisherName attribute is of variable character type, if a value "IBM" is stored into this attribute, the length of the attribute is 3 and the following query returns results that contain the string "IBM" as expected:

/Journal [@PublisherName LIKE "IB_"]


ANSWER
Due to certain database restrictions, there is no easy solution to the problem of using a trailing single-character wildcard with attributes of fixed-length character type to match values of a specific length. However, if you are less concerned with the overall length of the string, but more concerned with the string starting with a certain sequence of characters, then using a multi-character wildcard (the percent sign (%) in XPath query strings used in the IBM DB2 Content Manager API) should address your needs. 


To find all results with attribute values starting with a certain pattern for attributes of fixed character length, you can use the multi-character wildcard "%" as follows:

//Journal_Editor [@Affiliation LIKE "IB%"]

Note that this pattern is identical to the pattern that you could use for attributes of variable character type:

/Journal [@PublisherName LIKE "IB%"]

Important:
In eClient and Client for Windows® environments, the question mark (?) is used to represent the single-character underscore (_) wildcard and the asterisk (*) is used to represent the multi-character percent sign (%) wildcard. Nevertheless, the associated behavior and the solution are identical.

Remember that the use of wildcards requires extra processing on the underlying database system and can lead to a degradation of expected performance for your queries. To get better performance in your queries, use the exact phrase that you want to search for (without the LIKE operator or wildcard characters). For example:

//Journal_Editor [@Affiliation = "IBM"]

With direct comparison, there is no need to use the trailing blank characters because the database system takes care of the necessary truncation in this case. Alternatively, you can use text search to query the attribute. For more details, refer to the IBM DB2 Content Manager Application Programming Guide under the section "Searching for data."




Cross reference information Segment Product Component Platform Version Edition Enterprise Content Management Content Manager DB2 Information Integrator for Content AIX, Red Hat Linux, Solaris, Windows 8.1, 8.2, 8.3 All Editions