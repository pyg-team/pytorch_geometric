Title: IBM PI11006: Threads hang during recovery after the process to create replica shards times out. - United States

Text:
 SUBSCRIBE TO THIS APAR
By subscribing, you receive periodic emails alerting you to the status of the APAR, along with a link to the fix after it becomes available. You can track this item individually or track all items by product.

Notify me when this APAR changes.

Notify me when an APAR for this component changes.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  In large topologies, the catalog server experiences hung
   threads during recovery after the process to create replica
   shards times out.
   
   
    
   
   

LOCAL FIX

PROBLEM SUMMARY
 *  ****************************************************************
   * USERS AFFECTED:  WebSphere eXtreme Scale users in large      *
   *                  topologies.                                 *
   ****************************************************************
   * PROBLEM DESCRIPTION: The catalog server experiences hung     *
   *                      threads trying to do recovery after     *
   *                      replica shard creation times out.       *
   ****************************************************************
   * RECOMMENDATION:                                              *
   ****************************************************************
   A recovery path (PlacementServiceImpl.removeShard) was
   incorrectly called when replica creation timed out with
   NO_RESPONSE or MessageTimeOutException exceptions. In large
   topologies, the high volume of calls causes a bottleneck on the
   catalog server, and the hung threads are detected.
   See the following example message from a catalog server JVM log
   or SystemOut.log file:
   ThreadMonitor W   WSVR0605W: Thread "ORB.thread.pool : 177"
   (0000102e) has been active for 784792 milliseconds and may be
   hung.  There is/are 1326 thread(s) in total in the server that
   may be hung.
   at sun.misc.Unsafe.park(Native Method)
   at
   java.util.concurrent.locks.LockSupport.park(LockSupport.java:156
   )
   at
   java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndChe
   ckInterrupt(AbstractQueuedSynchronizer.java:811)
   at
   java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQue
   ued(AbstractQueuedSynchronizer.java:842)
   at
   java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(Ab
   stractQueuedSynchronizer.java:1178)
   at
   java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock
   (ReentrantReadWriteLock.java:807)
   at
   com.ibm.ws.objectgrid.locks.RWLock16.startWriting(RWLock16.java:
   79)
   at
   com.ibm.ws.objectgrid.catalog.placement.PlacementServiceImpl.rem
   oveShard(PlacementServiceImpl.java:1972)
   
   
    
   
   

PROBLEM CONCLUSION
 *  Apply the interim fix for catalog servers to recover after the
   hung threads resolve.
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   PI11006
   
   
 * REPORTED COMPONENT NAME
   WS EXTREME SCAL
   
   
 * REPORTED COMPONENT ID
   5724X6702
   
   
 * REPORTED RELEASE
   850
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2014-02-04
   
   
 * CLOSED DATE
   2014-02-06
   
   
 * LAST MODIFIED DATE
   2014-02-06
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   WS EXTREME SCAL
   
   
 * FIXED COMPONENT ID
   5724X6702
   
   

APPLICABLE COMPONENT LEVELS
 * R850 PSY
   UP
   
   
 * R860 PSY
   UP