Title: IBM Connect:Direct UNIX error message XSQF005I on copy to Z/OS - United States

Text:
STERLINGPRI TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Connect:Direct UNIX error message XSQF005I on copy to Z/OS 

SYMPTOM
XSQF005I 
Read buffer too small. Possibly src reclen > dest reclen. buffer supplied to sdsq_read() was too small to hold the returned data. 
XSMG622i 
An exception response was received from the remote node during process execution.


CAUSE
Two parameters can cause the XSQF005I error. The LRECL and RECFM parameters. Connect Direct UNIX creates a read buffer the size of the LRECL parameter setting on the COPY TO statement. When Connect Direct reads the source data file, it reads until a ASCII line-feed (LF) or Hex >0a is encountered in the file. If the number of bytes read are greater than the read buffer size, the XSQF005I error occurs.

This would mean that the source data file had encountered a record larger than it's read buffer length. 

Three things can cause this: 
1. The record length coded is incorrect for a fixed length 
record file.
2. There is no record length for the file (no hex >0a's present).
3. The record length is coded incorrectly for a variable length record file.

RESOLVING THE PROBLEM
Check several things:

1) Is the source UNIX data file in standard UNIX ASCII data format. This means each record in the file has a line-feed (LF) at the end of it. Check this by stripping a few records from the front of the file and dumping them in Hex. This can be achieved with the following UNIX command "head -10 /d_dir/src_filename | od -x > /d_dir/hex_dump_file". This would strip the first 10 records of src_filename and dump them in Hex into hex_dump_file. Count the bytes and look for a Hex >0a (LF) where the end of the first record should be. 

2) If a Hex >0a (LF) is not found at the end of the record length as specified in the LRECL parameter of the COPY TO statement, but they are present consistently at a different location, then correct the record length by changing the LRECL parameter to be the correct length. If this is the analysis then it would be expected that the RECFM parameter would be set equal to FB (Fixed Block). This would be a more probable solution if the XSQF005I error occurred before any data was transferred and a zero byte destination file may be created on the SNODE.

3) If there are no Hex >0a (LF) bytes in the source data file, then it is a ASCII stream file and can still be transferred to MVS by setting the COPY FROM statement's parameter, SYSOPTS= ":datatype=binary:xlate=yes:". This causes Direct not to create the read buffer, but the data is streamed to the MVS node and the MVS Direct will be responsible for breaking the data into records based on the LRECL parameter setting. If this is the analysis then it would be expected that the RECFM parameter would be set equal to FB (Fixed Block). This would be a more probable solution if the XSQF005I error occurred before any data was transferred and a zero byte destination file may be created on the SNODE.

4) If the ASCII data file contains a (LF) >0a at varying, inconsistent, locations, then the file probably contains variable length records. Check if the RECFM parameter of the COPY TO statement is set equal to VB (Variable Block)? If it is then the file should contain variable length records and the LRECL parameter must be set equal to the longest record in the file. If this is the analysis then it would be expected that the RECFM parameter should be set equal to VB (Variable Block). This would be the more obvious problem if part of the data transferred before the XSQF005I error was encountered.



HISTORICAL NUMBER
 PRI69