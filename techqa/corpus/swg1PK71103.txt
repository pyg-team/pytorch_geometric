Title: IBM PK71103: DYNAMICALLY SETTING THE TOTAL TRANSACTION LIFETIME TIMEOUT      DURING RUNTIME DOES NOT TAKE EFFECT IMMEDIATELY. - United States

Text:
  FIXES ARE AVAILABLE
Java SDK 1.5 SR10 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24024201]
6.1.0.31: Java SDK 1.5 SR11 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24026453]
6.1.0.33: Java SDK 1.5 SR12 FP1 Cumulative Fix for WebSphere [http://www-01.ibm.com/support/docview.wss?uid=swg24027786]
6.1.0.29: Java SDK 1.5 SR11 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24025191]
6.1.0.35: Java SDK 1.5 SR12 FP2 Cumulative Fix for WebSphere [http://www-01.ibm.com/support/docview.wss?uid=swg24028574]
6.1.0.37: Java SDK 1.5 SR12 FP3 Cumulative Fix for WebSphere [http://www-01.ibm.com/support/docview.wss?uid=swg24029525]
6.1.0.39: Java SDK 1.5 SR12 FP4 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24030426]
6.1.0.41: Java SDK 1.5 SR12 FP5 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24031035]
6.1.0.43: Java SDK 1.5 SR13 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24031963]
6.1.0.45: Java SDK 1.5 SR14 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24033270]
6.1.0.47: WebSphere Application Server V6.1 Fix Pack 47 [http://www-01.ibm.com/support/docview.wss?uid=swg24035508]
6.1.0.47: Java SDK 1.5 SR16 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24035649]


SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  Background:
   -----------
   The 'Total Transaction Lifetime Timeout' configuration setting
   of the Transaction service can be set in two different places:
   'Configuration' and 'Runtime'.
   
   This document from the Information Center describes the
   difference:
   
   Transaction service settings
   http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/index.jsp?
   topic=/com.ibm.websphere.nd.doc/info/ae/ae/udat_contranserv.html [http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/index.jsp?topic=/com.ibm.websphere.nd.doc/info/ae/ae/udat_contranserv.html]
   
   
   At runtime, the 'Total Transaction Lifetime Timeout' can be
   changed to a different value in 2 ways:
   
   (1) Using the 'Runtime' tab of the Administrative Console:
   Servers  > Application Servers > _server_name_  >
   Container Services > Transaction Service
   
   --or--
   
   (2) Using scripting via wsadmin
   
   Configuring transaction properties for a server using scripting
   http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/index.jsp?
   topic=/com.ibm.websphere.nd.doc/info/ae/ae/txml_transaction.html [http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/index.jsp?topic=/com.ibm.websphere.nd.doc/info/ae/ae/txml_transaction.html]
   
   
   Problem:
   --------
   When the 'Total Transaction Lifetime Timeout'
   (totalTranLifetimeTimeout in scripting) is changed dynamically
   at runtime, there is the potential for new transactions to use
   the old value instead of the new value.
   
   The outward symptom of this problem could be a transaction
   timeout reported to the SystemOut.log:
   
   [7/23/08 5:33:11:587 EDT] 0000003a TimeoutManage I   WTRN0006W:
   Transaction
   0000011BE86C48770000000100000024A5AAA0898B4C5D409F1F0AA75669E9E8
   EA5F2E680000011BE86C48770000000100000024A5AAA0898B4C5D409F1F0AA7
   5669E9E8EA5F2E6800000001 has timed out after 120 seconds.
   
   The will report that the transaction has timed out after the old
   timeout value's number of seconds.  In this message, the old
   value for the transaction timeout was 120 seconds.  The
   transaction timeout occurred because the application component
   needed more time to complete the work.  The timeout was
   configured dynamically before starting the transaction, however,
   the new value was not picked up immediately.
   
   
   NOTE:  This APAR will NOT resolve ALL transaction timeout
   issues.  It will resolve problems ONLY where the dynamically
   configured transaction timeout value is not picked up
   immediately for newly started transactions.
   
   
    
   
   

LOCAL FIX
 *  (1)  Set the transaction timeout on the configuration tab to a
   value large enough for all transactions which will run on the
   server.
   
   (2)  If using the UserTransaction interface, invoke
   UserTransaction.setTransactionTimeout(0) prior to invoking
   UserTransaction.begin().
   
   
    
   
   

PROBLEM SUMMARY
 *  ****************************************************************
   * USERS AFFECTED:  All users of WebSphere Application Server   *
   *                  V6.0.2 and V6.1                             *
   ****************************************************************
   * PROBLEM DESCRIPTION: When the 'Total Transaction Lifetime    *
   *                      Timeout' is changed dynamically at      *
   *                      runtime, either through scripting or    *
   *                      via the Administration Console, there   *
   *                      is the potential for new transactions   *
   *                      to use the old value instead of the     *
   *                      new value.                              *
   ****************************************************************
   * RECOMMENDATION:                                              *
   ****************************************************************
   When starting a User Transaction, the timeout value used when
   initialising the transaction is taken from the current timeout
   value active on the thread.  If this timeout value is reset to
   the server wide default, it refreshes the value from a cached
   version of the default rather than from the server
   configuration.
   
   
    
   
   

PROBLEM CONCLUSION
 *  Change to ensure that when a user transaction is started that
   has not specified a timeout value, always use the the value
   that is currently active in the server configuration.
   
   The fix for this APAR is currently targeted for inclusion in
   fixpacks 6.0.2.33 and 6.1.0.23.  Please refer to the
   Recommended Updates page for delivery information:
   http://www.ibm.com/support/docview.wss?rs=180&uid=swg27004980 [http://www.ibm.com/support/docview.wss?rs=180&uid=swg27004980]
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   PK71103
   
   
 * REPORTED COMPONENT NAME
   WEBS APP SERV N
   
   
 * REPORTED COMPONENT ID
   5724H8800
   
   
 * REPORTED RELEASE
   60I
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2008-08-26
   
   
 * CLOSED DATE
   2008-10-15
   
   
 * LAST MODIFIED DATE
   2008-10-15
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   WEBS APP SERV N
   
   
 * FIXED COMPONENT ID
   5724H8800
   
   

APPLICABLE COMPONENT LEVELS
 * R60A PSY
   UP
   
   
 * R60H PSY
   UP
   
   
 * R60I PSY
   UP
   
   
 * R60P PSY
   UP
   
   
 * R60S PSY
   UP
   
   
 * R60W PSY
   UP
   
   
 * R60Z PSY
   UP
   
   
 * R61A PSY
   UP
   
   
 * R61H PSY
   UP
   
   
 * R61I PSY
   UP
   
   
 * R61P PSY
   UP
   
   
 * R61S PSY
   UP
   
   
 * R61W PSY
   UP
   
   
 * R61Z PSY
   UP