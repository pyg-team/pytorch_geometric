Title: IBM Why did my query performance fluctuate? - United States

Text:
qry perfdb qryperf optimizer SQL TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 This document describes the factors that affect query performance and which tools to use to investigate further. 

SYMPTOM
IBM DB2 for i contains an advanced cost-based optimizer that uses robust algorithms to quickly implement queries using the least amount of resources possible. In order to do this, the query optimizer creates access plans using information available from the application, infrastructure, and data (including SQL indexes, DDS-Logical Files and SQL Statistics). If information is missing, the optimizer relies on something called default filter factors or default guesses. If information is available but does not accurately reflect the Database Engineer's expected outcome of the query, then the performance of the access plan is at risk. 

Each time the IBM i system is asked to optimize a query, the optimizer first has to review what information is available to it at that time. If any of the information changes from run to run, performance can also change. Additionally, if the information is now missing or unsatisfactory, then the access plan may not perform as well as it did in the past. 

 

Several factors can influence consistently good performance; optimal implementation methods are achieved when the factors listed below are reviewed and accurately set to match both the business and technical requirements of the query. 


CAUSE
The following factors influence query performance: 
1) Server configuration & attributes such as PTF levels
2) Version/Release/Modification level of the server
3) Server performance 
4) Job & query attributes 
5) Quality of the SQL Request 
6) Cursor sensitivity
7) Cursor reuse
8) Symmetric Multi-Processing product enabled 
9) Database design/data model 
10) Table size/number of rows/number of deleted rows 
11) Availability of Views/Indexes/Temporary Indexes 
12) Optimization goal 
13) Fair share of memory
14) Existence of background statistics 
15) Data Skew
16) SQL environment differences (e.g. STRSQL has special algorithms available to it that are not available in any other SQL environment)


ENVIRONMENT
DB2



DIAGNOSING THE PROBLEM
Visual Explain provides a graphical representation of the optimizer's implementation of a query and can be found in the IBM i Navigator or IBM i Access Client Solutions (ACS) products. The tool relies on data collected in a Database Monitor, Plan Cache Snapshot, or real-time via queries being run in Run SQL Scripts or via Show Statements in the Plan Cache. Consider collecting Plan Cache Snapshots on a regular basis or before changes occur so that these Snapshots can be used for comparison purposes.



RESOLVING THE PROBLEM
 Many of the factors listed above are displayed in Visual Explain. It is suggested that the user compare data showing a fast run of the query to data showing a slow run of the same query and are any of the above factors different? If all of the factors are the same, then investigate the accuracy of the above factors. For example, if no indexes exist to support a critical query with a join condition, then the quality of information given to the optimizer is suboptimal and the optimizer must rely on default values which can cause unpredictable and inconsistent runtimes. If indexes were created, that give the optimizer information about the JOIN condition, now the optimizer can consistently implement the query using the most efficient JOIN order. 

 

It is also suggested that the user review the Dynamic Replan Reason Code for clues as to why the original access plan may have been replaced with a new access plan (this is known as query reoptimization). 

 

Here is an example of the optimizer observing a difference in the Parallel Processing Degree (QQRYDEGREE system value) from the last time the plan was created, therefore, when this query ran on September 27th, the optimizer created a new plan which will now consider the QQRYDEGREE system value change. If for example the Parallel Processing Degree was set to *NONE, then possibly the reason the query started performing poorly is because it can no longer use multiple processors to implement the query.
Visual Explain image showing Dynamic Replan Reason Code [/support/docview.wss?uid=nas8N1021655&aid=1] [/support/docview.wss?uid=nas8N1021655&aid=1]

RELATED INFORMATION
 Database Performance & Query Optimization Manual [http://www.ibm.com/support/knowledgecenter/en/ssw_ibm_i_71/rzajq/rzajq.pdf?view=kc]
Indexing Strategy Whitepaper [https://www-356.ibm.com/partnerworld/wps/servlet/download/DownloadServlet?id=G_mhBFTHFjyiPCA$cnt&attachmentName=ibm_db2_for_i_indexing_methods_and_strategies.pdf&token=MTQ3NTM4NTQxNjgzNA==&locale=en_ALL_ZZ]
SQL Performance Analysis Simplified Redbook [http://www.redbooks.ibm.com/abstracts/sg247326.html?Open]
What is a Database Engineer? [http://db2fori.blogspot.com/2012/11/db2-for-i-database-engineer-description.html]





Cross reference information Segment Product Component Platform Version Edition Operating System IBM i 7.3 Operating System IBM i 7.2 Operating System IBM i 7.1 Operating System IBM i 6.1