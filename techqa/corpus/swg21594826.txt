Title: IBM How to scale InfoSphere MDM Event Processing in a clustered WebSphere environment? - United States

Text:
activation specification MDM MDB JMS WAS TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 With the default configuration of InfoSphere MDM Server, the performance of Event Processor might not scale. This can happen when InfoSphere MDM Server is deployed on a WebSphere Application Server cluster using Service Integration Bus (SIB) as the main messaging engine. The default configuration allows only single instances of WebSphere Application Server to be used for event processing, and this impacts scalability. The good news is the configuration can easily be changed to utilize all instances of WebSphere Application Server in the cluster. This document provides the details of how it can be done. 

SYMPTOM
Poor scalability of Event Processor. Unbalanced CPU utilization on WebSphere Application Server Cluster. 

Not able to maximize performance and scalability given available CPU resources in a WebSphere Application Server cluster


CAUSE
Default setting for activation specification of Message Driven Beans (MDB) in an InfoSphere MDM Server deployment environment uses only a single node. 


ENVIRONMENT
InfoSphere MDM Server deployed in a WebSphere Application Server cluster using Service Integration Bus (SIB) as the main messaging engine. 

The configuration steps described in this documentation are applicable to the following software:


 * IBM InfoSphere MDM Server version 10 Advanced Edition & Enterprise Edition 
 * IBM InfoSphere MDM Server version 9.0.1 and version 9.0.2 
 * WebSphere Application Server Network Deployment edition v7.0.0.x

DIAGNOSING THE PROBLEM
Event Management Framework in InfoSphere Master Data Management (MDM) Server is a framework that enables asynchronous processing of business logic based on the occurrence of certain business events during the lifecycle of master data management process. Event Management Framework runs on top of JMS (Java Messaging Service) specification which is provisioned by the WebSphere Application Server, the J2EE platform where InfoSphere MDM Server is deployed. This document introduces a configuration of JMS resources to achieve distributed processing by Message Driven Beans (MDB), when InfoSphere MDM Server is run on a clustered WebSphere Application Server environment utilizing SIB engine.



RESOLVING THE PROBLEM
 

1. Log into the WebSphere Application Server admin console using administrator ID and Password.
2. In the main menu, expand ‘Resources’, and ‘JMS', then click ‘Activation specifications’
3. Adjust the scope of the resources so that you can see the ‘EMList_SPEC.’ in the Activation Specification List. Click ‘EMList_SPEC.’
[/support/docview.wss?uid=swg21594826&aid=1] [/support/docview.wss?uid=swg21594826&aid=1]
4. Scroll down the Configuration until you see the Advanced Section. Locate the checkbox ‘Always activate MDBs in all servers’ and select the checkbox. (This option is a new option that was added in WebSphere Application Server version 7 )

[/support/docview.wss?uid=swg21594826&amp;aid=2]
5. Control the concurrency of MDBs as below
The ‘Maximum Concurrent MDB invocations per endpoint’ setting in the Activation Specification is set to a maximum number of concurrent MDB’s that may be running in a given time. This setting is applied per server (endpoint) basis. For example, when you are running a WebSphere Application Server cluster that contains four servers, and the maximum concurrent MDB invocations per endpoint is set to 10, the total number of MDB threads running to do event processing will actually be 40 (4x10).

[/support/docview.wss?uid=swg21594826&amp;aid=3]


 * Note: 
 * 


6. Apply the change, and save the configuration. You need to restart the WebSphere Application Server cluster by going to the cluster list and restarting the WebSphere Application Server cluster. With these changes in place, Event tasks (which trigger the MDBs) are distributed to all participating servers in round robin fashion.