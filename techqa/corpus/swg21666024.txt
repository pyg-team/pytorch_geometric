Title: IBM DFHSJ0215 and DFHSJ0914 JVM Server disabled when installing CICS Liberty JVMServer after upgrading the Liberty Server in CICS - United States

Text:
DFHSJ0215 JVM SERVER OSGI FRAMEWORK DFHSJ0914 JVMSERVER DISABLED LANGUAGE ENVIRONMENT ENCLAVE liberty websphere disabled 5655Y0400 R680 680 R800 800 HCI6800 5655-Y04 5655Y04 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 You applied maintenance to the Liberty Profile within CICS. Now when you install a CICS Liberty JVMServer, you receive messages DFHSJ0215 and DFHSJ0914 in the CICS log indicating that the JVM Server failed to initialize and is disabled. This occurs after you apply maintenance to CICS to upgrade the Liberty Server. 

SYMPTOM
DFHSJ0215 [http://pic.dhe.ibm.com/infocenter/cicsts/v5r1/topic/com.ibm.cics.ts.messages.doc/DFHSJ/DFHSJ0215.html] The JVM SERVER xxxxxxxx FAILED TO INITIALIZE THE OSGI FRAMEWORK. THE JVM WILL BE TERMINATED.
DFHSJ0914 [http://pic.dhe.ibm.com/infocenter/cicsts/v5r1/topic/com.ibm.cics.ts.messages.doc/DFHSJ/DFHSJ0914E.html] JVMSERVER xxxxxxxx IS DISABLED BECAUSE THE LANGUAGE ENVIRONMENT ENCLAVE WAS NOT CREATED.


CAUSE
Multiple versions of the files are in the /wlp directory.

DIAGNOSING THE PROBLEM
In viewing the dfhjvmerr file you see that the JVM is actually returning an error code 22 that indicates the Liberty Server failed with "ERROR_SERVER_START". This means the Liberty Server failed to start.


Exception in thread "Router-Init-Thread" 
com.ibm.cics.router.RouterException: Unable to start Liberty profile server
at com.ibm.cics.router.Router.initLiberty(Router.java:949)
at com.ibm.cics.router.Router.initOSGi(Router.java:557)
at com.ibm.cics.router.Router.main(Router.java:2450)
Caused by: 
java.lang.Exception: Liberty profile: Server did not start sucessfully
at com.ibm.cics.router.wlp.internal.LibertyServerImpl.startServer(LibertyServerImpl.java:849)
at com.ibm.cics.router.wlp.internal.LibertyServerImpl.startServer(LibertyServerImpl.java:807)
at com.ibm.cics.router.Router.initLiberty(Router.java:945)
... 2 more
Caused by: 
java.lang.Exception: Liberty profile: Server did not start sucessfully, error code 22
at com.ibm.cics.router.wlp.internal.LibertyServerImpl.startServer(LibertyServerImpl.java:844)
... 4 more 
The dfhjvmtrc file shows the following exceptions: 
2014/01/10 17:14:58.301235 UTC *Exc*: Main method threw exception
2014/01/10 17:14:58.306928 UTC Exit : run_classes
2014/01/10 17:14:58.306983 UTC *Exc*: Error running setup class
2014/01/10 17:14:58.307282 UTC Exit : start_jvm 
When you browse the the wlp/lib directory you see that there are several versions of the Liberty code within the zFS structure: 
EUID=10161732 /usr/lpp/cicsts/cicsts51/wlp/lib/
Type Filename
_ File com.ibm.ws.jsf_1.0.1.jar
_ File com.ibm.ws.jsf_1.0.3.jar
_ File com.ibm.ws.jsp_1.0.jar
_ File com.ibm.ws.jsp_1.0.1.jar
_ File com.ibm.ws.jsp_1.0.3.jar
_ File com.ibm.ws.kernel.boot_1.0.jar
_ File com.ibm.ws.kernel.boot_1.0.1.jar
_ File com.ibm.ws.kernel.boot_1.0.3.jar 
RESOLVING THE PROBLEM
CICS embeds the Liberty code within its /wlp zFS directory. The CICS wlp directory should only contain the latest version of the Liberty code and having multiple versions would lead to unexpected errors. 


There are 2 causes that can result in this incorrect file system:


 1. The SMP/E install of the CICS Liberty PTFs did not work properly. The install process is managed by the DFHWLPSH script that has 2 phases. It first deletes the current contents of the CICS/wlp directory and then "un-paxes" the new content into the directory.
    
    
 2. The zFS structure that the SMP/E APPLY uses is copied to other z/OS systems. However, that copy needs to be done as a complete replacement. If it is done as a merge than all the old unwanted content will be left in the CICS directories. This is a problem for Liberty as the Liberty files will change dramatically on every CICS/Liberty PTF. It is imperative that the zFS structure is completely replaced.


In this case, you found that the problem was caused by the second scenario. You used the following COPY command to deploy the fix to your other z/OS systems: 

cp -mR /usr/lpp/cicsts/cicsts51/maintenance/* /usr/lpp/cicsts/cicsts51 

This copy "replaced" the existing files and also "added" any new files, resulting in the Liberty code having multiple versions of the files in the /wlp directory and this caused the error. 

By adding the following REMOVE command ahead of the COPY to empty out the target directory first: 

rm -r /usr/lpp/cicsts/cicsts51/* 

you were able to create a clean copy of the zFS files. Now the Liberty JVMServer installs successfully.  

PRODUCT ALIAS/SYNONYM
 CICS/TS CICS TS CICS Transaction Server