Title: IBM Encryption of messages using WebSphere MQ AMS - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 How to encrypt messages so they are not in plain text when browsed with MQ Explorer 

SYMPTOM
Messages viewed by the userid id "mqm" (MQ Administrator) via MQ Explorer are in plain text when they are expected to be encrypted via WebSphere MQ Advanced Messaging Security (AMS).


DIAGNOSING THE PROBLEM
From an AMS point of view, when the MQ Explorer is getting a message it is treated as a normal Javaâ„¢ application getting a message. So when MQ Explorer is running in Bindings mode (default mode when MQ Explorer is being run on the same machine where queue manager is installed), its MQ API calls are intercepted by the AMS server interceptor (MQ API Exit). When it gets the message and has a decryption key, it is transparently decrypted during MQGET, and returned to MQ Explorer in plain text. 

If there was no key, an error would be returned and for destructive MQGET (not browse) the message would be moved to an error handling queue ( SYSTEM.PROTECTION.ERROR.QUEUE).


RESOLVING THE PROBLEM
When an MQ Administrator (userid mqm) runs MQ Explorer, it will attempt to read the environment variable: 

 MQS_KEYSTORE_CONF 
... to determine where to find the keystore configuration. 
If this variable is not set, then the MQ Explorer will try the default home directory (likely /var/mqm) to search for /var/mqm/.mqs/keystore.conf. 
Next it will process the keystore.conf file to determine where the key is. 
Then it will open the .kdb file, provided it has read (+r) operating system permission. 

So if you do not want the userid mqm to decrypt messages, it is recommended to configure keystore access for end users only and not for mqm: 

 * do not set MQS_KEYSTORE_CONF for mqm 
 * do not provide it with keystore.conf 
 * do not provide it with .kdb file 
 * ensure that only entitled users have access to their .kdb and .sth files.

 

PRODUCT ALIAS/SYNONYM
 WebSphere MQ WMQ AMS