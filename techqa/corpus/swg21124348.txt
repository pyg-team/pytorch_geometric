Title: IBM Enabling multiline search capabilities on Oracle databases for use with ClearQuest - United States

Text:
Intermedia; ClearQuest setup; "SQL Plus" index; "Primary Key" table context; multiline; oracle; primary key; cqctx; Multi_Line Fields; multi-line; search; filter; query; ClearQuest; 1124348 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 This technote summarizes the steps necessary to enable multiline text searches for IBM速 Rational速 ClearQuest速. There are additional steps and scripts that need to be run on the Oracle速 Server to enable multi-line searching, when using the LONG datatype in ClearQuest versions prior to the 7.x release. 

SYMPTOM
ClearQuest versions prior to the 7.x release supported Oracle 8.i and the LONG datatype. The ability to perform multi-line text searches in ClearQuest required the InterMedia Context server be configured on the Oracle server.

Note: Support for Oracle 9i in ClearQuest 2003.06.12, added support for the CLOB data type. Upgrading your Oracle databases from the LONG datatype to CLOB, eliminates the need for the InterMedia Context server. Refer to the IBM Rational Suite 2003 Upgrade guide for additional information.

Note: ClearQuest 7.x supports Oracle 10G and the CLOB datatype, which natively supports multiline searching. You must move the databases and specify "LOB_TYPE=CLOB" in connect_options in ClearQuest prior to upgrading to ClearQuest 7.x. Refer to the Converting Oracle LONG data to CLOB data [http://publib.boulder.ibm.com/infocenter/cqhelp/v7r0m1/topic/com.ibm.rational.clearquest.install_upgrade.doc/upgrade/c_long2clob_tool.htm?resultof=%22%43%6f%6e%76%65%72%74%69%6e%67%22%20%22%63%6f%6e%76%65%72%74%22%20%22%4f%72%61%63%6c%65%22%20%22%6f%72%61%63%6c%22%20%22%4c%4f%4e%47%22%20%22%6c%6f%6e%67%22%20%22%64%61%74%61%22%20%22%43%4c%4f%42%22%20%22%63%6c%6f%62%22%20]topic in the ClearQuest Information Center.

Note: You should be able to enable multi-line search for Oracle 10g LONG datatype without converting to CLOB. Use the same steps as previous Oracle versions. Please note that it will not return those records with Oracle 'stop' words. Refer to the Oracle 'Stoplist' [http://download.oracle.com/docs/cd/A58617_01/cartridg.804/a58165/appa.htm]. For more information, please contact Oracle support on how to filter those stop words.

RESOLVING THE PROBLEM
Note: In order to enable Oracle 8i, the User first should enable "Listener Configuration" as described in Solution 1124343. [http://www-1.ibm.com/support/docview.wss?uid=swg21124343] It is a prerequisite that the User set up "Listener Configuration" before preceding any further. 

There are six scripts that must be run to enable the option of 'Multiline Search'. This rule applies to both versions of Oracle 8i: 8.1.5, 8.1.6, 8.1.7 and 9i, when using the LONG datatype.

This solutions provides examples for an Oracle User Account entitled "CQUser". This is the Account used to hold the information for the "ClearQuest User Database". The name may thus vary from user to user.

Please use the follow the steps to enable "Multi-line String Searches" 

 1. Launch two sessions of Context Server on the Oracle Server Machine. In order to do this, log on to the server and shell out to a 'Command Prompt'. Afterwards, type in the following:
    
    ctxsrv and press 'Enter'.
    
    When asked for a login, type in "ctxsys/ctxsys". 'Ctxsys' stands for "Context System Account". 
    
    Out of the box this account comes standard to each Oracle Server Installation and it comes with a password of ctxsys as well. It is possible that this password may have been changed by the Administrator. If it has been changed, then the user needs to retrieve the new password in order to proceed. If the database administrator cannot remember the password, the procedure will be impossible to continue.
    
    After doing this a confirmation that the "Context Server" has started (It will be about 5 lines or so in succession) will appear. At this point, minimize the 'Command Prompt', launch another one and repeat the exactly same procedure. Keep both commands running in the background at all times on the Oracle Server in order to maintain the integrity and success of the procedure. They are referred to as "Context Servers" and will not disturb the continuation of the setup.
    
 2. The User now should log on to SQL Plus on the Oracle Server or from an Oracle Client session that can communicate with the Oracle Server itself. Log on first as the 'System Account', using "Manager" as a password. If the password has been changed, then have the caller retrieve the password. Without it the process cannot continue.
     1. Run the following command: 
        "Grant ctxapp to CQUser"
        
    
    
 3. Then, have the user log on as the "ctxsys" account. The default password is "ctxsys". If it has been changed, obtain the current one in order to proceed. This can be accomplished by running the following syntax: 
    
    "connect ctxsys/ctxsys@Instance"
     1. Run the following command: 
        "grant select on ctxsys.ctx_servers to "CQUser"
    
    
 4. Then, have the user log on as the "Oracle User" account itself, the one which the "ClearQuest User Database" was created under. In my example I call this account "CQUser": 
    
    connect CQUser/password@Instance
    
 5. Afterwards, if the User has already set up the "Primary Key" (Constraint) for "mlt_pk", or has already configured the index for "cqctx", both of these need to be dropped by applying the following syntax respectively for each parameter they may have:  1. alter table multiline_text drop constraint mlt_pk;
        (For dropping Primary Key)
        
        and if there is an index existing already; 
     2. drop index cqctx;
        
        for each of these items, Primary Key and Index, respectively. 
        
        Note: If this is a brand new database, there is no need to drop anything. 
        
    
    
 6. At this point, the User is ready to create each of the above parameters or recreate each of these if they have previously been dropped. Use the following syntax: 
    
    For creating the "Primary Key":
    
    alter table multiline_text add CONSTRAINT mlt_pk PRIMARY KEY (entity_dbid,entity_fielddef_id); 
    
    and 
    
    For creating the index:
    
    create index cqctx on multiline_text(data) indextype is ctxsys.context;
    
    Note: The syntax must be run in succession and in the above order.
    
    Also, the ctxsrv has to be running in the background for the multi-line text searching to work.
    
    Now, should the User log into his or her ClearQuest User database for the "Oracle User" described above and run any queries, they should be able to filter on the "Multi_Line Fields" just indexed. For example when going to the "Query Editor" screen they should see the Description and or other paragraph fields be available for searches and filters to be performed onto.
    
    If after doing all this and they do not appear then please verify that on the actual server itself they have two instances of "Context Server" running in the background. It may be advisable to physically travel over to the Server machine itself to verify this.
    
    Note: A Japanese translation of this Solution (23060) is available. See technote 1128005. 






RELATED INFORMATION
#Setting up of the "Intermedia Text Option" [http://www.ibm.com/support/docview.wss?uid=swg21124343]




HISTORICAL NUMBER
 16330