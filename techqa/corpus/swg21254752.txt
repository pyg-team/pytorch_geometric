Title: IBM NameLookup performance fixes that address unnecessary updates - United States

Text:
NameLookup Performance Fixes; nab indexing thread; high CPU utilization; 100% CPU; CPU maxing out; poor performance; bad performance; NAB Collection being updated by NIFSetCollectionAccess; Domino server hangs with multiple threads in UBMPin and UBMClock operations; NAMELookup thread frequently calls NAMEGetNSModifiedTimeExtended which calls NIFUpdateCollection TECHNOTE (FAQ)

QUESTION
While the Update task is explicitly updating Domino Directory (names.nsf) views, any NameLookup or NIFFindByKey calls that need to access a view being updated will back up on the locked collection until the update is done. 

Any threads waiting on a NameLookup call will wait because the collection is being updated. Thus, you will see this behavior in the form of hangs. For example, NRPC connections (which do a NameLookup for authentication) might either take extra time to complete or return saying 'server is not available'. These fixes may avoid certain Domino hang issues as well.


ANSWER

A number of fixes have been made to improve performance regarding NameLookup. Two primary fixes were made relative to SPRs CMCY6KBQAR and MLUR6P9TAT to address unnecessary updates stemming from NameLookups. Note that, however, there are still expected cases in which NameLookups will need to update the collection.

CMCY6KBQAR
Fixed in Domino releases 6.5.5 Fix Pack 2 (FP2), 6.5.6, 7.0.2, and 8.0. With the exception of Domino 8.0, one must use the following notes.ini parameter to implement the fix:
Debug_Enable_Update_Fix=8191

MLUR6P9TAT, KTIS6UFMDR
Fixed in Domino releases 6.5.5 FP3, 6.5.6, 7.0.2 Fix Pack 1 (FP1), and 8.0. 

MERS6V7JSE
Fixed in Domino 6.5.6, 7.0.3, and 8.0

For SPRs MLUR6P9TAT, KTIS6UFMDR and MERS6V7JSE: 
With the exception of Domino 8.0, you must use the following Notes.ini parameter to implement the fix: Server_Name_Lookup_No_Update=1

Note: Server_Name_Lookup_No_Update=1 is still required for 8.5.x.

Note: It is recommended that the fixes for SPR CMCY6KBQAR and SPR MLUR6P9TAT (and related SPRs) be used in conjunction with each other, rather than singularly.


Excerpts from the Lotus Domino fix lists available at http://www.ibm.com/developerworks/lotus [http://www.ibm.com/developerworks/lotus]:

Server
SPR# CMCY6KBQAR - Fixed a problem during namelookups. This problem is observed if you see that the $users, $peoplegroupsflat, and $serveraccess views were getting rebuilt during the day, causing slowdowns. Note that in all fixes, other than the 8.0 fix, the following notes.ini parameter is necessary "Debug_Enable_Update_Fix=8191" 

Server
SPR# MLUR6P9TAT - Additional stats/events were added to track updates to the NAB. Provided the ability to filter out clients that either directly or indirectly created activity on a directory database that would result in view rebuilds. Those rebuilds would have the side effect of causing a NAMELookup cache flush and creating a performance bottleneck on the server for all users. Note that in all fixes, other than the 8.0 fix, the following notes.ini parameter is necessary "Server_Name_Lookup_No_Update=1".

Server
SPR# KTIS6UFMDR - This provides a fix to avoid a negative impact on server performance and accessibility by the client, due to the NAB Collection being updated by a function call the HTTP server uses during normal operation (NIFSetCollectionAccess). This fix avoids unnecessary updates to the view and the consequential NLCache flush for HTTP access. 

Server
SPR# MERS6V7JSE - Prior to this fix, 20 threads in NIFIsRebuildPending were waiting for the collection lock. The problem was noticed in the field where many threads were pending on the view semaphore.



How to identify these issues 
SPR CMCY6KBQAR specifically refers to on-box (calls originating from the Domino server) unnecessary updates stemming from NameLookups where the UPDATE flag is passed. These stacks are often identified by the NAMEGetNSModifiedTimeExtended call on the stack followed by an update collection call. 

SPR MLUR6P9TAT specifically refers to off-box (calls originating from the Notes Client) unnecessary updates stemming from NameLookups where the UPDATE flag is passed. The UBMPin and UBMClock calls are usually on the NSD. But, there is more to this the problem than just those two function calls. Those calls by themselves are harmless, but the problem arises when you are waiting on these calls or performing them quite often. Just those calls in general do not point specifically to MLUR6P9TAT. It is necessary to take the whole state of the server into account (what the other threads are doing/waiting for). To identify this issue, you can look for an update collection on a task (other than the update task) which eventually leads to UBMPin or UBMClock. 

If you see a NAB Indexing thread the update task toward the bottom of the stack, this is a normal operation which runs periodically on the NAB to update records and can potentially cause lockouts. This is a design limitation and not a bug. 

In general, take a look at the stack and see what is attempting to update the collection. Again, it is necessary to take into account the whole state of the server. What are the other threads doing? Who is waiting and why? 

If you determine this a match for SPR CMCY6KBQAR and/or MLUR6P9TAT, then upgrade to a fixed release (and apply the relative Notes.ini as detailed at the beginning of this section). If this is a case which does not match either SPR mentioned above and we are still waiting on an Update Collection, the PMR should be escalated to development with the appropriate information. The escalation should include multiple NSDs from the slowdown, information about when the slowdown occurred and for how long, the console log with statistics (referenced below) enabled, and semaphore debug. Please be sure all this information is complete. 


INIs you can use to troubleshoot issue 
As noted, the fix for SPR CMCY6KBQAR must be enabled through an ini parameter (with the exception of release 8.0). If further debug information is required, use: 
 * 
 * 

For more information please consult the technote entitled "Troubleshooting a Domino Server Hang after replication of the Domino Directory" (1244315 [http://www.ibm.com/support/docview.wss?rs=899&uid=swg21244315]). 

As noted, the fix for SPR MLUR6P9TAT must be enabled through an ini parameter (with the exception of release 8.0). If further debug information is required, use: 
 * 
 * 
 * 



We strongly recommend upgrading to at least 6.5.5 FP2, or 7.0.2 FP1, or any release after these (as this will reduce the need for large complex hotfix combinations) and then re-evaluating the issue at hand. 


NLCACHE_VERSION=4 for Domino 7.0.3 and 8.0 and later 
Introduced in Domino 7.0.3 and 8.0, the NLCACHE_VERSION=4 notes.ini variable is a fix to an enhancement to the NAMELookup cache that invalidates individual entries rather than entire groups. This enhancement is not enabled by default, and will only be enabled if the NAMELookup cache version has been increased to 4 by setting the value of this variable to 4. The default setting for the NAMELookup cache in Domino 7x is version 2. RELATED INFORMATION
 Troubleshooting a Domino server hang after replication [http://www.ibm.com/support/docview.wss?uid=swg21244315]
Lotus Notes/Domino Notes.ini Settings [http://www.ibm.com/developerworks/lotus/documentation/notes-ini/ktoo.html]
A simplified Chinese translation is available [http://www.ibm.com/support/docview.wss?uid=swg21604742]