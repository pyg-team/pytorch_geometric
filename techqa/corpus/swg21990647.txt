Title: IBM supportsAsynchronousXARollback allows a rollback to come from different thread than one which did xa_end. - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 xa_start fails with XAER_PROTO if previous transaction has been ended with xa_end(TMFAIL).
How can we eliminate the XAER_PROTO? 

CAUSE
By default, Jcc driver only support XA specification which does not allow asynchronous XA rollback. i,e. xa_end(TMFAIL) throws XA_RBROLLBACK, and set internal xaState to XA_RBROLLBACK(16 : rollback only). Please see javadoc on XAResource#end for reference. 

So, applications should clear the error condition by rollback the transaction to allow new work to start.

For example, a subsequent xa_start() will fail with XAER_PROTO error if application does not issue a rollback on the connection after xa_end(TMFAIL).


RESOLVING THE PROBLEM
Please set the value of supportsAsynchronousXARollback = DB2BaseDataSource.YES (1) to support asynchronous XA rollback. Some of transaction manager might issue a rollback request in different transport than one which did xa_end. 

Jcc will set the internal xaState to XA_OPEN_IDLE(0) after xa_end(TMFAIL) with the setting, then allow subsequent XA transactions to start.

RELATED INFORMATION
 Common IBM Data Server Driver for JDBC and SQLJ propert [http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.apdv.java.doc/src/tpc/imjcc_r0052607.html]