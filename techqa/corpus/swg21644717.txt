Title: IBM Cognos Incentive Compensation Management – Admin Client - Transaction log for database is full - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 The transaction log for database 'ABCD' is full. To find out why space in the log cannot be reused, see the log_reuse_wait_desc column in sys.databases 

SYMPTOM
Application administrator receives an error when opening the ICM Admin client or when connecting to a ICM Service/ICM environment


CAUSE
This error message is related to SQL Server database, used by ICM software, and it is raised whenever there is no more free space in the transaction log.


When the Database transaction logs are full, the DBA should proceed to back up the transaction log file (or to extend it by adding additional space).

SQL Server will automatically truncate the inactive part of the transaction log during the backup process, permitting the transaction log to continue to grow and to use more space.


ENVIRONMENT
Cognos ICM Service, SQL Server



DIAGNOSING THE PROBLEM
The first step in diagnosing the problem is to query the database and see the size of transaction logs (and how much free space is available) and transaction log/s status:

dbcc sqlperf(logspace);


SELECT name,log_reuse_wait, log_reuse_wait_desc FROM sys.databases;

Check the value on the column “LOG_REUSE_WAIT_DESC” corresponding to the database housing the ICM model.

The values for that column can be: 

NOTHING
--------------
Currently there are one or more reusable virtual log files.

CHECKPOINT
------------------ 
No checkpoint has occurred since the last log truncation, or the head of the log has not yet moved beyond a virtual log file (all recovery models). 

This is a routine reason for delaying log truncation. For more information, see Checkpoints and the Active Portion of the Log. 

LOG_BACKUP
-------------------
A log backup is required to move the head of the log forward (full or bulk-logged recovery models only).
Log backups do not prevent truncation.
When the log backup is completed, the head of the log is moved forward, and some log space might become reusable. 

ACTIVE_BACKUP_OR_RESTORE
-------------------------------------------
A data backup or a restore is in progress (all recovery models).
A data backup works like an active transaction, and, when running, the backup prevents truncation. For more information, see "Data Backup Operations and Restore Operations," later in this topic. 

ACTIVE_TRANSACTION
-------------------------------
A transaction is active (all recovery models). 

- A long-running transaction might exist at the start of the log backup. In this case, freeing the space might require another log backup. For more information, see "Long-Running Active Transactions," later in this topic. 

- A transaction is deferred (SQL Server 2005 Enterprise Edition and later versions only). A deferred transaction is effectively an active transaction whose rollback is blocked because of some unavailable resource. For information about the causes of deferred transactions and how to move them out of the deferred state, see Deferred Transactions. 

DATABASE_MIRRORING
---------------------------------
Database mirroring is paused, or under high-performance mode, the mirror database is significantly behind the principal database (full recovery model only). 

For more information, see "Database Mirroring and the Transaction Log," later in this topic. 

REPLICATION
----------------
During transactional replications, transactions relevant to the publications are still undelivered to the distribution database (full recovery model only). 

For more information, see "Transactional Replication and the Transaction Log," later in this topic. 

DATABASE_SNAPSHOT_CREATION
----------------------------------------------- 
A database snapshot is being created (all recovery models).
This is a routine, and typically brief, cause of delayed log truncation. 

LOG_SCAN
---------------
A log scan is occurring (all recovery models).
This is a routine, and typically brief, cause of delayed log truncation.


RESOLVING THE PROBLEM
There is more than one method to solve the issue at the database level, depending on the user (application administrator SQL SERVER knowledge and access privileges).

All methods require adequate space on the database server, in order to extend or clear the transaction log/s.
The best option in solving the issue is to contact you DBA, and provide the info on this Knowledge Document.

The sizes in MB expressed below depend on your environment. The values used are just examples, and should be used with care.

Method 1: Increase the templog size
------------------------------------------------
USE MASTER
GO
ALTER DATABASE TEMPDB MODIFY FILE (NAME='templog', SIZE=1500MB)

Method 2: Add a new ldf file
------------------------------------
ALTER DATABASE Tempdb 
ADD LOG FILE 
( NAME = tempdblog2,
FILENAME = 'E:\<PATH TO SQL SERVER DATAFILES>\DATA\tempdblog2.ldf',
SIZE = 100MB,
MAXSIZE = 1500MB,
FILEGROWTH = 100MB)

Method 3: Backup transaction log
-------------------------------------------
1. In SQL Server Management Studio, Expand Databases
2. Right-click on the database name used by Cognos ICM, point to Tasks, and then click Back Up. The Back Up Database dialog box appears.
3. In the Database list box, verify the database name.
4. Verify that the recovery model is either FULL or BULK_LOGGED.
5. In the Backup type list box, select Transaction Log.
6. Once the transaction log backup completes, the issue should be gone.

Method 4: Set transaction log file auto growth to unrestricted
------------------------------------------------------------------------
1. In SQL Server Management Studio, right click on database name used by Cognos ICM
2. Go to Properties.
3. Go to the Files section.
4. Click on both the data and log auto growth column (Click the ...)
5. Select “Unrestricted File Growth”