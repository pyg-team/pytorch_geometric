Title: IBM How to change Siebel connection settings using the  siebel.properties file in WebSphere Adapter for Siebel eBusiness Applications - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 The Siebel connection of WebSphere Adapter for Siebel eBusiness Applications is established with the default settings. You may need to modify the connection settings, such as connection timeout, according to your product environment. 

ANSWER
Siebel adapter uses the Siebel API (Java Data Bean) to interact with the Siebel server. The Siebel API also provides a way to configure the connection settings on the client side.
Create a siebel.properties file and save it in the classpath of the adapter (For example, <adapter project>\connectorModule) and restart the adapter and broker to pick up the settings to establish the required connections.

This is applicable for all supported brokers.

A detailed description of the Siebel.properties file is given below:

Siebel.properties File 

The siebel.properties file, which is located in your classpath, can be used to provide default parameters for client applications connecting to Siebel applications using the Java Data Bean. 

The table below shows the properties in the siebel.properties file. 

[/support/docview.wss?uid=swg21366662&amp;aid=1] [/support/docview.wss?uid=swg21366662&amp;aid=1] [/support/docview.wss?uid=swg21366662&amp;aid=1] Property Type Property Description Siebel Connection Manager Connection properties siebel.conmgr.txtimeout Indicates the transaction timeout (in milliseconds). Defaults to 600000 = 10 minutes. siebel.conmgr.poolsize Indicates the connection pool size. Connection pool maintains a set of connections to a specific server process. Defaults to 2. Max connection pool size is 500. siebel.conmgr.sesstimeout Indicates the transaction timeout (in seconds) on the client side. Defaults to 2700 = 45 minutes. siebel.conmgr.retry Indicates the number of open session retries. Defaults to 3. siebel.conmgr.jce



siebel.conmgr.virtualhosts Indicates the usage of Java Cryptography Extension. 1 for jce usage and 0 for no usage.

A listing of virtual servers representing a group of like servers that perform the same function, for example, call center functions.

An incoming login for the call center Virtual Server will try servers from the list in a round-robin fashion.

An example of such a list follows:

VirtualServer1=sid1:host:port,sid2:host:port...;VirtualServer2=...

where:

Virtual Servers = an assigned list of real Siebel Servers with host names and port numbers (of the local SCB). Siebel Generated code for JCA/JDB properties siebel.connection.string Specifies the Siebel connection string. siebel.user.name Specifies the user name to be used for logging in to Object Manager. siebel.user.password Specifies the password to be used for logging in to Object Manager. siebel.user.language Specifies the user's preferred language. siebel.user.encrypted Specifies whether the username and password is encrypted. siebel.jdb.classname Specifies the default JDB classname Java System Properties file.encoding Indicates the code page on the client side. For example, cp1252, utf8, unicodeBig, cp942. NOTE: Java System Properties are System Properties, not Siebel Properties. 

The following is a sample siebel.properties file: 

siebel.connection.string = siebel.tcpip.rsa.none://test.siebel.com/siebel/sseobjmgr_enu/test 

siebel.conmgr.txtimeout = 3600 

siebel.conmgr.poolsize = 5 

siebel.conmgr.sesstimeout = 300000 

siebel.properties [/support/docview.wss?uid=swg21366662&aid=3] [/support/docview.wss?uid=swg21366662&aid=2]