Title: IBM PK60265: NEW HASHING ALGORITHM #TPFDB11 - United States

Text:
z/os SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  APAR Type      :   E
   CMVC defect    :
   Bad APAR       :
   PE Type        :
   Functional Area:   09B
   Segment Docname:
   Symptom keyword:   hashing   algorithm #TPFDB11
   4.1 APAR Number:
   DESCRIPTION:
   Introduce a new hashing algorithm (#TPFDB11) in the TPFDF
   product.
   
   
    
   
   

LOCAL FIX
 *  na
   
   
    
   
   

PROBLEM SUMMARY
 *  SUBJECT:         APAR  NUMBER: PK60265
   
   REFERENCE:  AREA:     TPFDF CENTRAL DATABASE ROUTINES
               SEGMENT:  ACPDBE13   - RELEASE:  TPFDF (Macro)
               SEGMENT:  DB12513    - RELEASE:  TPFDF (Macro)
               SEGMENT:  DFMDB13    - RELEASE:  TPFDF (Macro)
               SEGMENT:  UWBJ13     - RELEASE:  TPFDF (Assembler)
   
   
   Pre-requisite APARs are (TPF only) :
   FOR SEGMENT ACPDBE13   (Macro)     - REL TPFDF
         PN39258 PN41660 PN48086 PN52010 PN61834 PN66927 PN67252
         PN71161 PN73989 PN82139 PQ19230 PQ23871 PQ32209 PQ39696
         PQ42097 PQ32210 PQ42198 PQ52738 PQ65645 PQ75887 PQ77651
         PK20320 [http://www-01.ibm.com/support/docview.wss?uid=swg1PK20320] PK17083 [http://www-01.ibm.com/support/docview.wss?uid=swg1PK17083] PK31735 [http://www-01.ibm.com/support/docview.wss?uid=swg1PK31735] PK34843 [http://www-01.ibm.com/support/docview.wss?uid=swg1PK34843] PK47851 [http://www-01.ibm.com/support/docview.wss?uid=swg1PK47851] PK54198 [http://www-01.ibm.com/support/docview.wss?uid=swg1PK54198] PK57632 [http://www-01.ibm.com/support/docview.wss?uid=swg1PK57632]
   FOR SEGMENT DB12513    (Macro)     - REL TPFDF
         PN41982 PN47061 PN50586 PN52010 PN54502 PN57526 PN62258
         PN73989 PN76765 PQ06194 PQ32210 PQ42047 PQ55170 PQ51955
         PQ74483 PQ75887 PK43849 [http://www-01.ibm.com/support/docview.wss?uid=swg1PK43849]
   FOR SEGMENT DFMDB13    (Macro)     - REL TPFDF
         PN64313 PN86476 PN88662
   FOR SEGMENT UWBJ13     (Assembler) - REL TPFDF
         PQ32210 PQ70198 PQ51955 PQ74483 PQ83981 PK47966 [http://www-01.ibm.com/support/docview.wss?uid=swg1PK47966]
   To be applied in the order listed for each segment.
   
   ABSTRACT OF PROBLEM
   ___________________
   A  new  TPFDF  hashing  algorithm  (#TPFDB11)  is needed to hash
   8-byte character algorithm string.
   
   
    
   
   

PROBLEM CONCLUSION
 *  COMMENTS ON PROBLEM
   
   ___________________
   TPFDF algorithm #TPFDB09 is a hashing  algorithm  that  uses  an
   8-byte algorithm argument which accepts hexadecimal data.  While
   this  algorithm  usually  provides an even distribution of data,
   this may not be true under certain circumstances.  If the  algo-
   rithm argument typically (or often) contains only a small subset
   of  available hexadecimal values (such as pairs of 4-byte alpha-
   betic location codes) and a large number of hash slots exist, an
   unbalanced distribution of data may result.  This is  caused  by
   using  addition  instead  of  multiplication  in  the underlying
   hashing calculation.  A new hashing algorithm should be  created
   to provide an even distribution of data in this situation.
   
   SOLUTION
   ________
   Hashing algorithm #TPFDB11 has been created to hash 8-byte char-
   acter  strings.  This algorithm takes an 8-byte input string and
   separates it into 2 tokens of 4 bytes each. Each 4-byte token is
   divided by a (different) prime number. If the remainder from the
   high-order 4-byte token is a multiple of the number of ordinals,
   that remainder is increased by 1. The two remainders are  multi-
   plied  together  and then divided by the number of ordinals. The
   final remainder is the target ordinal.
   
   #TPFDB11 differs from #TPFDB09 in that it can  distribute  LRECs
   across  subfiles better when the number of ordinals is large and
   the algorithm string passed uses only  a  small  subset  of  the
   available  hexadecimal  values.    For example, if there are 200
   possible 4-byte locations, the 8-byte algorithm string  consists
   of  location  pairs,  and  there  are  1  million ordinals (hash
   slots).  With #TPFDB09, many of the hash slots will remain empty
   in this case.   #TPFDB09 will have a  better  distribution  than
   #TPFDB11 when the algorithm string contains a disproportionately
   high  number  of the same value for either the high order or low
   order 4-bytes of the algorithm string.  For example,  if  8-byte
   file  addresses  are  used  and the high order 4 bytes are often
   x'00000000'.  This may result in a  disproportionate  number  of
   collisions at a particular ordinal value when using #TPFDB11.
   
   Users  should  run  tests with different algorithms using sample
   data to ensure best distribution.
   
   For MDBF overrides the new algorithm #TPFDB11 has been added  to
   the same group as #TPFDB09 and #TPFDB10.
   
   DEPENDENCIES
   ____________
   
   Related Segments Affected By This APAR.
   _______________________________________
   Segments to be assembled or compiled:
    N/A
   
   Segments to be link edited:
    N/A
   
   Load Modules to be loaded:
    N/A
   
   Migration Considerations
   ========================
    N/A
   
   -- END APAR PK60265
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   PK60265
   
   
 * REPORTED COMPONENT NAME
   TPFDF 1.1.3
   
   
 * REPORTED COMPONENT ID
   570619601
   
   
 * REPORTED RELEASE
   113
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2008-01-31
   
   
 * CLOSED DATE
   2010-08-18
   
   
 * LAST MODIFIED DATE
   2010-08-18
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   TPFDF 1.1.3
   
   
 * FIXED COMPONENT ID
   570619601
   
   

APPLICABLE COMPONENT LEVELS
 * R113 PSY
   UP