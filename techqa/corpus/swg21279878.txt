Title: IBM Specifying a cast method for casting the results of a stored procedure - United States

Text:
REF_CURSOR; object; stored procedure; builders; results; cast; Java method; Method; Java; cast method; casting TECHNOTE (FAQ)

THIS DOCUMENT APPLIES ONLY TO THE FOLLOWING LANGUAGE VERSION(S):
 English 

QUESTION
Oracle stored procedures return a REF_CURSOR object from which the results of the stored procedure may be made available to IBM WebSphere Portlet Factory builders.

To use the REF_CURSOR object, the results from the stored procedure must be explicitly cast in a Java method. You can use either a Method builder call or a method in a linked Java object. 

What are the steps for specifying a cast method for casting the results of a stored procedure?


ANSWER
If you have a stored procedure and you must set the output type, you must specify a custom JDBC type-cast. The method that performs the type-casting of the parameter has a specific signature. The custom method must take the following arguments and return void: 


BuilderName: A string parameter that contains the name of the SQL statement builder that is calling the method to perform a custom type-cast. You can define one method for each custom type-cast you have defined or you can bundle all type-casts together and use this input to identify which specific type-cast to apply when called by the builder. 

Statement: An object parameter that is the actual JDBC PreparedStatement or CallableStatement that was created by the builder and is being prepared for execution. The method is responsible for setting the output type of the positional parameter indicated by the position parameter. 

Position: This integer parameter identifies the positional parameter in the Stored procedure statement for which the type-cast is to be performed. For example, is it the first, second, or third position? Specify which parameter number it is.

Operation: This new string parameter is used to specify whether the method is being called to "cast" an output parameter of an stored procedure call or to "set" the output parameter's value. 

Import List: 

 * j
 * av
 * a.sql.CallableStatement 
 * 
 * oracle.jdbc.driver.OracleTypes 
 * 
 * com.bowstreet.appserver.logmanager.* 
 * 
 * com.bowstreet.webapp.engine.WebAppRuntimeException 


The following Java code sample is the body of a custom type-cast method for an output parameter. In this example, there is no need to differentiate between SQL statement builders so the BuilderName input can be ignored. The statement parameter is cast into a JDBC CallableStatement. Then the type of the statement's positional parameter that is denoted by the position parameter of the method is set: 
 * {
 * 
   try
   {
   final CallableStatement stpCall = (CallableStatement) statement;
   if( stpCall != null )
   {
 * 
 * // if this method is supposed to set a value a specific position
   if( "set".equals( operation ) )
   {
   stpCall.setInt( position, 100 );
   }
 * 
 * // if this method is supposed the cast the output parameter of a stored procedure
   else if( "cast".equals( operation ) )
   {
   stpCall.registerOutParameter( position, Types.NUMERIC );
   }
   }
   }
   catch( SQLException e )
   {
 * 
 * LogEvent.writeLogEntry( Severity.ERROR, Component.MODEL, e );
   throw new WebAppRuntimeException( e );
   }
   }
 * 


The method name then must be specified in the parameter table under the "Value or Set/Case Method" column for the specific parameter. 


 * 
 *