Title: IBM MustGather: FileNet Content Engine Performance - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 Customer-provided background information (also known as "MustGather" data) helps in problem determination and saves time when resolving Problem Management Records (PMRs). This technote provides a description of the background information IBM® support will need. 

SYMPTOM
Performance and scalability problems on Content Engine / Content Platform Engine


ENVIRONMENT
WebSphere, WebLogic, and JBoss application servers 

DB2, MSSQL Server and Oracle databases
All supported operating systems 


RESOLVING THE PROBLEM
 



TAB NAVIGATION
 * 1. Learning more [</font>http://www.ibm.com/support/docview.wss?rs=3278&uid=swg27010422]
 * 2. Troubleshooting [http://www.ibm.com/support/docview.wss?rs=3278&uid=swg21314054]
 * 3. Collecting data [http://www.ibm.com/support/docview.wss?rs=3278&uid=swg21391007]- selected tab,

 *   *  
      
   
   


Collecting MustGather data early, even before opening the PMR, helps IBM® Support quickly determine the root cause of the problem. With this information, Support can determine if: 
1. This is a known problem (re-discovery). 
2. There is a non-defect problem that can be identified and resolved. 
3. This is a known defect for which a workaround has been developed. 
4. A new problem has been discovered and a fix is required. 

If you already contacted support, continue on to the Performance MustGather information. Otherwise, click MustGather: Read first for FileNet Content Engine [http://www.ibm.com/support/docview.wss?rs=3278&uid=swg21308231] 


Performance MustGather information 

Performance problems occur under various conditions. Be sure to include the following information in the description of the problem: 
1. Does the Performance problem happen when only a single user is using the server or when the server is under a load? 
2. Does the server take a long time to respond or simply hang? 
3. Do server system vitals such as CPU and memory consumption display "ramp up" behavior where their usage is increasing over time? 
4. Are CPU, Memory, Network, Disk and other critical system vitals saturated when the problem occurs or are ample resources available? 
5. Does the problem occur consistently, intermittently, or only a certain times of the day? 
6. Does the problem occur when other background or batch processes are running? 

When the performance problem occurs please collect as much information as possible. Please include the following information at a minimum. 

1. CPU, memory, disk, and network usage patterns for the client, CE, and DB servers. You can use P8 System Manager Dashboard, Perfmon (Windows), vmstat/iostat/sar (UNIX), or tools of your choice to collect this data. 
2. Note any abnormal factors and usage spikes such as OS virtual memory swapping, increasing number of threads, increasing number of handles, change in workload, etc. 
3. Make sure your server is properly tuned per the P8 Performance Tuning Guide. Include information such as your Java heap settings, any applications server custom properties, Web container thread counts, data source connection pool settings, or any other applications server, operating system, P8, or database settings that have been changed from their defaults. 
4. Collect detailed Java garbage collection information of the JVM. Please follow instructions of specific application server. Typically for WebLogic and JBoss you need to add "-verboseGC" in the JVM arguments. For WebSphere, verboseGC is turned on by clicking on the check box with the name " Verbose garbage collection", it is usually under "Application server-><server name>Process Definition->Java Virtual Machine", see http://www-01.ibm.com/support/docview.wss?uid=swg21114927 [http://www-01.ibm.com/support/docview.wss?uid=swg21114927]. 
5. If the CE server appears to hang please create a JVM thread dump. This can be achieved by sending a "QUIT" signal to the JVM in Unix or using "ctrl-break" on Windows. The WebSphere documentation contains additional information on how to collect thread and heap dumps. 
6. If the problem is reproducible with light load its recommended to enable CE trace logging. Trace logging can significantly impact performance so its recommended to only enable the traces you need. Its recommended to start with EJB trace. You can also enable the Database, Security, or any other traces you think might be related to your problem. For example, if you are experiencing full text indexing or search problems you can enable the content based retrieval (CBR) trace. See FileNet Content Engine Server tracing [https://www-304.ibm.com/support/docview.wss?rs=0&uid=swg21308282] for detailed instructions to enable these traces. 
7. When performance is slow under heavy load please turn off all CE trace logs and set Log4J level to "error". Also enable the CE Perflog by performing the following: 

For CE 4.0.1, CE 4.5.0, and CE 4.5.1 Fix Pack 4 (or older): 

a. Stop the CE Application Server 
b . Edit and add following to the JVM argument of CE Application Server: 

-Dfilenet.perflog.interval=on 
-Dfilenet.perflog.logginglevel=2 
-Dfilenet.perflog.dir=<specific a existing directory> 

c . Restart the server 
d. Perform the test or workload to generate the performance issue on CE server for 30 minutes or more (the longer the better). Note that there is minimal overhead for this that is usually not measurable. 
e. Look for a file called "perf.log" under the -Dfilenet.perflog.dir=< specific a existing directory> fe. Save the perf.log file and send it to Support for analysis. 

For CE 4.5.1 Fix Pack 5 (or newer) and 5.x: 
(Note that starting from CE 4.5.1 FP5, you can dynamically enable CE Perflog without having to stop/start the CE Application Server) 

a . Go to the directory where CE error log is configured 
b. Edit a file called "perflog_config.properties" 
c. Set the "perflog.dir=" to an existing directory, in 5.0.1 and later, it will default to the same directory of CE error log 
d. Set "use.me=true" 
e. Set "perflog.interval=on" to turn on the perflog 
f. Wait a while and you should see a file called "perf.log" generated with messages. 
g. Save the perf.log file and send it to Support for analysis. 

Please note that setting "use.me=false" does not disable perflog, it simply instructs CE do not use "perflog_configure.properties file. You must use the perflog.interval=off to disable writing to the perf.log file 

8. Use perflog utility to create thread dumps and turn on/off verbosegc. 

Perflog utility also provide a platform independent way to create thread dumps by editing and saving the perflog_config.properties file, with following line: 
perflog.dumpthreads=<times>:<interval> 
For example, 
perflog.dumpthreads=10:20 
will create thread dumps 10 times and 20 seconds apart. All the thread stacks will be written in one file. Note the format of the file is not the same as the system generated file. 

verboseGC can also be turned on and off dynamically using the perflog utility without having to restart the server. Edit with following line and 
perflog.verbosegc=true/false 
This can be very useful when server in production can not easily be restarted. 

9. Collect any other info you think will be relevant. For example, if you have a search or query problem please collect profiles from your database. In SQL you can use the SQL Profiler with the SHOW PLAN STATISTICS and SHOW PLAN ALL options enabled. You can use TOP SQL or Oracle Stats Pack in Oracle, and the Health Monitor or dynamic SQL snapshots in DB2.