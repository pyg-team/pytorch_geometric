Title: IBM PK32985: ORB DEADLOCKS WHEN THREADPOOL QUEUE IS FULL - United States

Text:
  FIXES ARE AVAILABLE
6.1.0.7: WebSphere Application Server V6.1 Fix Pack 7 for Solaris [http://www-01.ibm.com/support/docview.wss?uid=swg24014824]
6.1.0.7: WebSphere Application Server V6.1 Fix Pack 7 for HP-UX [http://www-01.ibm.com/support/docview.wss?uid=swg24014827]
6.1.0.7: WebSphere Application Server V6.1 Fix Pack 7 for Linux [http://www-01.ibm.com/support/docview.wss?uid=swg24014826]
6.1.0.5: WebSphere Application Server V6.1.0 Fix Pack 5 for Linux [http://www-01.ibm.com/support/docview.wss?uid=swg24014331]
6.1.0.7: WebSphere Application Server V6.1 Fix Pack 7 for Windows [http://www-01.ibm.com/support/docview.wss?uid=swg24014825]
6.1.0.7 WebSphere Application Server V6.1 Fix Pack 7 for AIX [http://www-01.ibm.com/support/docview.wss?uid=swg24014799]
6.1.0.5: WebSphere Application Server V6.1.0 Fix Pack 5 for AIX [http://www-01.ibm.com/support/docview.wss?uid=swg24014327]
6.1.0.5: WebSphere Application Server V6.1.0 Fix Pack 5 for i5/OS [http://www-01.ibm.com/support/docview.wss?uid=swg24014332]
6.1.0.7: WebSphere Application Server V6.1 Fix Pack 7 for i5/OS [http://www-01.ibm.com/support/docview.wss?uid=swg24014873]
6.1.0.5: WebSphere Application Server V6.1.0 Fix Pack 5 for HP-UX [http://www-01.ibm.com/support/docview.wss?uid=swg24014328]
6.1.0.5: WebSphere Application Server V6.1.0 Fix Pack 5 for Windows [http://www-01.ibm.com/support/docview.wss?uid=swg24014336]
Java SDK 1.5 SR8 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24020073]
Java SDK 1.5 SR8 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24021203]
Java SDK 1.5 SR10 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24024201]
6.1.0.31: Java SDK 1.5 SR11 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24026453]
6.1.0.33: Java SDK 1.5 SR12 FP1 Cumulative Fix for WebSphere [http://www-01.ibm.com/support/docview.wss?uid=swg24027786]
6.1.0.29: Java SDK 1.5 SR11 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24025191]
6.1.0.35: Java SDK 1.5 SR12 FP2 Cumulative Fix for WebSphere [http://www-01.ibm.com/support/docview.wss?uid=swg24028574]
6.1.0.37: Java SDK 1.5 SR12 FP3 Cumulative Fix for WebSphere [http://www-01.ibm.com/support/docview.wss?uid=swg24029525]
6.1.0.39: Java SDK 1.5 SR12 FP4 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24030426]
6.1.0.41: Java SDK 1.5 SR12 FP5 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24031035]
6.1.0.43: Java SDK 1.5 SR13 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24031963]
6.1.0.45: Java SDK 1.5 SR14 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24033270]
6.1.0.47: WebSphere Application Server V6.1 Fix Pack 47 [http://www-01.ibm.com/support/docview.wss?uid=swg24035508]
6.1.0.47: Java SDK 1.5 SR16 Cumulative Fix for WebSphere Application Server [http://www-01.ibm.com/support/docview.wss?uid=swg24035649]


SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PROGRAM ERROR.
    
   
   

ERROR DESCRIPTION
 *  Thread dump shows that one thread that has locked a
   connection and is IO blocked in socketWrite0. There are
   multiple threads waiting to lock the same connection and send
   the data. The waiting threads show that the Reader thread
   associated with the port in question are hung in
   Object.wait()...
   
   "RT=96:P=668372:O=0:WSSSLTransportConnection
   [addr=xxx.xxx.xxx.xxx,port=31029,local=10102]" daemon prio=5
   tid=0x01849828 nid=0x9d9 in Object.wait()
   [0xcf87f000..0xcf87fc30]
   at java.lang.Object.wait(Native Method)
   at java.lang.Object.wait(Object.java:429)
   at com.ibm.ws.util.BoundedBuffer.put(BoundedBuffer.java:171)
   - locked <0xdb3b3908> (a
   com.ibm.ws.util.BoundedBuffer$BoundedBufferLock)
   at com.ibm.ws.util.ThreadPool.execute(ThreadPool.java:1125)
   at com.ibm.ws.util.ThreadPool.execute(ThreadPool.java:992)
   at com.ibm.ejs.oa.pool.ThreadPool.startWorkerThread
   (ThreadPool.java:66)
   at
   com.ibm.rmi.iiop.Connection.processInput(Connection.java:1325)
   at com.ibm.rmi.iiop.Connection.doReaderWorkOnce
   (Connection.java:2666)
   at com.ibm.rmi.transport.ReaderThread.run
   (ReaderPoolImpl.java:137)
   
   Since the Reader thread is blocked here, the data from the
   connection is not read and causes the buffer to be full and
   threads on the other side seen in socketWrite0.
   
   
    
   
   

LOCAL FIX
 *  Restart the server to clear the hang
   
   
    
   
   

PROBLEM SUMMARY
 *  ****************************************************************
   * USERS AFFECTED: WebSphere Application Server version 6       *
   *                 users with exceptionally large amounts of    *
   *                 Remote Method Invocation (RMI) requests.     *
   ****************************************************************
   * PROBLEM DESCRIPTION: The Object Request Broker (ORB) can     *
   *                      enter a state where it is unable to     *
   *                      process requests without restarting the *
   *                      server.                                 *
   ****************************************************************
   * RECOMMENDATION:                                              *
   ****************************************************************
   Each inbound and outbound request that is made via the ORB
   requires a thread from the ORB thread pool.  In heavy load
   scenarios or scenarios where ORB requests nest deeply, it is
   possible for a Java Virtual Machine (JVM) to have all threads
   from the ORB thread pool attempting to send requests.
   Meanwhile, the remote JVM ORB that would process these requests
   also has all threads from its ORB thread pool attempting to
   send requests. As a result, no progress is ever made, no
   threads are released back to the ORB thread pool, and the ORB
   is unable to process requests.
   
   
    
   
   

PROBLEM CONCLUSION
 *  A new ORB custom property,
   com.ibm.websphere.orb.threadPoolTimeout, was added that
   controls the maximum time in milliseconds that the ORB will
   wait for a thread from the ORB thread pool before rejecting a
   request.  The default value is 0, which corresponds to the
   current behavior of waiting indefinitely.
   
   The fix for this APAR is currently targeted for inclusion in
   fixpaks 6.0.2.19 and 6.1.0.5.
   Please refer to the recommended updates page for delivery
   information:
   http://www.ibm.com/support/docview.wss?rs=180&uid=swg27004980 [http://www.ibm.com/support/docview.wss?rs=180&uid=swg27004980]
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   PK32985
   
   
 * REPORTED COMPONENT NAME
   WEBS APP SERV N
   
   
 * REPORTED COMPONENT ID
   5724H8800
   
   
 * REPORTED RELEASE
   60S
   
   
 * STATUS
   CLOSED PER
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2006-10-16
   
   
 * CLOSED DATE
   2006-10-19
   
   
 * LAST MODIFIED DATE
   2006-10-19
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

MODULES/MACROS
 *  RUNTIME
   
   
    
   
   

FIX INFORMATION
 * FIXED COMPONENT NAME
   WEBS APP SERV N
   
   
 * FIXED COMPONENT ID
   5724H8800
   
   

APPLICABLE COMPONENT LEVELS
 * R60A PSY
   UP
   
   
 * R60H PSY
   UP
   
   
 * R60I PSY
   UP
   
   
 * R60P PSY
   UP
   
   
 * R60S PSY
   UP
   
   
 * R60W PSY
   UP
   
   
 * R60Z PSY
   UP
   
   
 * R61A PSY
   UP
   
   
 * R61H PSY
   UP
   
   
 * R61I PSY
   UP
   
   
 * R61P PSY
   UP
   
   
 * R61S PSY
   UP
   
   
 * R61W PSY
   UP
   
   
 * R61Z PSY
   UP