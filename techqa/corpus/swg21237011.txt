Title: IBM Unable to connect to DB2 Content Manager using the DB2 Content Manager Toolkit for z/OS running under WebSphere Application Server - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 I am able to connect to DB2® Content Manager using the Content Manager Toolkit for z/OS™ when running outside of WebSphere® Application Server (WAS), but when running under WAS the connect fails. 

ANSWER
Ensure WebSphere Application Server is set up correctly to use the DB2 Universal JDBC Driver for z/OS. This set up is described in the “Enabling WebSphere Application Server V5 for z/OS to use the DB2 Universal JDBC Driver” techdoc.
If the following error is seen in the DB2 Content Manager Toolkit trace file (dklog.log):

com.ibm.mm.sdk.common.DKDatastoreAccessError: DGL0394A: Error in ::DriverManager.getConnection; cmbicmenv.ini (EDC5129I No such file or directory. (errno2=0x0594003D))

ensure the toolkit configuration files were generated in ASCII. When running under WebSphere Application Server, ensure the toolkit configuration files are in ASCII. This is accomplished by specifying ENCODE = ASCII in SICMSAMP(ICMCONFG).


The following error can be caused by having the JDBC driver jar files in the CLASSPATH of the JVM:

Error occurred [Error while connecting to the CM server com.ibm.mm.sdk.common.DKDatastoreAccessError: DGL0394A: Error in ::DriverManager.getConnection; Failure in loading T2 native library db2jcct2

The JCC jars shown in the example in the “Verifying DB2 Content Manager Toolkit installation and configuration” section of the Content Manager planning and installing book do need to be in the CLASSPATH. However, they should not be in the CLASSPATH of the WAS servant region. Having them in the CLASSPATH of the WAS servant region can cause problems such as the failure loading T2 native library error above. They should be defined in the JDBC Provider CLASSPATH.


If the JCC jars are in the JDBC Provider CLASSPATH and the following error occurs

DGL0394A: Error in ::DriverManager.getConnection; No suitable driver

the problem is likely that the Content Manager Toolkit isn't using your WAS datasource. WAS connection pooling must be used in order for the Content Manager Toolkit to use the WAS-defined datasource rather than attempting to connect directly to DB2, bypassing WAS. Following are the Content Manager Toolkit configuration changes which must be made to enable the toolkit for WAS connection pooling:

1) Copy cmbpool.ini from the config/base directory to the cmgmt/connectors directory (e.g., as cmbpool.ini.ebcdic).

2) Edit to include the following lines:

JavaPool=DKPoolWAS
JDBCPrefix=jdbc/

3) Convert to ASCII:

iconv -f IBM-1047 -t ISO8859-1 cmbpool.ini.ebcdic > cmbpool.ini

Additional Connection Pooling Details
With the default cmbicmsrvs.ini ICMSERVERREPTYPE value of DB2, the DB2 Content Manager Toolkit will attempt to connect to DB2 UDB with a native connection (DriverManager.getConnection) first to see if the userid passed is an operating system userid or a DB2 Content Manager-only userid. If that connection succeeds, the connection will be immediately disconnected and a connection to the WebSphere Application Server connection pool will be made using the user ID passed. If that connection fails, a connection to the WebSphere Application Server connection pool will be made using the database connect (e.g., ICMCONCT) userid/password. That initial check is done only to decide which userid/password to pass to WebSphere Application Server when attempting the WebSphere Application Server connection pool connection. The initial connect check can be bypassed and instead the "ICMCONCT" userid used to connect with the WebSphere Application Server connection pool by specifying ICMSERVERREPTYPE=DB2CON in the cmbicmsrvs.ini.

If the user IDs who will be logging on to the DB2 Content Manager Toolkit/WebSphere Application Server application are DB2 Content Manager-only user IDs, then no further changes are required. A DB2 Content Manager-only user ID is a user ID which is defined to DB2 Content Manager and not necessarily to the operating system (e.g., RACF). A DB2 Content Manager-only user ID has its password stored in the library server ICMSTUSERS table. When a user logs in to DB2 Content Manager with a DB2 Content Manager-only userid, the userid/password are checked against those stored in the ICMSTUSERS table.

If the user IDs who will be logging on to the DB2 Content Manager Toolkit/WebSphere Application Server application are system userids, then the library server logon user exit, ICMXLSLG, must be used. A system userid is a user ID which is defined to the operating system (e.g., RACF) and whose password is not stored in the ICMSTUSERS table. If the ICMXLSLG logon user exit is not used, then system user IDs will not be able to log on when WebSphere Application Server connection pooling is being used because the normal DB2 Content Manager log on processing will reject the logon attempt since for system userids there is no password stored in the ICMSTUSERS table against which to authenticate the user's credentials. Using the ICMXLSLG logon user exit bypasses normal DB2 Content Manager logon processing and goes through RACF to check that a valid password was specified.

If the userids that will be logging on to the DB2 Content Manager Toolkit/WebSphere Application Server application are a mix of both system userids and DB2 Content Manager-only user IDs, then the ICMXLSLG logon user exit must be customized to handle that case.

RELATED INFORMATION
 CM z/OS Planning and Installing [http://www-947.ibm.com/support/entry/portal/plan_install/enterprise_content_management/content_manager_for_z~os?productContext=-487418195]