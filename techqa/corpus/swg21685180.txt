Title: IBM @JournalEntry does not work with Policy launched by PolicyActivator Service - United States

Text:
netcool; impact; netcool/impact; nci; return; event; returnevent; journal; entry; journalentry; delete; deleteevent; fail; failure; not working; does not TECHNOTE (FAQ)

QUESTION
 How can a PolicyActivator launched Policy insert entries to the ObjectServer alerts.journal table? 

CAUSE
The EventContainer is not supplied with an EventSource and the tools like @JournalEntry and @DeleteEvent that work in tandem with the ReturnEvent(EventContainer) action function, have no connection details for the ObjectServer.

ANSWER
Please be aware that the use of ReturnEvent() with EventContainer expects there to be a defined EventSource (for example: OMNIbusEventReader). In the IBM Tivoli Netcool/Impact Policy Reference Guide the ReturnEvent documentation states: 

 * 
 * 
 * 
 * 
 * 


So, if you want to run this from an EventReader then there should be no problem using ReturnEvent(EventContainer). However if you wish to run this via a PolicyActivator Service you will have to supply the EventSource as part of the EventContainer. One can apply the variable at the start of the Policy as a hard coded value: 

 * 


There are other work-around methods to achieve the same result. One can use the DirectSQL() or AddDataItem() action functions to directly add the desired Journal Entry to the alerts.journal table. Here are two Policy examples: 

 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * Log(2,ID+WP+": Found: "+ NumMyEvents +" events"); 
   i = 0; 
   UID = 0; 
   While (i < NumMyEvents) 
   {  * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
   
   } 
 * 
 * 
 * 
 * 
 * 
 * Log(3,ID+WP+": No events found"); 
 * 
 * 
 * 
 * 
 * 
 * Log(ID+WP+": ERROR! ERROR! ERROR! GetByFilter failed"); 
 * 
 * 
 * 
 * 
 * 
 * 


Where DT_AlertsStatus is a DataType against the target ObjectServer alerts.status table and DS_ObjServ is the DataSource against the target ObjectServer. 

 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * Log(2,ID+WP+": Found: "+ NumMyEvents +" events"); 
   i = 0; 
   UID = 0; 
   While (i < NumMyEvents) 
   {  * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
    * 
   
   } 
 * 
 * 
 * 
 * 
 * 
 * Log(3,ID+WP+": No events found"); 
 * 
 * 
 * 
 * 
 * 
 * Log(ID+WP+": ERROR! ERROR! ERROR! GetByFilter failed"); 
 * 
 * 
 * 
 * 
 * 
 * 


Where DT_AlertsJournal is a DataType against the target ObjectServer alerts.journal table. In both these examples the limitation is that the message inserted into the Text1 field is limited to 255 characters. If the intended message has the capability to exceed this limitation it will have to be assessed and split into portions not exceeding 255 characters over the subsequent Text2, Text3, Text4, etc... fields. 

Please also see the TechNote "ReturnEvent() function not updating ObjectServer events" [ link below] for further information on this subject. 
RELATED INFORMATION
 ReturnEvent() function not updating ObjectServer events [http://www-01.ibm.com/support/docview.wss?uid=swg21978599]