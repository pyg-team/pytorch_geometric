Title: IBM Working with TXSeries CICS and WebSphere MQ on Windows Systems - United States

Text:
TXSeries CICS WebSphere MQ XA MQSeries TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 This section describes how to make CICS work with WebSphere MQ on Windows Systems. 

RESOLVING THE PROBLEM
 

The following section "Using CICS with WebSphere MQ" will be added to CICS Application Programming Guide manual. 

Using CICS with WebSphere MQ 

CICS supports access to MQ queues using MQ API calls in CICS programs through XA or non-XA connection.

With XA connection to WebSphere MQ, CICS will use a two-phase commit protocol to ensure all resources within the logical unit of work are updated together. The CICS transaction must issue an MQCONN in order to access MQ resources.

With non-XA connection to WebSphere MQ, the MQ API will not be managed within CICS logical unit of work and hence users must use manual means to make the two systems consistent – issue EXEC CICS SYNCPOINT to commit updates to CICS resources (or let this happen implicitly at the end of the transaction) and issue relevant MQ API calls to commit updates to MQ resources. 

For both XA and non-XA connection to WebSphere MQ, CICS transactions that accesses WebSphere MQ resources must:

(a) Invoke MQDISC call before returning to CICS 
OR 
(b) Install the “Task termination exit sample” program provided by WebSphere MQ.

The MQDISC call or the MQ “Task termination exit sample” will do the necessary clean up of MQ resources. The MQ “Task termination exit sample” when installed will be invoked by CICS during normal and abnormal task termination. Failing to do a call to MQDISC before returning to CICS or CICS has no MQ “Task termination exit sample” installed will result in an unexpected CICS application server abends during subsequent transaction run. 

For information on WebSphere MQ provided “Task termination exit sample” and on its installation procedures refer to WebSphere MQ System Administration Guide documentation.

Refer to CICS Administration Guide for configuration of WebSphere MQ with CICS using XA and non-XA connection and building CICS/MQ applications.

The following sections describes the administrative tasks to be performed for using CICS with WebSphere MQ (CICS Administration Guide for Windows Systems).


Installation of WebSphere MQ components 

Following are the WebSphere MQ product components to be installed: 

 · WebSphere MQ Server
· WebSphere MQ Samples
· WebSphere MQ Support for DCE in Samples
· WebSphere MQ Support for DCE in Server
· WebSphere MQ Messages 

NOTE: The installation of components “WebSphere MQ Server” and “WebSphere MQ Messages” are mandatory. 

For information on the above components and its installation, see the WebSphere MQ: Quick Beginnings book for your platform. For information about using CICS applications with MQ, see the WebSphere MQ Application Programming Guide. 


Building your CICS/MQ application 

CICS/MQ applications written in C require the following compiler options: 

set CCFLAGS=-Z7 -Od -c -W3 -MD -Gz -DWIN32
set LINKFLAGS1=-debug:full -debugtype:cv -dll -force:unresolved
set LIBS=%CICSLIB%\cicsprC.lib kernel32.lib user32.lib wsock32.lib \
advapi32.lib netapi32.lib %MQM_HOME%\tools\lib\mqm.lib

CICS/MQ applications written in COBOL require the following compiler options: 

set INCLUDE=%MQM_HOME%\tools\c\include; \
%CICS_HOME%\include;%INCLUDE%
set CICS_IBMCOB_FLAGS=-I%MQM_HOME%\tools\cobol\copybook\vacobol
set USERLIB=-L%MQM_HOME%\tools\lib\mqmcbb.lib
set COBOPTS=/LITLINK /NOTRUNK
set COBCPY=%MQM_HOME%\tools\cobol\copybook;%CICS_HOME%\include

NOTE: Where %MQM_HOME% refers to the installation directory of WebSphere MQ product.



Using CICS with WebSphere MQ 

CICS supports access to MQ queues using MQ API calls in CICS programs through XA or non-XA connection. For information on this refer to CICS Application Programming Guide and WebSphere MQ Application programming Guide documentations.

The following procedure describes how to enable the CICS region to connect to MQ Queue Manager. It describes XA, non-XA connection and Merant Net Expess COBOL runtime requirements. (For information on using Merant Net Express COBOL with CICS, see Adding a new resource definition.) 

Prerequisite tasks and conditions 

The MQ queue manager must be started before the region is started. Otherwise, the XA_OPEN fails when the region attempts to connect. 

Procedure for setting up the CICS interface to WebSphere MQ 

This section describes how to enable transactions to be executed from within CICS in an XA environment. Enabling the use of Merant Net Express COBOL can be accomplished by including the steps associated with the COBOL product. 

Step 1. Prepare the WebSphere MQ product. 1. Enable connections between CICS and the WebSphere MQ product. 

 * No additional product configuration is required. 

2. Grant privileges required for use of the WebSphere MQ product with CICS.  * User cics must be in the mqm group. If access to the queue or to any object in the queue is restricted, user cics must be given the appropriate MQI authorizations as required by the transaction. . For information on this refer to WebSphere MQ Security and WebSphere MQ System Administration Guide documentations. 
   
   

Step 2. [For XA connection] Build the MQ switch load file. 

· A switch load file is supplied with MQ: %MQM_HOME%\lib\amqzsc
· A source file is included with MQ to enable you to build your own switch load file: %MQM_HOME%\samp\amqzscix.c  *  
   You need to install " WebSphere MQ Samples” component to have access to the switch load source file. Refer to WebSphere MQ System Administration Guide for information on building the switch load file using the source file. 
   
   NOTE: Where %MQM_HOME% refers to the installation directory of WebSphere MQ product. 

Step 3. Prepare the CICS region for WebSphere MQ. 

1. Set up the region's environment. The environment is passed to the region in one of two ways: 

 a) From the shell in which the region is started. 

To use this method, verify that Administrators or systems LIB path includes the following library search paths: 

 * 
 * 


b)From the region's environment file. 

LIB path can be included in the region's environment file. However, the entire path must be specified. For example, if the region will be running only CICS MQ and CICS-only applications, the following is required: 

LIB=%MQM_HOME%\mqm\lib:%COBDIR%\coblib

NOTE: Where %MQM_HOME% refers to the installation directory of WebSphere MQ product and %COBDIR% refers to the installation directory of COBOL product.

2. [For XA connection] Add the Product Definitions (XAD) to the region. Create an XAD for the region as shown in Setting up Product Definitions (XAD). The following list shows example entries for the fields on the Product Definitions screen: 

 Product name: MQMXA 
Description: MQM XA Product Definition 
Switch load file: %MQM_HOME%\lib\amqzsc 
Resource manager initialization string: queueManagerName 

Where %MQM_HOME% refers to the installation directory of WebSphere MQ product and queueManagerName is the name of the MQ queue manager. This must match the value used with the strmqm queueManagerName command. 

3. Install "Task termination exit sample” provided by WebSphere MQ.
For information on the “Task termination exit sample” and its installation procedures refer to WebSphere MQ System Administration Guide documentation.

Step 4. Build the Merant Net Express COBOL runtime (if COBOL is to be used). 

On Windows there is no specific action required to provide a language environment for CICS. The COBOL language method file cicsprCBFNT is provided in the <drive >\opt\cics\bin directory, where <drive> is a drive-letter on which the CICS product is installed. Step 5. [For XA connection] Verify the connection.  * 

CICS logs XA messages in the region's console file. To determine if the region can connect to WebSphere MQ: 
1. Cold start your region. 
2. Check the region’s console messages. The first XA messages are generated when the CICS application servers are started. If XA problems occur, check for additional information in console.nnnnnn or symrecs.nnnnnn logs located under the region’s directory. 

Step 6. Test the connection. 

You can use the WebSphere MQ supplied example programs, amqscic0.ccs and amqscic0.tst to test CICS with MQ connection. To access the sample programs you need to install the "WebSphere MQ Samples” product component. For more information on how to run the samples refer to section "Preparing CICS and Transaction Server Programs” under part "Sample WebSphere MQ programs” in the WebSphere MQ Application programming guide for your platform.