Title: IBM CBR_TS_NO_INDEX_FOUND_FOR_INDEXATION_ID when re-indexing document content in IBM Content Search Services - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 CBR_TS_NO_INDEX_FOUND_FOR_INDEXATION_ID when re-indexing document content in IBM Content Search Services 

SYMPTOM
Existing document content stored in an IBM FileNet Content Engine object store does not index when a P8 administrator creates an index job. Newly added document content to the same object store does index successfully for full text search without any errors.


CAUSE
This can occur if the P8 environment previously used Legacy Content Search Engine (LCSE) and when upgrading to either IBM FileNet Content Engine version 5.1 or version 5.2.x with IBM Content Search Services (CSS) the indexed text collections were not migrated to IBM Content Search Services. This behavior can also occur if documents from an object store previously configured with Legacy Content Search Engine (LCSE) were imported into Content Engine 5.1 or 5.2.x still containing the old invalid indexation_id values from an LCSE configuration.

DIAGNOSING THE PROBLEM
When re-indexing document content already stored in a P8 object store using an index job initiated using FileNet Enterprise Manager (FEM), or Administration Console Content Engine (ACCE), one of two things typically occurs; 

 *  A row is not inserted into the IndexRequests table and no indexing occurs. A row is inserted into the IndexRequests table but it is in an indefinite pending state. 


A typical exception found in either the p8_server_error.log or p8_server_trace.log is; 

ERROR ObjectStore:"Objectstore name here"; IndexJob index class attempt failed; attempt #12\ncom.filenet.api.exception.EngineRuntimeException: FNRCB0044E: CBR_TS_NO_INDEX_FOUND_FOR_INDEXATION_ID: The IBM Content Search Services index is missing for objects with indexation ID {GUID of non existant text collection here}.\n at com.filenet.engine.cbr.spi.CSEIndexAreaCache.getTextSearchIndex(CSEIndexAreaCache.java:342)\n at com.filenet.engine.cbr.spi.CSEIndexRequester.doSubmitRequest(CSEIndexRequester.java:271)\n at com.filenet.engine.cbr.CBREngineIndexer.submitRequest(CBREngineIndexer.java:111)\n at com.filenet.engine.cbr.CBRIndexer.submitRequest(CBRIndexer.java:2923)\n at com.filenet.engine.cbr.CBRIndexer.processSingleItemToIndex(CBRIndexer.java:3272)\n at com.filenet.engine.cbr.CBRIndexer.processJob(CBRIndexer.java:757)\n at com.filenet.engine.cbr.CBRIndexer.unitOfWork(CBRIndexer.java:578)\n at com.filenet.engine.tasks.ScheduledBackgroundTask.execute(ScheduledBackgroundTask.java:252)\n at com.filenet.engine.tasks.BackgroundTask.safeExecute(BackgroundTask.java:244)\n at com.filenet.engine.tasks.ScheduledObjectStoreTask.safeExecute(ScheduledObjectStoreTask.java:51)\n at com.filenet.engine.tasks.BackgroundTask$BackgroundTaskPriviledgedExceptionAction.run 
RESOLVING THE PROBLEM
Using your database tools, query the indexation_id column in the DocVersion table, specifically for the GUID reported in the p8_server_error.log or p8_server_trace.log. The GUID is part of the overall error as reported above (The IBM Content Search Services index is missing for objects with indexation ID {GUID of non existant text collection here}). There are a certain amount of rows associated with this GUID, and the indexation_id value for these rows has to be updated to show null in order to resolve this. 

 

 * 
 * 
 *  Using FileNet Enterprise Manager (FEM) or Administration Console Content Engine (ACCE), delete any index-job(s) that are currently pending indefinitely.
   Using your database tools, query the DocVersion table for the number of rows affected by the GUID that is no longer associated with any text collections: select count(*) from DocVersion where indexation_id = 'GUID from P8 log here'
   Disable CBR Dispatcher in FileNet Enterprise Manager (FEM) or Administration Console Content Engine (ACCE).
   Take a database backup of at minimum the DocVersion table, but preferably the entire object store database, especially if this is a production server.
   Using your database query tool, execute an update statement that will nullify the indexation_id value from the rows returned in step 2. Do not delete the rows themselves, just update the value of indexation_id column for these rows to be null: update DocVersion set indexation_id = NULL where indexation_id = 'GUID from P8 log here'
   Re-enable CBR Dispatcher in FileNet Enterprise Manager (FEM) or Administration Console Content Engine (ACCE).
   Re-run the index-job previously canceled in step 1 and it should now terminate normally.