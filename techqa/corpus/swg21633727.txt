Title: IBM MQ agent cannot startup because it fails to load correct WebSphere MQ libraries - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 There are following similar error messages logged in MQ agent log file.

1. MQ agent cannot load libmqm*

exec(): 0509-036 Cannot load program /opt/IBM/ITM/aix513/mq/bin/kmqagent because of the following errors:
0509-150 Dependent module libmqm_r.a(libmqm_r.o) could not be loaded.
0509-022 Cannot load module libmqm_r.a(libmqm_r.o).
0509-026 System error: A file or directory in the path name does not exist

2. MQ agent attempts to load 64 bit libmqm*.

Operation=MQCONN CC=0X2 RC=0X887 Could not load program dspmq: Dependent module /usr/mqm/lib/libmqmcs_r.a(shr.o) could not be loaded. The module has an invalid magic number. 

CAUSE
This is usually caused by incorrect configuration

DIAGNOSING THE PROBLEM
MQ agent is 32 bit program. Customer can issue the following command to check the actual library path that it attempts to load.


1. Change the current directory to the directory where ITM is installed. 

2. Issue "./bin/itmcmd execute mq "ldd $arch$/mq/bin/kmqlocal". Take xSeries Linux for an example in the following screenshot. If any libmqm* file cannot be loaded, the output will show the failing path. Note: On HP Unix and Solaris there is no kmqlocal file then you need to issue "itmcmd execute mq "ldd $arch$/mq/bin/kmqagent" instead. 


[/support/docview.wss?uid=swg21633727&aid=1] [/support/docview.wss?uid=swg21633727&aid=1]

3. The orders how MQ agent searches for the libmqm* is as following.

1) /usr/lib which is hard coded when mq agent is built.
2) LIBPATH, LD_LIBRARY_PATH and SHLIB_PATH setting in $CANDLEHOME$/config/mq.ini. Note that LIBPATH is for AIX, LD_LIBRARY_PATH is for Linux and Solaris, and SHLIB_PATH is for HP Unix.


RESOLVING THE PROBLEM
To fix the startup failure issue, what is needed to make configuration change to ensure that MQ agent can correctly load the required libmqm* while it is looking up from the failing paths. 


Solution 1: Create symbolic links under /usr/lib by crtmqlnk command or create the links manually.

In some versions of WebSphere MQ installations, symbolic links have already been created under /usr/lib/libmqm* after installation. They link to the real library files in WebSphere MQ install directory. For some reasons like, the links may cause conflicting between mq agent and other mq applications, customers may delete them. In that case, you need to choose Solution 2.

Solution 2: Update LIBPATH, LD_LIBRARY_PATH or SHLIB_PATH
Look for the directory where the 32 bit libmqm* resides in your environment. 

Link: How to set the variable [http://publib.boulder.ibm.com/infocenter/tivihelp/v24r1/topic/com.ibm.omegamon.mes_dist.doc_7.1/pd-c_mq_start_linux_01.html]

Note that MQ agent restart is required for the change to take effect. If you have multiple WebSphere MQ installations in same machine, KMQ_LATEST_WMQ_INSTALLPATH variable in which was introduced since V7.1.0 is needed, otherwise queue manager status could not be detected correctly. Check the following link for detail.

Specifying multiple installation paths of WebSphere MQ 7.1 or later [http://publib.boulder.ibm.com/infocenter/tivihelp/v24r1/topic/com.ibm.omegamon.mes_dist.doc_7.1/t_config_kmq_set_multi_install_unix.html]