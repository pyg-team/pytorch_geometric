Title: IBM How to setup SSL in a HACL environment - United States

Text:
HACL; Host On Demand; SSL; toolkit; TLS; secure connection TECHNOTE (FAQ)

QUESTION
 How do you configure SSL using IBM Host On-Demand Host Access Client Library (HACL) APIs? 

CAUSE
In the HACL application, you must set the SSL properties and the SSL environment. 

ANSWER
Following is a summary of the steps required to make changes to the customer application: 

 

 1. Set the SSL property to true by calling session.setSSL(true) method
    
    
    
 2. Specify the P12 path if you are planning to put the CustomizedCAs.p12 at a different location other than the project folder. 
    
    Use this API to set the path, session.setSSLP12FilePath.
    
    
    
 3. Specify whether the client will receive the server certificate through this API, session.setSSLCertificateProvided(true)
    
    With the above settings, it is assumed that all other SSL properties provided by Host On-Demand
    are set to the default value; however, if you want to make the changes, do so through the appropriate API.
    
    For this you can refer to the help document provided in the Host Access Tool Kit, found in the Knowledge Center for Class Session [http://www.ibm.com/support/knowledgecenter/SSS9FA_11.0.0/com.ibm.hod.doc/doc/beans/com/ibm/eNetwork/beans/HOD/Session.html]. For more information about the Host Access Toolkit, refer to Getting Started [http://www.ibm.com/support/knowledgecenter/en/SSS9FA_11.0.0/com.ibm.hod.doc/doc/toolkit/installtk.pdf]guide. 
    
    
 4. Make the above changes to your application and build it. 
    


These are the steps required to make a certificate available to download clients that connect using security to any other telnet server. 
 1. If the clients connect to a server, obtain a copy of the server's certificate. 
 2. Add the certificate to the certificate container, CustomizedCAs.p12 
 3. Make CustomizedCAs.p12 available to clients. 



The following are steps to make the certificate available to download clients using the Certificate Management utility: 
 1.  Start the Certificate Management Utility. 
 2.  On a Windows server, click Start > Programs > IBM WebSphere Host On-Demand > Administration > Certificate Management. 
 3.  On an AIX or Linux server, start the Certificate Management Utility from the console (command line) (see Running the Certificate Management Utility on AIX or Linux). 
     
     If the CustomizedCAs.p12 file does not exist, follow these steps to create it: 
 4.  Click Key Database File > New. 
 5.  In the Key database type, select PKCS12 
 6.  In the File Name field, type CustomizedCAs.p12. 
 7.  In the Location field, type the fully qualified path of the Host On-Demand publish directory. 
 8.  Click OK. 
 9.  When prompted, enter "hod" as the password for the new CustomizedCAs.p12 file. 
     
     The Certificate Management Utility will automatically add root certificates for well-known 
     certificate authorities to the file. 
     
 10. If the CustomizedCAs.p12 file exists, open it. The password must be "hod". 
 11. In the Certificate Management Utility, expand the list box that is located above the white display 
     area and select Signer Certificates. 
 12. Click Add. 
 13. In the Certificate file name field, type the name of the file containing the certificate, such as 
     cert01.arm. 
 14. In the Location field, type the path of the subdirectory where the certificate file is located. 
 15. When prompted, enter a label for the certificate and click OK. 
 16. Verify that the label of the certificate now appears in the list of Signer Certificates. 
 17. Follow the instructions in the online help for making certificates available to clients. 
 18. Close the Certificate Management Utility. 


When you have finished working with certificates, you must configure the Host On-Demand clients to use SSL. 

Once you perform all of the above, put the CustomizedCAs.p12 under the project folder or location which you have mentioned in the application. 

Test your application by connecting to a secure telnet server.