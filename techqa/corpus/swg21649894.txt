Title: IBM Specifying User Lookup and External Identity Mapping strings for IBM Cognos BI LDAP authentication provider - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 The current implementation of the IBM Cognos BI LDAP authentication provider supports two properties by which 
an administrator can either directly provide a Distinguished Name (DN) to be used for authentication or indirectly specify an LDAP 
filter expression which is subsequently being used to construct an LDAP search for looking up the DN to use for authentication.

The first property is the "user lookup" property, which is being used for what is called "basic signon", when the user interactively
is prompted to provide a user name and a password. 
This property supports the macro ${userID} which is expanded to the value of the user name input from the login page. For example
the string '(uid=${UserID})' will become '(uid=bob)' assuming the user typed in 'bob' for user name when being prompted.
Based on the first character of the string, the provider determines whether the string is considered to be an LDAP filter or
a DN. If the string starts with '(' it's assumed to be a valid LDAP filter expression, although the provider itself does currently
not parse the string for syntactical or semantical correctness. 


The second property is the "external identity mapping" which is required for implementing Single Sign-On from some external authentication system to IBM Cognos BI configured to use an LDAP authentication provider. 
This string supports two macros as well. The first is ${environment("<environment_variable_name>")} which allows to request 
the value of an "environment variable" from the system which will be subsituted for the macro. For example the string '(uid=${environment("REMOTE_USER")})' will become '(uid=bob)' assuming the value of REMOTE_USER was 'bob'. 
The second macro is ${replace(Source_String,Search_String,Replace_String)} which allows to replace any occurrence of Search_String
in Source_String by Replace_String. 
For example the string 'cn=${replace(${environment("REMOTE_USER")},"EUROPE\\","")},ou=people,dc=ibm,dc=com' becomes
'cn=bob,ou=people,dc=ibm,dc=com' assuming REMOTE_USER contained 'EUROPE\bob'. The replace macro in this example is used
to strip out the domain prefix of a user name, the back slash needs to be escaped by a leading back slash again.
Only a single occurrence of each macro in the string is supported.


The LDAP standards demand that several special characters must be escaped when being used as part of values of an DN or an LDAP filter.
However, some of those special characters also have a different semantic implementation when being used unescaped and
therefore the decision of escaping certain characters or not may affect the functionality and the expected result.
There are different sets of characters which are considered special characters for LDAP filters and DNs though.

Special characters which require escaping for LDAP Filter expressions: 
'*', '(', ')', '\' (back slash), '\0' (null char), '=' 

Special characters which require escaping for a Distinguished Name: 
' ' (blank), '#' ,'"' (double qoute),'+',',' (comma),';','<','>','\' (back slash),'\0' (null character) 

Depending on the type of entry in those configuration properties (DN or LDAP Filter expression), the LDAP provider will treat
the provided string differently.

LDAP Filter
===========

The current version of the IBM Cognos BI LDAP authentication provider does escape a fixed defined set of special characters 
for LDAP filters automatically. This set contains '*', '(', ')', '\' (back slash), '\0' (null char) and '='.
This means, that the first occurrence of a special character from above set in the value of a filter expression will trigger 
any occurrence of the characters from the defined set in that configured string to be escaped. This includes any part
of the string which was substituted for a macro. 
For example the string '(uid=bob*special*)' will be escaped to '(uid=bob\2aspecial\2a)' before being send to the LDAP server. 
At the same time, this does hinder the special character "*" to be used as a wildcard indicator for searches like
'(cn=Peter*,ou=people,dc=ibm,dc=com)' which should find all users with names starting with 'Peter' in the ou=people subtree.
Because the string will be escaped to '(cn=Peter\2a,ou\3dpeople,dc\3dibm,dc\3dcom)' the intended wildcard indicator is interpreted
as part of the value of the CN attribute. 
As well, the string '(uid=${replace(${environment("REMOTE_USER")},"EUROPE\\","")})' , where REMOTE_USER contains
'EUROPE\bob(1)' becomes '(uid=bob\281\29)' because substituted parts are encoded as well.

Distinguished Name (DN)
=======================
The current version of the LDAP authentication provider does NOT escape DNs at all and therefore the administrator is
expected to encode any special character for a DN explicitly in the string he enters into Cognos Configuration.
The only exception is the string which is substituted for ${UserID}, which is encoded automatically as well.

For example, the string 'cn=${UserID},ou=people,dc=ibm,dc=com' , assuming the user entered 'bob(1)' for user name at 
the prompt becomes 'cn=bob\281\29,ou=people,dc=ibm,dc=com'. However, if one of the elements of the DN contains a special
character for DNs, like '+' the administrator is expected to escape it like
'uid=${UserID},ou=sales\2bmarketing,dc=ibm,dc=com' to search in the 'sales+marketing' subtree.