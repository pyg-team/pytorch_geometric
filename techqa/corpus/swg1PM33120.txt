Title: IBM PM33120: Simple new listbox dependencies are not updated in pt_listbox.cfg - United States

Text:
 SUBSCRIBE
You can track all active APARs for this component.



APAR STATUS
 * CLOSED AS PERMANENT RESTRICTION.
    
   
   

ERROR DESCRIPTION
 *  1) When we change simple dependencies in the Lifecycle, to
   update the pt_listbox.cfg we use the following procedure:
   ##
   Preserving Listbox Values After Changing Dependencies in the
   CRProcess File
   
   Listbox dependencies are defined and values are saved in
   pt_listbox.cfg. If you change a dependency in the CRProcess file
   (XML), pt_listbox.cfg (in the wsconfig directory) will have the
   old dependency and will cause a configuration error. To preserve
   the old values, you must move pt_listbox.cfg into a package
   template (thus ensuring there is no pt_listbox.cfg in the
   wsconfig directory)
   and recreate the process package using that package template.
   This is because there is special logic in the package creation
   code that will attempt to preserve listbox values when using a
   package template. Most common changes in the dependency
   structure are handled, but 'complex' changes may require either
   manually fixing the listbox values or starting over (re-entering
   all listbox values).
   ##
   
   This procedure was in the CS43-sp2 Release notes.
   It uses to work with Chane 4.5, 4.6, 4.7.
   However, with Rational Change 5.2, this is not the case anymore.
   
   2) Here are the steps I used to reproduce the problem:
   This is tested with the dev_process.
   
   -create from the dev_process, a CR package with the
   dev_template: with no pt_listbox.cfg in the package template
   wsconfig directory.
   -Install the CR Package
   -go in the listbox manager: click on save =? the pt_listbox.cfg
   is created
   
   -edit the dev_process lifecycle.
   -Add a new listbox attribute 'toto' without dependencies.
   -Click on update/save and create a new CR package with
   dev_template
   
   -uninstall the current CR package
   -install the new CR package
   -go in the listbox manager: The new listbox toto is there.
   Add some values for it and validate + save.
   
   -Go in the lifecycle editor and edit the dev_process lifecycle.
   -create a new listbox attribute 'titi' and make it dependant on
   'toto'.
   Check that the new dependencies are correctly defined in the
   lifecycle editor, using the View Dependencies button.
   -Update, save the lifecycle, and create a new CR Package still
   using the dev_template without pt_listbox.cfg
   
   -uninstall the current CR package
   -Install the new CR Package
   -Go in the listbox manager and select the new listbox 'titi':
   =? 'titi' appears as a single listbox with no dependencies.
   (No error returned by the Validate listbox.)
   
   -Copy the pt_listbox.cfg in the dev_template/wsconfig/ directory
   -uninstall the CR package
   -Edit the lifecycle and create a new CR Package using the
   dev_template, which now contain the pt_listbox.cfg
   -Install the new CR package.
   -Go in the listbox manager and select the attribute 'titi':
   =? 'titi' is still a single Listbox which has no parent.
   
   And of course the 'View Listbox Dependencies' button does not
   show the new dependencies between toto and titi.
   Checking the pt_listbox.cfg manually shows:
   ##
   [CCM_LISTBOX][NAME]toto[/NAME][TYPE]ATTRIBUTE[/TYPE][VALUES]Any|
   toto0|toto1[/VALUES][DATABASE_SPECIFIC]NOT_DATABASE_SPECIFIC[/DA
   TABASE_SPECIFIC][/CCM_LISTBOX]
   [CCM_LISTBOX][NAME]titi[/NAME][TYPE]ATTRIBUTE[/TYPE][VALUES]Any[
   /VALUES][SUBLISTBOX]TITI_ANY[/SUBLISTBOX][DATABASE_SPECIFIC]NOT_
   DATABASE_SPECIFIC[/DATABASE_SPECIFIC][/CCM_LISTBOX]
   ##
   
   -Uninstall the CR Package.
   -Delete any pt_listbox.cfg* file
   -Edit the pt_listbox.cfg in the dev_template/wsconfig/
   -Remove the line about the attribute 'toto'.
   -edit the lifecycle and create a new CR Package with the
   dev_template
   -Install the new CR package.
   -Go in Listbox manager and select the attribute 'titi'.
   =? You can see now that the listbox 'titi' has 'toto' as a
   parent.
   
   Save and check the pt_listbox.cfg.
   You see now the dependencies:
   ##
   [CCM_LISTBOX][NAME]titi[/NAME][TYPE]ATTRIBUTE[/TYPE][VALUES]Any[
   /VALUES][SUBLISTBOX]TITI_ANY[/SUBLISTBOX][DATABASE_SPECIFIC]NOT_
   DATABASE_SPECIFIC[/DATABASE_SPECIFIC][/CCM_LISTBOX]
   [CCM_LISTBOX][NAME]toto[/NAME][TYPE]ATTRIBUTE[/TYPE][DEPENDENT_A
   TTR]titi[/DEPENDENT_ATTR][VALUES]Any[/VALUES][DATABASE_SPECIFIC]
   NOT_DATABASE_SPECIFIC[/DATABASE_SPECIFIC][/CCM_LISTBOX]
   [CCM_LISTBOX][NAME]TITI_ANY[/NAME][TYPE]SUBLISTBOX[/TYPE][VALUES
   ]Any[/VALUES][DATABASE_SPECIFIC]NOT_DATABASE_SPECIFIC[/DATABASE_
   SPECIFIC][/CCM_LISTBOX]
   ##
   
   
    
   
   

LOCAL FIX

PROBLEM SUMMARY
 *  ****************************************************************
   * USERS AFFECTED:                                              *
   ****************************************************************
   * PROBLEM DESCRIPTION:                                         *
   ****************************************************************
   * RECOMMENDATION:                                              *
   ****************************************************************
   Simple new listbox dependencies are not updated in
   pt_listbox.cfg
   
   
    
   
   

PROBLEM CONCLUSION
 *  This is an existing defect. No plan to fix. Known problem
   section will be updated.
   
   
    
   
   

TEMPORARY FIX

COMMENTS

APAR INFORMATION
 * APAR NUMBER
   PM33120
   
   
 * REPORTED COMPONENT NAME
   TLOGIC CHANGE
   
   
 * REPORTED COMPONENT ID
   5724V87CG
   
   
 * REPORTED RELEASE
   520
   
   
 * STATUS
   CLOSED PRS
   
   
 * PE
   NoPE
   
   
 * HIPER
   NoHIPER
   
   
 * SPECIAL ATTENTION
   NoSpecatt
   
   
 * SUBMITTED DATE
   2011-02-18
   
   
 * CLOSED DATE
   2012-06-11
   
   
 * LAST MODIFIED DATE
   2012-06-11
   
   

 * APAR IS SYSROUTED FROM ONE OR MORE OF THE FOLLOWING:
   
   
   
 * APAR IS SYSROUTED TO ONE OR MORE OF THE FOLLOWING:
   
   
   

FIX INFORMATION

APPLICABLE COMPONENT LEVELS