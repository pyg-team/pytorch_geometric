Title: IBM XA transactions may not be properly committed on Oracle RAC 11g - United States

Text:
 TECHNOTE (TROUBLESHOOTING)

PROBLEM(ABSTRACT)
 When performing XA transactions against a multi-node Oracle RAC 11g configuration, some branches of the transaction may not commit, yet no indication is provided of this condition. 

SYMPTOM
During AddOn installation, subsequent AddOns may fail indicating that PropertyTemplates are missing when those PropertyTemplates should have been installed via a previous AddOn.


CAUSE
A bug in Oracle RAC 11g can prevent branches of a distributed transaction from committing, thereby leaving data in an inconsistent state.

RESOLVING THE PROBLEM
When performing XA(distributed) transactions against a multi-node RAC 11g configuration, branches of the XA transaction can be sent to separate servers. If not patched with the appropriate fix or configured to work around this issue, Oracle will commit only half of the distributed transaction (assuming two resource managers) and rollback the second enlisted resource, yet no indication of such actions will be propagated back to the application server. As a result, the Content Engine believes both portions of the transaction were committed. This is typically encountered during AddOn installation of a newly created ObjectStore where a subsequently installed AddOn - that happens to depend on the results of previously installed AddOn – fails to install because something it expects to be there isn’t (i.e., a dependency is discovered missing). Errors that occur in such cases are API_PROPERTY_TEMPLATE_NOT_FOUND or E_OBJECT_MODIFIED. If this dependency was not encountered, there is no other indication that the complete XA transaction was not fully committed. 

This issue corresponds to Oracle bug 9068979. Oracle has patches available for various platforms, and one should be requested – especially if AddOn installation failures occur similar to that described above. See Metalink Note 1058819.1. In the meantime, various approaches can be implemented to work around the issue and are described below. 

Work around 1 (preferred) 

Without the patch corresponding to bug 9068979 installed, customers will need to work around the issue by disabling global transaction management. This is accomplished in one of two ways - followed by a restart of the RAC nodes. 

1. If using pfile (init.ora) files, add the following line to the file: 

_clusterwide_global_transactions=false 

2. If using an spfile, issue the following command from SQL*Plus: 

alter system set "_clusterwide_global_transactions"=false scope=spfile 

Work around 2 

Set the serverName data source property to a specific RAC node. If using multiple application server nodes, you can set different application server nodes to different RAC nodes to help distribute the load. However, please note that this solution does not take advantage of Oracle RAC’s dynamic failover and load-balancing mechanisms. 

Work around 3 

Shutdown all but one RAC node. 

These workarounds might be acceptable during only AddOn installation if you know your application will not be issuing any XA transactions (i.e., transactions against more than one repository). However, this is only recommended If you know that to be the case. 

General Configuration Guidelines - JDBC Data Source Parameters 

serverName 

Be sure that the data source property serverName is NOT set. Setting this value will cause all requests to be sent to a specific server. However, if you currently have this value set, then you are likely not encountering the XA transaction issue because all branches of the transaction will be sent to the same RAC node. As a result, should you discover that the work around did not resolve your issue, you can set the serverName property as another means of working around the issue. The problem in that case will be that you won’t be taking advantage of either the load balancing or high availability features provided by Oracle RAC. 

URL 

Be sure that your URL value is properly configured. Things to look out for are that your failover and load balancing entries are within the address list stanza. Since both failover and load-balancing values default to ‘on’, you might also consider their removal in order to simplify the value. Here’s an example URL with two servers – serverA and serverB and service serviceAB. 

jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(FAILOVER=on)(LOAD_BALANCE=on)(ADDRESS=(PROTOCOL=TCP)(HOST=serverA)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=serverB)(PORT=1521)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=serviceAB))) 

Oracle 10g 

XA transactions in Oracle 10g require the use of DTP services. Ensure that the above general configuration items are adhered to, then follow instructions in the Oracle Metalink article: How to Configure Load Balancing in an XA/RAC Environment for 10.2 and Above [ID 462060.1]