Title: IBM log4j: SCIAppender parameters summary - United States

Text:
 TECHNOTE (FAQ)

QUESTION
 Which parameters are exposed by the application to customize the SCIAppender output properties? 

ANSWER
The SCIAppender is an implementation specific to the Sterling Selling and Fulfillment Suite Foundation product and extends log4j's capabilities of where to write the logging statements to. The following parameters are exposed to customize the way how the appender generates and writes to the log file: 

maxLogSize:
It specifies the maximum number of write operations to be made to a log file. Default is 100000. 
This means it will write 100000 times to a log file and then use the next one. When you enable tracing in VERBOSE mode, one writing operation does not pertain to one line.
For example, we print out the input and output XMLs in VERBOSE mode. Each printing of an XML is one writing operation, which encloses multiple lines. This also applies when we print out Java stacks at the WARN, ERROR, ERRORDTL, or FATAL levels. 
So, when considering tracing in VERBOSE mode (this is not common in production though), or considering there are errors thrown, the log file can grow beyond 100000 lines. As we would trace production issues mostly with TIMER or SQLDEBUG, and normal logging takes place starting from INFO, the value of this parameter would then specify the number of lines per file, which can be around 2MB from our experience. 


maxNumLogs
This parameter specifies the maximum number of sci*.log files to be kept at all. The default is set to indefinite (-1). If it is set to e.g. 10, it will keep 10 log files, and then roll over the oldest one once writing to the 10th file is done. This just applies if rotateLogs is set to true. 


rotateLogs
Boolean to control if logging should be done to one log file only (false) or if log files should be split pertaining the maxLogSize parameter above (true). 


file
The path and name of the file it will write the messages to (e.g. /opt/IBM/logs/sci.log). This parameter may also be set dynamically using a variable in the startup script of Agents or Integration Servers to specify different output destinations pertaining to the process:
<param name="file" value="${LOG_PATH}" />
Then pass -DLOG_PATH=/path/to/file in the startup script. 


fileNameFormat 
This parameter specifies how the log file name format should be looking like. It can be set to "date" (this is the default), so that the file name will be sci.log.<timestamp>. It can also be set to "count", so that the file name will become sci.log.<number>, and the number will be increased once the log rotates.


Custom log4j configuration XML example
<appender name="ALL" class="com.sterlingcommerce.woodstock.util.frame.logex.SCIAppender"> 
<param name="maxLogSize" value="100000" /> 
<param name="maxNumLogs" value="10" /> 
<param name="rotateLogs" value="true" /> 
<param name="file" value="/opt/IBM/logs/sci.log" /> 
<param name="fileNameFormat" value="count" />
<layout class="com.sterlingcommerce.woodstock.util.frame.logex.SCICommonLayout">
<param name="ConversionPatternRef" value="appender.ALL.pattern"/>
<param name="DefaultConversionPattern" value="%d:%-7p:%t: %-60m [%X{AppUserId}]: %-25c{1}%n"/>
</layout>
<!-- layout class="com.sterlingcommerce.woodstock.util.frame.logex.SCIBasicLayout" / -->
<filter class="com.sterlingcommerce.woodstock.util.frame.logex.SCICommonFilter" />
<filter class="com.sterlingcommerce.woodstock.util.frame.logex.SCIPatternFilter" />
</appender>