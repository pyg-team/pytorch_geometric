name: Full Testing

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"  # Everyday at 6:00am UTC/10:00pm PST

jobs:

  full_pytest:
    if: github.repository == 'pyg-team/pytorch_geometric'
    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14]
        python-version: ['3.9']
        torch-version: [1.13.0, 2.0.0, 2.1.0, 2.2.0, 2.3.0, 2.4.0, 2.5.0, 2.6.0, nightly]
        include:
          - torch-version: 1.13.0
            torchvision-version: 0.14.0
          - torch-version: 2.0.0
            torchvision-version: 0.15.0
          - torch-version: 2.1.0
            torchvision-version: 0.16.0
          - torch-version: 2.2.0
            torchvision-version: 0.17.0
          - torch-version: 2.3.0
            torchvision-version: 0.18.0
          - torch-version: 2.4.0
            torchvision-version: 0.19.0
          - torch-version: 2.5.0
            torchvision-version: 0.20.0
          - torch-version: 2.6.0
            torchvision-version: 0.21.0
          - torch-version: nightly
            torchvision-version: nightly
        exclude:
          - os: macos-14
            torch-version: 1.13.0
          - os: macos-14
            torch-version: 2.0.0
          - os: macos-14
            torch-version: 2.1.0
          - os: macos-14
            torch-version: 2.2.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup packages
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          torch-version: ${{ matrix.torch-version }}
          torchvision-version: ${{ matrix.torchvision-version }}

      - name: Install graphviz
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get install graphviz

      - name: Install main package (torch!=nightly)
        if: ${{ matrix.torch-version != 'nightly' }}
        run: |
          echo "torch==${{ matrix.torch-version }}" > requirements-constraint.txt
          uv pip install -e ".[full,test]" --constraint requirements-constraint.txt
        shell: bash

      - name: Install main package (torch==nightly)
        if: ${{ matrix.torch-version == 'nightly' }}
        run: |
          uv pip install -e ".[full,test]"
        shell: bash

      - name: Check installation
        run: |
          uv run --no-project python -c "import torch; print('PyTorch:', torch.__version__)"
          uv run --no-project python -c "import torch; print('CUDA available:', torch.cuda.is_available())"
          uv run --no-project python -c "import torch; print('CUDA:', torch.version.cuda)"
        shell: bash

      - name: Run tests
        timeout-minutes: 20
        run: |
          FULL_TEST=1 uv run --no-project pytest --cov --cov-report=xml --durations 10
        shell: bash

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false
